{"mappings":"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","sources":["src/initializers/create-canvas.ts","src/models/gap-buffer.ts","src/models/text-row.ts","src/services/file-registry.ts","src/models/editor-highlight.ts","src/renderers/update-row-syntax-highlighing.ts","src/handlers/handle-key.ts","src/initializers/init-font-and-grid.ts","src/configuration/colors.ts","src/renderers/render-screen.ts","src/app.ts","src/models/text-content.ts","src/models/cursor.ts","src/models/scroll.ts","src/handlers/handle-click.ts","src/handlers/handle-scroll.ts"],"sourcesContent":["export function createCanvas() {\n  let ratio = window.devicePixelRatio;\n  let cv = document.getElementById(\"myCanvas\") as HTMLCanvasElement;\n  let div = document.getElementById(\"canvasContainer\");\n  cv.width = div.clientWidth;\n  cv.height = div.clientHeight;\n  // get current size of the canvas\n  let rect = div.getBoundingClientRect();\n  // increase the actual size of our canvas\n  cv.width = rect.width * ratio;\n  cv.height = rect.height * ratio;\n  // ensure all drawing operations are scaled\n  cv.getContext(\"2d\").scale(ratio, ratio);\n  // scale everything down using CSS\n  cv.style.width = rect.width + \"px\";\n  cv.style.height = rect.height + \"px\";\n\n  return { canvas: cv, context: cv.getContext(\"2d\") };\n}\n","// inspired by https://github.com/jaz303/gapbuffer\nexport class GapBuffer<T> {\n  private data: (T | undefined)[] = [];\n  private gapSize: number = 32;\n  private gapStart: number = 0;\n  private gapEnd: number = 32;\n\n  constructor(data: (T | undefined)[], gapSize = 32) {\n    const buff: (T | undefined)[] =\n      gapSize - data.length >= 0 ? Array(gapSize - data.length) : [];\n    this.data = data.concat(buff);\n    this.gapSize = gapSize;\n    this.gapEnd = gapSize > data.length ? gapSize : data.length; // points to first valid char of second buffer, if exists. otherwise, points off of array\n    this.gapStart = data.length || 0; // points at first invalid char after first buffer\n  }\n\n  get length() {\n    return this.data.length - (this.gapEnd - this.gapStart);\n  }\n\n  concat(g: GapBuffer<T>) {\n    for (const item of g) {\n      this.push(item);\n    }\n  }\n\n  delete(ix: number) {\n    this.moveGap(ix + 1);\n    this.gapStart -= 1;\n    if (this.gapStart < 0) {\n      this.gapStart = 0;\n    }\n  }\n\n  insert(ix: number, value: T) {\n    if (this.gapStart === this.gapEnd) {\n      this.data.splice(ix, 0, ...new Array(this.gapSize));\n      this.gapStart = ix;\n      this.gapEnd = ix + this.gapSize;\n    } else {\n      this.moveGap(ix);\n    }\n    this.data[this.gapStart++] = value;\n  }\n\n  get(ix: number) {\n    if (ix >= this.gapStart) {\n      return this.data[ix + (this.gapEnd - this.gapStart)];\n    }\n    return this.data[ix];\n  }\n\n  push(value: T) {\n    this.insert(this.length, value);\n  }\n\n  pop() {\n    this.moveGap(this.length);\n    this.gapStart -= 1;\n    if (this.gapStart < 0) {\n      this.gapStart = 0;\n    }\n  }\n  /**\n   *\n   * @param ix index to move gap to\n   */\n  private moveGap(ix: number) {\n    if (ix < this.gapStart) {\n      // ix is less than current gap start\n      // need to shift elemnts to the right of the ix further right\n\n      // ex insert x into ix 1\n      // how far to shift - ix 1, need to shift 2,32 over\n      // [1,2,3,_,_,4,5]\n      // [  ^   *   *  ]\n      // delta = 32 - 1 = 2\n      let delta = this.gapStart - ix;\n\n      for (let i = delta - 1; i >= 0; i--) {\n        // gapEnd = 5\n        // i = 2 - 1 = 1\n        // this.data[4] = this.data[2]\n        // [1,2,32,_,32,4,5]\n        // i = 1 - 1 = 0\n        // this.data[32] = this.data[1]\n        // [1,2,32,2,32,4,5]\n        this.data[this.gapEnd - delta + i] = this.data[ix + i];\n      }\n      // [1,2,32,2,32,4,5]\n      // [  ^   *   *  ]\n      this.gapStart -= delta;\n      this.gapEnd -= delta;\n      // [1,2,32,2,32,4,5]\n      // [  *   *      ]\n    } else {\n      // Same logic as above but opposite\n      let delta = ix - this.gapStart;\n      for (let i = 0; i < delta; ++i) {\n        this.data[this.gapStart + i] = this.data[this.gapEnd + i];\n      }\n      this.gapStart += delta;\n      this.gapEnd += delta;\n    }\n  }\n\n  get _arr() {\n    return this.data\n      .slice(0, this.gapStart)\n      .concat(this.data.slice(this.gapEnd));\n  }\n\n  /**\n   * Allow for GapBuffer to be iterable like an array\n   */\n  *[Symbol.iterator]() {\n    let ix = 0;\n    while (ix < this.data.length) {\n      if (ix < this.gapStart || ix >= this.gapEnd) {\n        yield this.data[ix];\n        ix += 1;\n      } else {\n        ix += 1;\n      }\n    }\n  }\n\n  *entries() {\n    let publicIndex = 0;\n    let ix = 0;\n    while (ix < this.data.length) {\n      if (ix < this.gapStart || ix >= this.gapEnd) {\n        yield [publicIndex, this.data[ix]];\n        ix += 1;\n        publicIndex += 1;\n      } else {\n        ix += 1;\n      }\n    }\n  }\n}\n","import { GapBuffer } from \"./gap-buffer\";\n\nexport class TextRow<T> {\n  private _text: GapBuffer<T>;\n\n  constructor(array?: T[]) {\n    this._text = new GapBuffer<T>(array || []);\n  }\n\n  clone() {\n    return new TextRow([...this._text]);\n  }\n\n  /**\n   * @deprecated\n   * Makes a copy of the internal array. Avoid in hot loops\n   */\n  get text(): T[] {\n    return [...this._text];\n  }\n\n  get(ix: number) {\n    return this._text.get(ix);\n  }\n\n  /**\n   * An internal method only used by concat, need to improve api to hide this\n   */\n  get gb() {\n    return this._text;\n  }\n\n  get length(): number {\n    return this._text.length;\n  }\n\n  charAtIndex(i: number) {\n    return this._text.get(i);\n  }\n\n  entries() {\n    return this._text.entries();\n  }\n\n  concat(row: TextRow<T>): TextRow<T> {\n    this._text.concat(row.gb);\n    return this;\n  }\n\n  insertValueAt(index: number, value: T): void {\n    this._text.insert(index, value);\n  }\n\n  push(value: T): void {\n    this._text.push(value);\n  }\n\n  pop(): void {\n    this._text.pop();\n  }\n\n  deleteValueAt(index: number): void {\n    this._text.delete(index);\n  }\n}\n","// import { fs, dialog, BaseDirectory } from \"@tauri-apps/api\";\n\nimport { TextContent } from \"../models/text-content\";\n\nexport namespace FileRegistry {\n  export function getFileContents(file: File): Promise<string> {\n    return file.text();\n  }\n\n  export async function saveFileContents(name: string, tc: TextContent) {\n    // create a new handle\n    const newHandle = await window.showSaveFilePicker({ suggestedName: name });\n\n    // create a FileSystemWritableFileStream to write to\n    const writableStream = await newHandle.createWritable();\n\n    // write our file\n    await writableStream.write(tc.toArrayBuffer());\n\n    // close the file and write the contents to disk.\n    return await writableStream.close();\n  }\n\n  /**\n   * Opens file select prompt and returns the selected file object\n   * @returns File object\n   */\n  export async function promptFileSelect(): Promise<File> {\n    const fileHandlerList = await window.showOpenFilePicker({\n      multiple: false,\n    });\n    const file = await fileHandlerList[0].getFile();\n    return file;\n  }\n}\n","export enum EditorHighlight {\n  HL_NORMAL = 0,\n  HL_NUMBER = 1,\n  HL_STRING = 2,\n  HL_COMMENT = 3,\n  HL_KEYWORD1 = 4,\n  HL_KEYWORD2 = 5,\n}\n","import { EditorHighlight } from \"../models/editor-highlight\";\nimport { TextRow } from \"../models/text-row\";\n\nexport const KEYWORDS1 = new Set([\"export\", \"import\", \"new\"]);\n\nexport const KEYWORDS1SET = new Set(KEYWORDS1);\n\nexport const KEYWORDS = [\n  \"await\",\n  \"break\",\n  \"case\",\n  \"class\",\n  \"const\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"delete\",\n  \"do\",\n  \"else\",\n  \"enum\",\n  \"export\",\n  \"extends\",\n  \"false\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"implements\",\n  \"import\",\n  \"in\",\n  \"interface\",\n  \"let\",\n  \"new\",\n  \"null\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"return\",\n  \"static\",\n  \"super\",\n  \"switch\",\n  \"this\",\n  \"throw\",\n  \"try\",\n  \"var\",\n].concat([...KEYWORDS1]);\n\nfunction isComment(r: TextRow<string>) {\n  return r.get(0) === \"/\" && r.get(1) === \"/\";\n}\n\nfunction isDigit(s: string) {\n  return !isNaN(Number(s));\n}\n\nfunction isSeparator(s: string) {\n  return isWhitespace(s) || s === \"\\0\" || !!s.match(\"/^[,.()+-/*=~%<>;]/\");\n}\n\nfunction isWhitespace(s: string) {\n  return s?.trim().length === 0 || s === undefined;\n}\n\n// Row based syntax highlighting\nexport function updateRowSyntaxHighlighting(row: TextRow<string>) {\n  const HLArr = Array(row.length).fill(EditorHighlight.HL_NORMAL);\n\n  // store if prev char was a separator char\n  let prev_sep = true;\n  // store whether currently in a string, and which character was used to start the string\n  let in_string: string | undefined = undefined;\n\n  let i = 0;\n  while (i < row.length) {\n    const ch = row.get(i);\n\n    // handle string highlighting\n    if (in_string !== undefined) {\n      HLArr.splice(i, 1, EditorHighlight.HL_STRING);\n      if (ch === \"\\\\\" && i + 1 < row.length) {\n        HLArr.splice(i, 1, EditorHighlight.HL_STRING);\n        i++;\n      }\n      if (ch === in_string) {\n        in_string = undefined;\n      }\n      prev_sep = true;\n    } else if (ch === '\"' || ch === \"'\") {\n      in_string = ch;\n      HLArr.splice(i, 1, EditorHighlight.HL_STRING);\n    }\n\n    // handle number highlighting\n    if (\n      (isDigit(ch) &&\n        (prev_sep || HLArr[i - 1] === EditorHighlight.HL_NUMBER)) ||\n      (ch == \".\" && HLArr[i - 1] == EditorHighlight.HL_NUMBER)\n    ) {\n      HLArr.splice(i, 1, EditorHighlight.HL_NUMBER);\n    }\n\n    // handle comments\n    if (isComment(row)) {\n      HLArr.length = row.length;\n      HLArr.fill(EditorHighlight.HL_COMMENT);\n      i = row.length;\n    }\n\n    const old_prev_sep = prev_sep;\n    prev_sep = isSeparator(ch);\n\n    // keywords\n    if (old_prev_sep) {\n      // if the prev char was a seperator, check if next n chars in row is a keyword\n      for (const kw of KEYWORDS) {\n        // For now, just loop through keywords (inefficent)\n        // using length klen of keyword\n        const klen = kw.length;\n        // get the next klen chars of the current row to see if it is a keyword\n        const cw = row.text.slice(i, i + klen).join(\"\");\n        if (cw === kw && row.get(i + klen) && isSeparator(row[i + klen])) {\n          const secondary = KEYWORDS1SET.has(cw);\n          // It is a keyword, mark it in the HL array\n          for (let j = 0; j < klen; j++) {\n            if (secondary) {\n              HLArr.splice(i + j, 1, EditorHighlight.HL_KEYWORD2);\n            } else {\n              HLArr.splice(i + j, 1, EditorHighlight.HL_KEYWORD1);\n            }\n          }\n          // move index past the current key word to skip reprocessing\n          i += klen;\n          prev_sep = true;\n          break;\n        }\n      }\n    }\n\n    i++;\n  }\n  return HLArr;\n}\n","import {\n  textContent,\n  cursor,\n  canvas,\n  context,\n  scroller,\n  requestRender,\n} from \"../app\";\nimport { TextRow } from \"../models/text-row\";\nimport { FileRegistry } from \"../services/file-registry\";\nimport { updateRowSyntaxHighlighting } from \"../renderers/update-row-syntax-highlighing\";\n\nconst OPEN_BRACKETS = new Set([\"[\", \"{\", \"(\", '\"', \"'\"]);\nconst BRACKETS_PAIR = {\n  \"{\": \"}\",\n  \"[\": \"]\",\n  \"(\": \")\",\n  '\"': '\"',\n  \"'\": \"'\",\n};\n\nexport function handleKey(e: KeyboardEvent) {\n  e.preventDefault();\n  // Two meta keys\n  if (e.metaKey && e.shiftKey && [\"ArrowUp\", \"ArrowDown\"].includes(e.code)) {\n    switch (e.code) {\n      case \"ArrowDown\": {\n        scroller.scrollDown();\n        requestRender();\n        break;\n      }\n      case \"ArrowUp\": {\n        scroller.scrollUp();\n        requestRender();\n        break;\n      }\n      default:\n        break;\n    }\n  }\n  // Single meta key\n  if (e.metaKey || e.ctrlKey) {\n    switch (e.code) {\n      case \"KeyO\": {\n        FileRegistry.promptFileSelect().then((file) =>\n          FileRegistry.getFileContents(file).then((data) => {\n            textContent.readFromFile(file.name, data);\n            requestRender();\n          })\n        );\n        break;\n      }\n      case \"KeyS\": {\n        FileRegistry.saveFileContents(textContent.name, textContent).then(\n          () => {\n            alert(`${textContent.name} saved`);\n          }\n        );\n        break;\n      }\n      case \"KeyX\": {\n        textContent.clearBuffer();\n        textContent.addRowToBuffer(textContent.rowAt(cursor.Y));\n        if (textContent.length > 1) {\n          textContent.removeRowAt(cursor.Y);\n        } else {\n          textContent.removeRowAt(cursor.Y);\n          textContent.insertNewRowAt(cursor.Y, new TextRow());\n        }\n        // Arrow up logic\n        const charAbove = textContent.charAt(cursor.X, cursor.Y - 1);\n        const rowAbove = textContent.rowAt(cursor.Y - 1);\n        if (charAbove) {\n          cursor.moveUp();\n        } else if (rowAbove) {\n          cursor.setPosition([rowAbove.length, cursor.Y - 1]);\n        }\n        break;\n      }\n      case \"KeyC\": {\n        textContent.clearBuffer();\n        textContent.addRowToBuffer(textContent.rowAt(cursor.Y));\n        break;\n      }\n      case \"KeyV\": {\n        textContent.insertNewRowsAt(cursor.Y, textContent.buffer);\n        // end of line\n        cursor.setPosition([textContent.rowAt(cursor.Y).length, cursor.Y]);\n        break;\n      }\n      default:\n        break;\n    }\n  } else {\n    // Default key press input\n    let currentRow = textContent.rowAt(cursor.Y);\n    switch (e.code) {\n      case \"Escape\": {\n        break;\n      }\n      case \"MetaRight\": {\n        break;\n      }\n      case \"MetaLeft\": {\n        break;\n      }\n      case \"ShiftLeft\": {\n        break;\n      }\n      case \"ShiftRight\": {\n        break;\n      }\n      case \"ArrowLeft\": {\n        cursor.moveLeft();\n        break;\n      }\n      case \"ArrowRight\": {\n        cursor.moveRight();\n        break;\n      }\n      case \"ArrowUp\": {\n        cursor.moveUp();\n        break;\n      }\n      case \"ArrowDown\": {\n        cursor.moveDown();\n        break;\n      }\n      case \"Enter\": {\n        // end of line, just move to new line\n        if (cursor.X === textContent.rowAt(cursor.Y).length) {\n          textContent.insertNewRowAt(cursor.Y + 1);\n          cursor.setPosition([0, cursor.Y + 1]);\n        }\n        // middle of line, split line into two\n        else {\n          const rowToSpit = textContent.rowAt(cursor.Y),\n            firstLine = rowToSpit.text.slice(0, cursor.X),\n            secondLine = rowToSpit.text.slice(cursor.X, rowToSpit.length);\n          textContent.replaceRowAt(cursor.Y, new TextRow<string>(firstLine));\n          textContent.insertNewRowAt(cursor.Y + 1);\n          textContent.replaceRowAt(\n            cursor.Y + 1,\n            new TextRow<string>(secondLine)\n          );\n          cursor.setPosition([0, cursor.Y + 1]);\n        }\n        break;\n      }\n      case \"Backspace\": {\n        if (cursor.X > 0) {\n          // delete item behind cursor\n          currentRow.deleteValueAt(cursor.X - 1);\n          cursor.moveLeft();\n        } else {\n          // if prev line exist,\n          if (textContent.text[cursor.Y - 1]) {\n            // handle merge of prev line and current line\n            const orgLen = textContent.rowAt(cursor.Y - 1).length;\n            const newRow = textContent\n              .rowAt(cursor.Y - 1)\n              .concat(textContent.text[cursor.Y]);\n            textContent.replaceRowAt(cursor.Y - 1, newRow);\n            textContent.removeRowAt(cursor.Y);\n            cursor.setPosition([orgLen, cursor.Y - 1]);\n          }\n          // there is no prev line, we are already at the first row\n          // leave cursor where it is\n        }\n        break;\n      }\n      case \"Tab\": {\n        currentRow.push(\" \");\n        currentRow.push(\" \");\n        currentRow.push(\" \");\n        currentRow.push(\" \");\n        cursor.moveRight(4);\n        break;\n      }\n      default:\n        if (OPEN_BRACKETS.has(e.key)) {\n          currentRow.insertValueAt(cursor.X, e.key);\n          cursor.moveRight();\n          currentRow.insertValueAt(cursor.X, BRACKETS_PAIR[e.key]);\n        } else {\n          currentRow.insertValueAt(cursor.X, e.key);\n          cursor.moveRight();\n        }\n        break;\n    }\n  }\n\n  textContent.textHL[cursor.Y] = updateRowSyntaxHighlighting(\n    textContent.rowAt(cursor.Y)\n  );\n  requestRender();\n}\n","export function initFontAndGrid(context: CanvasRenderingContext2D) {\n  // Initialize font size\n  const fontSize = 16;\n  const linePadding = 4;\n  const font = \"Courier New\";\n  context.font = `${fontSize}px ${font}`;\n\n  // Width and height of a single character, used to determine grid\n  const charXY: [width: number, height: number] = [\n    context.measureText([\"a\"].join(\"\")).width,\n    fontSize + linePadding,\n  ];\n  return {\n    font,\n    fontSize,\n    linePadding,\n    charXY,\n  };\n}\n","export const colors = {\n  background: \"#282a36\",\n  keyword: \"#ff79c6\",\n  title: \"#50fa7b\",\n  text: \"#f8f8f2\",\n  link: \"#8be9fd\",\n  string: \"#f1fa8c\",\n  cursor: \"#8be9fd\",\n  comment: \"#6272a4\",\n  number: \"#bd93f9\",\n};\n","import { colors } from \"../configuration/colors\";\nimport { charXY, cursor, textContent, scroller } from \"../app\";\nimport { EditorHighlight } from \"../models/editor-highlight\";\n\nexport function renderText(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D\n) {\n  // Store the current transformation matrix\n  context.save();\n\n  // Use the identity matrix while clearing the canvas\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.clearRect(0, 0, canvas.width, canvas.height);\n\n  // Restore the transform\n  context.restore();\n\n  context.fillStyle = colors.background;\n  context.fillRect(0, Math.abs(scroller.Y), canvas.width, canvas.height);\n\n  for (const [indexY, row] of textContent.text.entries()) {\n    // move this to update text row\n\n    context.fillStyle = colors.text;\n    for (const [indexX, char] of row.entries()) {\n      context.save();\n      if (textContent.textHL[indexY][indexX] === EditorHighlight.HL_NUMBER) {\n        context.fillStyle = colors.number;\n      } else if (\n        textContent.textHL[indexY][indexX] === EditorHighlight.HL_STRING\n      ) {\n        context.fillStyle = colors.string;\n      } else if (\n        textContent.textHL[indexY][indexX] === EditorHighlight.HL_COMMENT\n      ) {\n        context.fillStyle = colors.comment;\n      } else if (\n        textContent.textHL[indexY][indexX] === EditorHighlight.HL_KEYWORD1\n      ) {\n        context.fillStyle = colors.keyword;\n      } else if (\n        textContent.textHL[indexY][indexX] === EditorHighlight.HL_KEYWORD2\n      ) {\n        context.fillStyle = colors.link;\n      }\n      context.fillText(char, charXY[0] * indexX, charXY[1] * (indexY + 1));\n      context.restore();\n    }\n  }\n}\n\nexport function renderCursor(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D\n) {\n  context.save();\n  context.beginPath();\n  context.moveTo(cursor.X * charXY[0] + 2, cursor.Y * charXY[1] + 1);\n  context.lineTo(\n    cursor.X * charXY[0] + 2,\n    cursor.Y * charXY[1] + charXY[1] + 4\n  );\n  context.lineWidth = 2;\n  context.strokeStyle = colors.cursor;\n  context.stroke();\n  context.restore();\n}\n\nexport function renderScreen(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D\n) {\n  renderText(canvas, context);\n  renderCursor(canvas, context);\n}\n","import { createCanvas } from \"./initializers/create-canvas\";\nimport { Cursor } from \"./models/cursor\";\nimport { Scroll } from \"./models/scroll\";\nimport { handleKey, handleClick } from \"./handlers\";\nimport { initFontAndGrid } from \"./initializers/init-font-and-grid\";\nimport { renderScreen } from \"./renderers/render-screen\";\nimport { TextContent } from \"./models/text-content\";\nimport { FileRegistry } from \"./services/file-registry\";\nimport { handleScroll } from \"./handlers/handle-scroll\";\n\nexport const { canvas, context } = createCanvas();\nexport const { font, fontSize, linePadding, charXY } = initFontAndGrid(context);\nexport const textContent = new TextContent(charXY);\nexport const cursor = new Cursor(canvas, context, textContent);\nexport const scroller = new Scroll(canvas, context, textContent);\n\nexport function requestRender() {\n  window.requestAnimationFrame(() => renderScreen(canvas, context));\n}\n\ndocument.addEventListener(\"keydown\", handleKey);\ncanvas.addEventListener(\"mousedown\", handleClick);\nwindow.addEventListener(\"wheel\", handleScroll);\nwindow.addEventListener(\"resize\", () => {\n  createCanvas();\n  initFontAndGrid(context);\n  requestRender();\n});\ndocument.getElementById(\"openFileButton\").addEventListener(\"click\", () => {\n  FileRegistry.promptFileSelect().then((file) =>\n    FileRegistry.getFileContents(file).then((data) => {\n      textContent.readFromFile(file.name, data);\n      requestRender();\n    })\n  );\n});\ndocument.getElementById(\"saveFileButton\").addEventListener(\"click\", () => {\n  FileRegistry.saveFileContents(textContent.name, textContent).then(() => {\n    alert(`${textContent.name} saved`);\n  });\n});\n\nrequestRender();\n","import { EditorHighlight } from \"./editor-highlight\";\nimport { TextRow } from \"./text-row\";\nimport { updateRowSyntaxHighlighting } from \"../renderers/update-row-syntax-highlighing\";\n\nexport class TextContent {\n  private _text: TextRow<string>[] = [new TextRow()];\n  private _text_hl: EditorHighlight[][] = [[]];\n  private _buffer: TextRow<string>[] = [];\n  private _fileName: string = \"untitled.txt\";\n  private _charXY: [number, number];\n  constructor(charXY: [number, number]) {\n    this._charXY = charXY;\n  }\n\n  get contentHeight() {\n    return this._text.length * this._charXY[1];\n  }\n\n  readFromFile(name: string, s: string) {\n    this._fileName = name || \"untitled.txt\";\n    const rows = s.split(\"\\n\");\n    const rowOfRows = [];\n    const rowOfRowsHL = [];\n    for (const rowIn of rows) {\n      const r = new TextRow(rowIn.split(\"\"));\n      rowOfRows.push(r);\n      rowOfRowsHL.push(updateRowSyntaxHighlighting(r));\n    }\n    this._text = rowOfRows;\n    this._text_hl = rowOfRowsHL;\n  }\n\n  get name() {\n    return this._fileName;\n  }\n\n  toArrayBuffer() {\n    const flattenedArr: string = this._text\n      .reduce((prev, curr) => prev.concat([...curr.text, \"\\n\"]), [])\n      .join(\"\");\n    var buf = new ArrayBuffer(flattenedArr.length); // 2 bytes for each char\n    var bufView = new Uint8Array(buf);\n    for (let i = 0, strLen = flattenedArr.length; i < strLen; i++) {\n      bufView[i] = flattenedArr.charCodeAt(i);\n    }\n    return buf;\n  }\n\n  get length() {\n    return this.text.length;\n  }\n\n  get buffer() {\n    return this._buffer;\n  }\n\n  addRowToBuffer(row: TextRow<string>) {\n    this._buffer.push(row.clone());\n  }\n\n  setBuffer(rows: TextRow<string>[]) {\n    this._buffer = rows.map((r) => r.clone());\n  }\n\n  clearBuffer() {\n    this._buffer = [];\n  }\n\n  get text(): TextRow<string>[] {\n    return this._text;\n  }\n\n  get textHL() {\n    return this._text_hl;\n  }\n\n  rowAt(y: number): TextRow<string> {\n    return this._text[y];\n  }\n\n  charAt(x: number, y: number) {\n    const row = this._text[y];\n    if (row) {\n      return row.get(x);\n    }\n    return undefined;\n  }\n\n  insertNewRowAt(y: number, row = new TextRow<string>()): void {\n    this._text.splice(y, 0, row);\n  }\n\n  insertNewRowsAt(y: number, rows: TextRow<string>[] = []): void {\n    this._text.splice(y, 0, ...rows);\n  }\n\n  replaceRowAt(y: number, withRow: TextRow<string>): void {\n    this._text[y] = withRow;\n  }\n\n  removeRowAt(y: number): void {\n    this._text.splice(y, 1);\n  }\n}\n","export class Cursor {\n  private cursorX: number = 0;\n  private cursorY: number = 0;\n  private cursorVisible: boolean = true;\n  private _context = undefined;\n  private _canvas = undefined;\n  private _textContent: TextContent;\n\n  constructor(canvas, context, textArea: TextContent) {\n    this._textContent = textArea;\n    this._context = context;\n    this._canvas = canvas;\n  }\n\n  get X(): number {\n    return this.cursorX;\n  }\n\n  get Y(): number {\n    return this.cursorY;\n  }\n\n  setPosition([x, y]) {\n    this.cursorX = x;\n    this.cursorY = y;\n  }\n\n  get position() {\n    return [this.cursorX, this.cursorY];\n  }\n\n  moveRight(by: number = 1) {\n    if (this._textContent.charAt(this.cursorX, this.cursorY)) {\n      this.cursorX += by;\n    } else if (this._textContent.rowAt(this.cursorY)) {\n      this.setPosition([\n        this._textContent.rowAt(this.cursorY).length,\n        this.cursorY,\n      ]);\n    }\n  }\n\n  moveLeft(by: number = 1) {\n    if (this.cursorX - by >= 0) {\n      this.cursorX -= by;\n    }\n  }\n\n  moveUp(by: number = 1) {\n    if (this.cursorY - by >= 0) {\n      const charAbove = this._textContent.charAt(\n        this.cursorX,\n        this.cursorY - 1\n      );\n      const rowAbove = this._textContent.rowAt(this.cursorY - 1);\n      if (charAbove) {\n        this.cursorY -= by;\n      } else if (rowAbove) {\n        this.setPosition([rowAbove.length, this.cursorY - 1]);\n      }\n    }\n  }\n\n  moveDown(by: number = 1) {\n    const charBelow = this._textContent.charAt(this.cursorX, this.cursorY + 1);\n    const rowBelow = this._textContent.rowAt(this.cursorY + 1);\n    if (charBelow) {\n      this.cursorY += by;\n    } else if (rowBelow) {\n      this.setPosition([rowBelow.length, this.cursorY + 1]);\n    }\n  }\n}\n","import { TextContent } from \"./text-content\";\n\nexport class Scroll {\n  private cursorX: number = 0;\n  private cursorY: number = 0;\n  private _context = undefined;\n  private _canvas = undefined;\n  private _textContent: TextContent;\n  constructor(canvas, context, textContent: TextContent) {\n    this._context = context;\n    this._canvas = canvas;\n    this._textContent = textContent;\n  }\n\n  get X(): number {\n    return this.cursorX;\n  }\n\n  get Y(): number {\n    return this.cursorY;\n  }\n\n  scrollUp(by: number = 200) {\n    if (this.cursorY >= 0) {\n      this.cursorY == 0;\n    } else if (this.cursorY + by > 0) {\n      this._context.translate(0, Math.abs(this.cursorY));\n      this.cursorY += Math.abs(this.cursorY);\n    } else {\n      this.cursorY += by;\n      this._context.translate(0, by);\n    }\n  }\n\n  // Todo: scroll speed leads to different results\n  scrollDown(by: number = 200) {\n    if (\n      Math.abs(this.cursorY) + this._canvas.getBoundingClientRect().height <\n      this._textContent.contentHeight\n    ) {\n      this.cursorY -= by;\n      this._context.translate(0, 0 - by);\n    } else if (\n      Math.abs(this.cursorY) + this._canvas.getBoundingClientRect().height >=\n      this._textContent.contentHeight\n    ) {\n      // Do nothing\n    } else {\n      const remainingHeight =\n        Math.abs(this.cursorY) +\n        this._canvas.getBoundingClientRect().height -\n        this._textContent.contentHeight;\n      this.cursorY -= remainingHeight;\n      this._context.translate(0, 0 - remainingHeight);\n    }\n  }\n}\n","import {\n  textContent,\n  cursor,\n  canvas,\n  context,\n  charXY,\n  scroller,\n  requestRender,\n} from \"../app\";\n\nexport function getCharPositionFromCanvasPosition(\n  clientX,\n  clientY\n): [x: number, y: number] {\n  const rect = canvas.getBoundingClientRect();\n  const x = Math.round((scroller.X + clientX - rect.left) / charXY[0]);\n  const y =\n    Math.round((Math.abs(scroller.Y) + clientY - rect.top) / charXY[1]) - 1;\n  return [x, y];\n}\n\nexport function handleClick(event: MouseEvent) {\n  const [x, y]: [number, number] = getCharPositionFromCanvasPosition(\n    event.clientX,\n    event.clientY\n  );\n  if (textContent.charAt(x, y)) {\n    cursor.setPosition([x, y]);\n  } else if (textContent.rowAt(y)) {\n    cursor.setPosition([textContent.rowAt(y).length, y]);\n  }\n  requestRender();\n}\n","import { renderScreen } from \"../renderers/render-screen\";\nimport {\n  textContent,\n  cursor,\n  canvas,\n  context,\n  scroller,\n  requestRender,\n} from \"../app\";\nimport { TextRow } from \"../models/text-row\";\nimport { FileRegistry } from \"../services/file-registry\";\n\nexport function handleScroll(e: WheelEvent) {\n  const yscroll = e.deltaY;\n  if (yscroll > 0) {\n    scroller.scrollDown(Math.abs(yscroll));\n  } else {\n    scroller.scrollUp(Math.abs(yscroll));\n  }\n  requestRender();\n}\n"],"names":["$6a70f3eb2304cf39$export$cd3d1f114b139967","ratio","window","devicePixelRatio","cv","document","getElementById","div","width","clientWidth","height","clientHeight","rect","getBoundingClientRect","getContext","scale","style","canvas","context","$03a16a842b07cc30$export$c6fe3936e6366f70","data","gapSize","this","gapStart","gapEnd","buff","length","Array","concat","g","item","push","delete","ix","moveGap","insert","value","splice","get","pop","delta","i","_arr","slice","Symbol","iterator","publicIndex","$1c58683fe1a64031$export$63e2a8b9f6372df7","array","_text","clone","text","gb","charAtIndex","entries","row","insertValueAt","index","deleteValueAt","$e7b21b2df11b04ee$export$582250794ca52d9c","getFileContents","file","saveFileContents","name","tc","newHandle","showSaveFilePicker","suggestedName","writableStream","createWritable","write","toArrayBuffer","close","promptFileSelect","fileHandlerList","showOpenFilePicker","multiple","getFile","$7e28cedeb61716a4$export$eeb4adacbff52521","$74a1630e391a5f1d$export$33a13745f5692414","Set","$74a1630e391a5f1d$export$b2089216fe419d98","$74a1630e391a5f1d$export$5b243cfa8f80d63b","$74a1630e391a5f1d$var$isSeparator","s","trim","undefined","$74a1630e391a5f1d$var$isWhitespace","match","$74a1630e391a5f1d$export$303d989387e35475","HLArr","fill","HL_NORMAL","in_string","prev_sep","ch","HL_STRING","isNaN","Number","HL_NUMBER","r","HL_COMMENT","old_prev_sep","kw","klen","cw","join","secondary","has","j","HL_KEYWORD2","HL_KEYWORD1","$04f270dc7db7277e$var$OPEN_BRACKETS","$04f270dc7db7277e$var$BRACKETS_PAIR","$e4b0f428631606fd$export$da9525949819ea40","font","measureText","fontSize","$f7e6de5c7da2669a$export$8f45430ccf837300","$13f717a4bbe24257$export$fdfa2e9363bf938e","save","setTransform","clearRect","restore","fillStyle","fillRect","Math","abs","$f43313d21d3fd8e2$export$f0c6b23f5e8dd3c1","Y","indexY","$f43313d21d3fd8e2$export$e0e0794250e9118f","indexX","char","textHL","fillText","$f43313d21d3fd8e2$export$786302a38e97b5be","$13f717a4bbe24257$export$482c90f94eb9717c","beginPath","moveTo","$f43313d21d3fd8e2$export$58734539bbfa41a2","X","lineTo","lineWidth","strokeStyle","stroke","$13f717a4bbe24257$export$2fd24a2aa60fc106","$f43313d21d3fd8e2$export$67ea982130081db","$f43313d21d3fd8e2$export$a078c61943f9dbbe","$f43313d21d3fd8e2$export$a74e2025f5286b02","$f43313d21d3fd8e2$export$85e3c3ca0c6fb93","linePadding","$f43313d21d3fd8e2$export$2236a8f6725eca69","charXY","_text_hl","_buffer","_fileName","_charXY","contentHeight","readFromFile","rows","split","rowOfRows","rowOfRowsHL","rowIn","flattenedArr","reduce","prev","curr","buf","ArrayBuffer","bufView","Uint8Array","strLen","charCodeAt","buffer","addRowToBuffer","setBuffer","map","clearBuffer","rowAt","y","charAt","x","insertNewRowAt","insertNewRowsAt","replaceRowAt","withRow","removeRowAt","textArea","cursorX","cursorY","cursorVisible","_context","_canvas","_textContent","setPosition","position","moveRight","by","moveLeft","moveUp","charAbove","rowAbove","moveDown","charBelow","rowBelow","textContent","scrollUp","translate","scrollDown","remainingHeight","$f43313d21d3fd8e2$export$4e43dc34db4a80af","requestAnimationFrame","addEventListener","e","preventDefault","metaKey","shiftKey","includes","code","ctrlKey","then","alert","currentRow","rowToSpit","firstLine","secondLine","orgLen","newRow","key","event","clientX","clientY","round","left","top","$f99a71eeadf618a9$export$5cc6687e4fba1dbf","yscroll","deltaY"],"version":3,"file":"index.5f7326d0.js.map"}