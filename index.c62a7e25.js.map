{"mappings":"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","sources":["src/handlers/handle-click.ts","src/models/gap-buffer.ts","src/models/text-row.ts","src/services/file-registry.ts","src/models/editor-highlight.ts","src/renderers/update-row-syntax-highlighing.ts","src/handlers/handle-key.ts","src/handlers/handle-toggle-file-menu.ts","src/initializers/initialize-canvas.ts","src/models/font-context.ts","src/configuration/colors.ts","src/renderers/render-screen.ts","src/app.ts","src/models/theme-provider.ts","src/models/text-content.ts","src/models/line-number-context.ts","src/models/cursor.ts","src/models/scroll.ts","src/handlers/handle-scroll.ts"],"sourcesContent":["import { requestRender } from \"../app\";\nimport {\n  Cursor,\n  TextContent,\n  FontContext,\n  LineNumberContext,\n  Scroll,\n} from \"../models\";\n\nexport function getCharPositionFromCanvasPosition(\n  canvas: HTMLCanvasElement,\n  fontContext: FontContext,\n  lineNumberContext: LineNumberContext,\n  scroll: Scroll,\n  clientWidth,\n  clientHeight\n): [x: number, y: number] {\n  const rect = canvas.getBoundingClientRect();\n  const x = Math.round(\n    (scroll.X + clientWidth - rect.left - lineNumberContext.offset) /\n      fontContext.width\n  );\n  const y =\n    Math.round(\n      (Math.abs(scroll.Y) + clientHeight - rect.top) / fontContext.height\n    ) - 1;\n  return [x, y];\n}\n\nexport function handleClick(\n  event: MouseEvent,\n  canvas: HTMLCanvasElement,\n  textContent: TextContent,\n  fontContext: FontContext,\n  lineNumberContext: LineNumberContext,\n  cursor: Cursor,\n  scroll: Scroll\n) {\n  const [x, y]: [number, number] = getCharPositionFromCanvasPosition(\n    canvas,\n    fontContext,\n    lineNumberContext,\n    scroll,\n    event.clientX,\n    event.clientY\n  );\n  if (textContent.charAt(x, y)) {\n    cursor.setPosition([x, y]);\n  } else if (textContent.rowAt(y)) {\n    cursor.setPosition([textContent.rowAt(y).length, y]);\n  }\n  requestRender();\n}\n","interface IArray<T> {\n  length: number;\n  concat: (g: Iterable<T>) => void;\n  delete: (ix: number) => void;\n  insert: (ix: number, value: T) => void;\n  get: (ix: number) => T;\n  slice: (ix: number, ix2: number) => Iterable<T>;\n  push: (val: T) => void;\n  pop: () => T;\n  entries: () => Generator<[number, T], void, unknown>;\n}\n\n// inspired by https://github.com/jaz303/gapbuffer\nexport class GapBuffer<T> implements IArray<T> {\n  private data: (T | undefined)[] = [];\n  private gapSize = 64;\n  private gapStart = 0;\n  private gapEnd = 64;\n\n  constructor(data: (T | undefined)[], gapSize = 64) {\n    const buff: (T | undefined)[] =\n      gapSize - data.length >= 0 ? Array(gapSize - data.length).fill(\" \") : [];\n    this.data = data.concat(buff);\n    this.gapSize = gapSize;\n    this.gapEnd = gapSize > data.length ? gapSize : data.length; // points to first valid char of second buffer, if exists. otherwise, points off of array\n    this.gapStart = data.length || 0; // points at first invalid char after first buffer\n  }\n\n  get length() {\n    return this.data.length - (this.gapEnd - this.gapStart);\n  }\n\n  concat(g: Iterable<T>) {\n    for (const item of g) {\n      this.push(item);\n    }\n  }\n\n  delete(ix: number) {\n    this.moveGap(ix + 1);\n    this.gapStart -= 1;\n    if (this.gapStart < 0) {\n      this.gapStart = 0;\n    }\n  }\n\n  insert(ix: number, value: T) {\n    if (this.gapStart === this.gapEnd) {\n      this.data.splice(ix, 0, ...new Array(this.gapSize).fill(\" \"));\n      this.gapStart = ix;\n      this.gapEnd = ix + this.gapSize;\n    } else {\n      this.moveGap(ix);\n    }\n    this.data[this.gapStart++] = value;\n  }\n\n  get(ix: number) {\n    if (ix >= this.gapStart) {\n      return this.data[ix + (this.gapEnd - this.gapStart)];\n    }\n    return this.data[ix];\n  }\n\n  slice(ix: number, ix2: number) {\n    if (ix >= this.gapStart && ix2 >= this.gapStart) {\n      return this.data.slice(\n        ix + (this.gapEnd - this.gapStart),\n        ix2 + (this.gapEnd - this.gapStart)\n      );\n    } else if (ix < this.gapStart && ix2 >= this.gapStart) {\n      return this.data\n        .slice(ix, this.gapStart)\n        .concat(\n          this.data.slice(this.gapEnd, ix2 + (this.gapEnd - this.gapStart))\n        );\n    } else {\n      return this.data.slice(ix, ix2);\n    }\n  }\n\n  push(value: T) {\n    this.insert(this.length, value);\n  }\n\n  pop() {\n    this.moveGap(this.length);\n    const val = this.get(this.length);\n    this.gapStart -= 1;\n    if (this.gapStart < 0) {\n      this.gapStart = 0;\n    }\n    return val;\n  }\n\n  /**\n   * @param ix index to move gap to\n   */\n  private moveGap(ix: number) {\n    if (ix < this.gapStart) {\n      // ix is less than current gap start\n      // need to shift elemnts to the right of the ix further right\n\n      // ex insert x into ix 1\n      // how far to shift - ix 1, need to shift 2,64 over\n      // [1,2,3,_,_,4,5]\n      // [  ^   *   *  ]\n      // delta = 64 - 1 = 2\n      const delta = this.gapStart - ix;\n\n      for (let i = delta - 1; i >= 0; i--) {\n        // gapEnd = 5\n        // i = 2 - 1 = 1\n        // this.data[4] = this.data[2]\n        // [1,2,64,_,64,4,5]\n        // i = 1 - 1 = 0\n        // this.data[64] = this.data[1]\n        // [1,2,64,2,64,4,5]\n        this.data[this.gapEnd - delta + i] = this.data[ix + i];\n      }\n      // [1,2,64,2,64,4,5]\n      // [  ^   *   *  ]\n      this.gapStart -= delta;\n      this.gapEnd -= delta;\n      // [1,2,64,2,64,4,5]\n      // [  *   *      ]\n    } else {\n      // Same logic as above but opposite\n      const delta = ix - this.gapStart;\n      for (let i = 0; i < delta; ++i) {\n        this.data[this.gapStart + i] = this.data[this.gapEnd + i];\n      }\n      this.gapStart += delta;\n      this.gapEnd += delta;\n    }\n  }\n\n  get _arr() {\n    return this.data\n      .slice(0, this.gapStart)\n      .concat(this.data.slice(this.gapEnd));\n  }\n\n  /**\n   * Allow for GapBuffer to be iterable like an array\n   */\n  *[Symbol.iterator]() {\n    let ix = 0;\n    while (ix < this.data.length) {\n      if (ix < this.gapStart || ix >= this.gapEnd) {\n        yield this.data[ix];\n        ix += 1;\n      } else {\n        ix += 1;\n      }\n    }\n  }\n\n  *entries(): Generator<[number, T], void, unknown> {\n    let publicIndex = 0;\n    let ix = 0;\n    while (ix < this.data.length) {\n      if (ix < this.gapStart || ix >= this.gapEnd) {\n        yield [publicIndex, this.data[ix]];\n        ix += 1;\n        publicIndex += 1;\n      } else {\n        ix += 1;\n      }\n    }\n  }\n}\n","import { GapBuffer } from \"./gap-buffer\";\n\nexport class TextRow<T> {\n  private _text: GapBuffer<T>;\n\n  constructor(array?: T[]) {\n    this._text = new GapBuffer<T>(array || []);\n  }\n\n  get length(): number {\n    return this._text.length;\n  }\n\n  /**\n   * Get item in row at a specific index\n   * @param ix index to fetch item from\n   * @returns item at index\n   */\n  get(ix: number) {\n    return this._text.get(ix);\n  }\n\n  slice(ix: number, ix2: number) {\n    return this._text.slice(ix, ix2);\n  }\n\n  insertValueAt(index: number, value: T): void {\n    this._text.insert(index, value);\n  }\n\n  deleteAt(index: number): void {\n    this._text.delete(index);\n  }\n\n  push(value: T): void {\n    this._text.push(value);\n  }\n\n  pop(): T {\n    return this._text.pop();\n  }\n\n  concat(row: TextRow<T>): TextRow<T> {\n    //TODO: make more efficient with .pushArray or something\n    for (const item of row) {\n      this._text.push(item);\n    }\n    return this;\n  }\n\n  clone() {\n    return new TextRow([...this]);\n  }\n\n  *[Symbol.iterator]() {\n    for (const item of this._text) {\n      yield item;\n    }\n  }\n\n  entries(): Generator<[number, T], void, unknown> {\n    return this._text.entries();\n  }\n}\n","import { TextContent } from \"../models\";\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace FileRegistry {\n  export function getFileContents(file: File): Promise<string> {\n    return file.text();\n  }\n\n  /**\n   * Save a file to a user's file system. Chrome only\n   * @param name Name of the file to use\n   * @param tc Text content to write to disk\n   * @returns Promise<void>\n   */\n  export async function saveFileContents(name: string, tc: TextContent) {\n    // create a new handle\n    const newHandle = await window.showSaveFilePicker({ suggestedName: name });\n    // create a FileSystemWritableFileStream to write to\n    const writableStream = await newHandle.createWritable();\n    // write our file\n    await writableStream.write(tc.toArrayBuffer());\n    // close the file and write the contents to disk.\n    return await writableStream.close();\n  }\n\n  /**\n   * Opens file select prompt and returns the selected file object. Chrome only\n   * @returns File object\n   */\n  export async function promptFileSelect(): Promise<File> {\n    const fileHandlerList = await window.showOpenFilePicker({\n      multiple: false,\n    });\n    const file = await fileHandlerList[0].getFile();\n    return file;\n  }\n}\n","export enum EditorHighlight {\n  HL_NORMAL = 0,\n  HL_NUMBER = 1,\n  HL_STRING = 2,\n  HL_COMMENT = 3,\n  HL_KEYWORD1 = 4,\n  HL_KEYWORD2 = 5,\n}\n","import { EditorHighlight } from \"../models/editor-highlight\";\nimport { TextRow } from \"../models/text-row\";\n\nexport const KEYWORDS1 = new Set([\"export\", \"import\", \"new\"]);\n\nexport const KEYWORDS1SET = new Set(KEYWORDS1);\n\nexport const KEYWORDS = [\n  \"await\",\n  \"break\",\n  \"case\",\n  \"class\",\n  \"const\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"delete\",\n  \"do\",\n  \"else\",\n  \"enum\",\n  \"export\",\n  \"extends\",\n  \"false\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"implements\",\n  \"import\",\n  \"in\",\n  \"interface\",\n  \"let\",\n  \"new\",\n  \"null\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"return\",\n  \"static\",\n  \"super\",\n  \"switch\",\n  \"this\",\n  \"throw\",\n  \"try\",\n  \"var\",\n].concat([...KEYWORDS1]);\n\nfunction isDigit(s: string) {\n  return !isNaN(Number(s));\n}\n\nfunction isSeparator(s: string) {\n  return isWhitespace(s) || s === \"\\0\" || !!s.match(\"/^[,.()+-/*=~%<>;]/\");\n}\n\nfunction isWhitespace(s: string) {\n  return s?.trim().length === 0 || s === undefined;\n}\n\n/**\n * Row based syntax highlighting. To be replaced by proper lexer based highlighting.\n * @param row Row of text to syntax highlight\n * @returns an array of EditorHighlight values to indicate how each char should be highlighted\n */\nexport function updateRowSyntaxHighlighting(\n  row: TextRow<string>\n): EditorHighlight[] {\n  const HLArr = Array(row.length).fill(EditorHighlight.HL_NORMAL);\n\n  // store if prev char was a separator char\n  let prev_sep = true;\n  // store whether currently in a string, and which character was used to start the string\n  let in_string: string | undefined = undefined;\n\n  let i = 0;\n  while (i < row.length) {\n    const ch = row.get(i);\n\n    // handle string highlighting\n    if (in_string !== undefined) {\n      HLArr.splice(i, 1, EditorHighlight.HL_STRING);\n      if (ch === \"\\\\\" && i + 1 < row.length) {\n        HLArr.splice(i, 1, EditorHighlight.HL_STRING);\n        i++;\n      }\n      if (ch === in_string) {\n        in_string = undefined;\n      }\n      prev_sep = true;\n    } else if (ch === '\"' || ch === \"'\") {\n      in_string = ch;\n      HLArr.splice(i, 1, EditorHighlight.HL_STRING);\n    }\n\n    // handle number highlighting\n    if (\n      (isDigit(ch) &&\n        (prev_sep || HLArr[i - 1] === EditorHighlight.HL_NUMBER)) ||\n      (ch == \".\" && HLArr[i - 1] == EditorHighlight.HL_NUMBER)\n    ) {\n      HLArr.splice(i, 1, EditorHighlight.HL_NUMBER);\n    }\n\n    // handle comments, only row ones for now\n    if (\n      (ch === \"/\" && row.get(i + 1) == \"/\") ||\n      (ch === \"/\" && row.get(i + 1) == \"*\")\n    ) {\n      HLArr.length = row.length;\n      HLArr.fill(EditorHighlight.HL_COMMENT);\n      i = row.length;\n    }\n\n    const old_prev_sep = prev_sep;\n    prev_sep = isSeparator(ch);\n\n    // keywords\n    if (old_prev_sep && in_string === undefined) {\n      // if the prev char was a seperator, check if next n chars in row is a keyword\n      for (const kw of KEYWORDS) {\n        // For now, just loop through keywords (inefficent)\n        // using length klen of keyword\n        const klen = kw.length;\n        // get the next klen chars of the current row to see if it is a keyword\n        const cw = row.slice(i, i + klen).join(\"\");\n        if (cw === kw && row.get(i + klen) && isSeparator(row[i + klen])) {\n          const secondary = KEYWORDS1SET.has(cw);\n          // It is a keyword, mark it in the HL array\n          for (let j = 0; j < klen; j++) {\n            if (secondary) {\n              HLArr.splice(i + j, 1, EditorHighlight.HL_KEYWORD2);\n            } else {\n              HLArr.splice(i + j, 1, EditorHighlight.HL_KEYWORD1);\n            }\n          }\n          // move index past the current key word to skip reprocessing\n          i += klen;\n          prev_sep = true;\n          break;\n        }\n      }\n    }\n\n    i++;\n  }\n  return HLArr;\n}\n","import { textContent, cursor, scroll, requestRender } from \"../app\";\nimport { TextRow } from \"../models/text-row\";\nimport { FileRegistry } from \"../services/file-registry\";\nimport { updateRowSyntaxHighlighting } from \"../renderers/update-row-syntax-highlighing\";\n\nconst OPEN_BRACKETS = new Set([\"[\", \"{\", \"(\", '\"', \"'\"]);\nconst BRACKETS_PAIR = {\n  \"{\": \"}\",\n  \"[\": \"]\",\n  \"(\": \")\",\n  '\"': '\"',\n  \"'\": \"'\",\n};\n\nexport function handleKey(e: KeyboardEvent) {\n  e.preventDefault();\n  // Two meta keys\n  if (e.metaKey && e.shiftKey && [\"ArrowUp\", \"ArrowDown\"].includes(e.code)) {\n    switch (e.code) {\n      case \"ArrowDown\": {\n        scroll.scrollDown();\n        requestRender();\n        break;\n      }\n      case \"ArrowUp\": {\n        scroll.scrollUp();\n        requestRender();\n        break;\n      }\n      default:\n        break;\n    }\n  }\n  // Single meta key\n  if (e.metaKey || e.ctrlKey) {\n    switch (e.code) {\n      case \"KeyO\": {\n        FileRegistry.promptFileSelect().then((file) =>\n          FileRegistry.getFileContents(file).then((data) => {\n            textContent.readFromFile(file.name, data);\n            requestRender();\n          })\n        );\n        break;\n      }\n      case \"KeyS\": {\n        FileRegistry.saveFileContents(textContent.name, textContent).then(\n          () => {\n            alert(`${textContent.name} saved`);\n          }\n        );\n        break;\n      }\n      case \"KeyX\": {\n        textContent.clearBuffer();\n        textContent.addRowToBuffer(textContent.rowAt(cursor.Y));\n        if (textContent.length > 1) {\n          textContent.removeRowAt(cursor.Y);\n        } else {\n          textContent.removeRowAt(cursor.Y);\n          textContent.insertNewRowAt(cursor.Y, new TextRow());\n        }\n        // Arrow up logic\n        const charAbove = textContent.charAt(cursor.X, cursor.Y - 1);\n        const rowAbove = textContent.rowAt(cursor.Y - 1);\n        if (charAbove) {\n          cursor.moveUp();\n        } else if (rowAbove) {\n          cursor.setPosition([rowAbove.length, cursor.Y - 1]);\n        }\n        break;\n      }\n      case \"KeyC\": {\n        textContent.clearBuffer();\n        textContent.addRowToBuffer(textContent.rowAt(cursor.Y));\n        break;\n      }\n      case \"KeyV\": {\n        textContent.insertNewRowsAt(cursor.Y, textContent.buffer);\n        textContent.textHL[cursor.Y] = updateRowSyntaxHighlighting(\n          textContent.rowAt(cursor.Y)\n        );\n        textContent.textHL.splice(\n          cursor.Y,\n          0,\n          updateRowSyntaxHighlighting(textContent.rowAt(cursor.Y))\n        );\n        // end of line\n        cursor.setPosition([textContent.rowAt(cursor.Y).length, cursor.Y]);\n        break;\n      }\n      default:\n        break;\n    }\n  } else {\n    // Default key press input\n    const currentRow = textContent.rowAt(cursor.Y);\n    switch (e.code) {\n      case \"Escape\": {\n        break;\n      }\n      case \"MetaRight\": {\n        break;\n      }\n      case \"MetaLeft\": {\n        break;\n      }\n      case \"ShiftLeft\": {\n        break;\n      }\n      case \"ShiftRight\": {\n        break;\n      }\n      case \"ArrowLeft\": {\n        cursor.moveLeft();\n        break;\n      }\n      case \"ArrowRight\": {\n        cursor.moveRight();\n        break;\n      }\n      case \"ArrowUp\": {\n        cursor.moveUp();\n        break;\n      }\n      case \"ArrowDown\": {\n        cursor.moveDown();\n        break;\n      }\n      case \"Enter\": {\n        // end of line, just move to new line\n        if (cursor.X === textContent.rowAt(cursor.Y).length) {\n          textContent.insertNewRowAt(cursor.Y + 1);\n          cursor.setPosition([0, cursor.Y + 1]);\n        }\n        // middle of line, split line into two\n        else {\n          const rowToSpit = textContent.rowAt(cursor.Y),\n            firstLine = rowToSpit.slice(0, cursor.X),\n            secondLine = rowToSpit.slice(cursor.X, rowToSpit.length);\n          textContent.replaceRowAt(cursor.Y, new TextRow<string>(firstLine));\n          textContent.insertNewRowAt(cursor.Y + 1);\n          textContent.replaceRowAt(\n            cursor.Y + 1,\n            new TextRow<string>(secondLine)\n          );\n          cursor.setPosition([0, cursor.Y + 1]);\n        }\n        break;\n      }\n      case \"Backspace\": {\n        if (cursor.X > 0) {\n          // delete item behind cursor\n          currentRow.deleteAt(cursor.X - 1);\n          cursor.moveLeft();\n        } else {\n          // if prev line exist,\n          if (textContent.rowAt(cursor.Y - 1)) {\n            // handle merge of prev line and current line\n            const orgLen = textContent.rowAt(cursor.Y - 1).length;\n            const newRow = textContent\n              .rowAt(cursor.Y - 1)\n              .concat(textContent.rowAt(cursor.Y));\n            textContent.replaceRowAt(cursor.Y - 1, newRow);\n            textContent.removeRowAt(cursor.Y);\n            cursor.setPosition([orgLen, cursor.Y - 1]);\n          }\n          // there is no prev line, we are already at the first row\n          // leave cursor where it is\n        }\n        break;\n      }\n      case \"Tab\": {\n        // Lol all tabs as spaces for now\n        currentRow.push(\" \");\n        currentRow.push(\" \");\n        currentRow.push(\" \");\n        currentRow.push(\" \");\n        cursor.moveRight(4);\n        break;\n      }\n      default:\n        if (OPEN_BRACKETS.has(e.key)) {\n          currentRow.insertValueAt(cursor.X, e.key);\n          cursor.moveRight();\n          currentRow.insertValueAt(cursor.X, BRACKETS_PAIR[e.key]);\n        } else {\n          currentRow.insertValueAt(cursor.X, e.key);\n          cursor.moveRight();\n        }\n        break;\n    }\n  }\n\n  textContent.textHL[cursor.Y] = updateRowSyntaxHighlighting(\n    textContent.rowAt(cursor.Y)\n  );\n  requestRender();\n}\n","export function handleToggleFileMenu() {\n  if (document.getElementById(\"fileMenu\").classList.contains(\"hidden\")) {\n    document.getElementById(\"fileMenu\").classList.remove(\"hidden\");\n    return;\n  }\n  document.getElementById(\"fileMenu\").classList.add(\"hidden\");\n}\n","export function initializeCanvas() {\n  const ratio = window.devicePixelRatio;\n  const cv = document.getElementById(\"myCanvas\") as HTMLCanvasElement;\n  const div = document.getElementById(\"canvasContainer\");\n  cv.width = div.clientWidth;\n  cv.height = div.clientHeight;\n  // get current size of the canvas\n  const rect = div.getBoundingClientRect();\n  // increase the actual size of our canvas\n  cv.width = rect.width * ratio;\n  cv.height = rect.height * ratio;\n  // ensure all drawing operations are scaled\n  cv.getContext(\"2d\").scale(ratio, ratio);\n  // scale everything down using CSS\n  cv.style.width = rect.width + \"px\";\n  cv.style.height = rect.height + \"px\";\n\n  return { canvas: cv, context: cv.getContext(\"2d\") };\n}\n","/**\n * A context object that can be used to set the font for a canvas and\n * calculate the height or width of a character given a specific font\n * and font size. This is the basis for creating a grid of characters.\n */\nexport class FontContext {\n  private _width: number;\n  private _fontSize: number;\n  private _linePadding: number;\n  private _font = \"Courier New\";\n  private context: CanvasRenderingContext2D;\n\n  constructor(\n    context: CanvasRenderingContext2D,\n    font: string,\n    fontSize: number,\n    linePadding: number\n  ) {\n    this._font = font || \"Courier New\";\n    this._fontSize = fontSize;\n    context.font = `${this._fontSize}px ${this._font}`;\n    this._width = context.measureText([\"a\"].join(\"\")).width;\n    this._linePadding = linePadding;\n    this.context = context;\n  }\n\n  // Base hight of a row of characters/single character. Includes any padding\n  get height() {\n    return this._fontSize + this._linePadding;\n  }\n\n  // Padding to add to the top and bottom of each row in pixels\n  get linePadding() {\n    return this._linePadding;\n  }\n\n  // Width of one character\n  get width() {\n    return this._width;\n  }\n\n  // Current font string to set canvas to\n  get fontStyle() {\n    return `${this._fontSize}px ${this._font}`;\n  }\n\n  // Selects a font to use from a list of available fonts. If the font is not available on a users system, it is downloaded async and then set\n  selectFont = async (font: string) => {\n    const f = FontOptions.filter((f) => f.name === font)?.[0];\n    if (f) {\n      if (!document.fonts.check(`${this._fontSize}px ${f.name}`)) {\n        const fontFile = new FontFace(f.name, `url(${f.url})`);\n        fontFile\n          .load()\n          .then((loadFont) => {\n            document.fonts.add(loadFont);\n            this._font = f.name;\n            this.setFontStyle();\n            return Promise.resolve(this.fontStyle);\n          })\n          .catch((e) => {\n            return Promise.reject(e);\n          });\n      }\n    } else {\n      return Promise.reject(new Error(\"Font not available for this editor\"));\n    }\n  };\n\n  // Sets the canvas to use the currently selected font\n  setFontStyle() {\n    this.context.font = `${this._fontSize}px ${this._font}`;\n  }\n}\n\nconst FontOptions: { name: string; url: string | undefined }[] = [\n  { name: \"Courier New\", url: undefined },\n  {\n    name: \"Fira Code\",\n    url: \"/canvas-text-editor/fira-code-v17-latin-regular.woff2\",\n  },\n];\n","export const defaultTheme: ColorTheme = {\n  name: \"Dracula\",\n  background: \"#282a36\",\n  foreground: \"#f8f8f2\",\n  line: \"#44475a\",\n  keyword: \"#ff79c6\",\n  title: \"#50fa7b\",\n  text: \"#f8f8f2\",\n  link: \"#8be9fd\",\n  string: \"#f1fa8c\",\n  cursor: \"#8be9fd\",\n  comment: \"#6272a4\",\n  number: \"#bd93f9\",\n};\n\nexport interface ColorTheme {\n  name: string; // name of the theme\n  background: string;\n  foreground: string;\n  line: string;\n  keyword: string;\n  title: string;\n  text: string;\n  link: string;\n  cursor: string;\n  string: string;\n  comment: string;\n  number: string;\n}\n","import {\n  EditorHighlight,\n  Cursor,\n  TextContent,\n  Scroll,\n  FontContext,\n  ThemeProvider,\n  LineNumberContext,\n} from \"../models\";\n\nfunction renderText(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D,\n  fontContext: FontContext,\n  textContent: TextContent,\n  scroller: Scroll,\n  lineNumberContext: LineNumberContext,\n  themeProvider: ThemeProvider,\n  cursor: Cursor\n) {\n  // Store the current transformation matrix\n  context.save();\n  // Use the identity matrix while clearing the canvas\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  // Restore the transform\n  context.restore();\n\n  context.fillStyle = themeProvider.theme.background;\n  context.fillRect(0, Math.abs(scroller.Y), canvas.width, canvas.height);\n\n  // Calculate the Y value of the bottom border of the screen (rounding up one row height)\n  const botBorder =\n    canvas.getBoundingClientRect().height - scroller.Y + fontContext.height;\n  // For each text row in the document\n  for (const [indexY, row] of textContent.entries()) {\n    // Calculate the Y value of the top border of the screen (rounding up one row height)\n    const topBorder =\n      fontContext.height * indexY + fontContext.height + fontContext.height;\n    // Calculate Y location of current row\n    const lineYPos = fontContext.height * (indexY + 1);\n    // Only render row if it will be seen on screen (between bottom border and top border)\n    if (topBorder >= Math.abs(scroller.Y) && botBorder > lineYPos) {\n      context.fillStyle = themeProvider.theme.text;\n\n      // Line highlight\n      if (cursor.Y === indexY) {\n        context.save();\n        context.fillStyle = themeProvider.theme.line;\n        context.globalAlpha = 0.4;\n        context.fillRect(\n          0,\n          fontContext.height * indexY,\n          canvas.width,\n          fontContext.height + fontContext.linePadding + fontContext.linePadding\n        );\n        context.restore();\n      }\n\n      // Line numbers\n      context.save();\n      context.fillStyle = themeProvider.theme.number;\n      context.fillText(\n        lineNumberContext.generateLineNumberText(indexY),\n        0,\n        lineYPos\n      );\n      context.restore();\n\n      // Text chars syntax highlighting\n      for (const [indexX, char] of row.entries()) {\n        context.save();\n        switch (textContent.textHL[indexY][indexX]) {\n          case EditorHighlight.HL_NUMBER:\n            context.fillStyle = themeProvider.theme.number;\n            break;\n          case EditorHighlight.HL_STRING:\n            context.fillStyle = themeProvider.theme.string;\n            break;\n          case EditorHighlight.HL_COMMENT:\n            context.fillStyle = themeProvider.theme.comment;\n            break;\n          case EditorHighlight.HL_KEYWORD1:\n            context.fillStyle = themeProvider.theme.keyword;\n            break;\n          case EditorHighlight.HL_KEYWORD2:\n            context.fillStyle = themeProvider.theme.link;\n            break;\n          default:\n            context.fillStyle = themeProvider.theme.text;\n            break;\n        }\n\n        // Actual text\n        context.fillText(\n          char,\n          lineNumberContext.offset + fontContext.width * indexX,\n          lineYPos\n        );\n        context.restore();\n      }\n    }\n  }\n}\n\nfunction renderCursor(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D,\n  fontContext: FontContext,\n  cursor: Cursor,\n  lineNumberContext: LineNumberContext,\n  themeProvider: ThemeProvider\n) {\n  if (cursor.isVisible) {\n    context.save();\n    context.beginPath();\n    context.moveTo(\n      lineNumberContext.offset + cursor.X * fontContext.width,\n      cursor.Y * fontContext.height + 1\n    );\n    context.lineTo(\n      lineNumberContext.offset + cursor.X * fontContext.width,\n      cursor.Y * fontContext.height +\n        fontContext.height +\n        2 * fontContext.linePadding\n    );\n    context.lineWidth = 2;\n    context.strokeStyle = themeProvider.theme.cursor;\n    context.stroke();\n    context.restore();\n  }\n}\n\nexport default function renderScreen(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D,\n  fontContext: FontContext,\n  cursor: Cursor,\n  textContent: TextContent,\n  scroller: Scroll,\n  lineNumberContext: LineNumberContext,\n  themeProvider: ThemeProvider\n) {\n  renderText(\n    canvas,\n    context,\n    fontContext,\n    textContent,\n    scroller,\n    lineNumberContext,\n    themeProvider,\n    cursor\n  );\n  renderCursor(\n    canvas,\n    context,\n    fontContext,\n    cursor,\n    lineNumberContext,\n    themeProvider\n  );\n}\n","import {\n  handleClick,\n  handleKey,\n  handleScroll,\n  handleToggleFileMenu,\n} from \"./handlers\";\nimport { initializeCanvas } from \"./initializers/initialize-canvas\";\nimport {\n  Cursor,\n  FontContext,\n  LineNumberContext,\n  Scroll,\n  TextContent,\n  ThemeProvider,\n} from \"./models\";\nimport renderScreen from \"./renderers/render-screen\";\nimport { FileRegistry } from \"./services\";\n\n// Set up and inject dependencies\nexport const { canvas, context } = initializeCanvas();\nexport const themeProvider = new ThemeProvider();\nexport const fontContext = new FontContext(context, \"Courier New\", 14, 4);\nexport const textContent = new TextContent(fontContext);\nexport const lineNumberContext = new LineNumberContext(\n  textContent,\n  fontContext\n);\nexport const cursor = new Cursor(textContent);\nexport const scroll = new Scroll(canvas, context, textContent);\n\n// Connect render to dependencies\nexport function requestRender() {\n  window.requestAnimationFrame(() =>\n    renderScreen(\n      canvas,\n      context,\n      fontContext,\n      cursor,\n      textContent,\n      scroll,\n      lineNumberContext,\n      themeProvider\n    )\n  );\n}\n\n// Set up event handlers\ncanvas.addEventListener(\"keydown\", handleKey);\ncanvas.addEventListener(\"mousedown\", (e) =>\n  handleClick(\n    e,\n    canvas,\n    textContent,\n    fontContext,\n    lineNumberContext,\n    cursor,\n    scroll\n  )\n);\ncanvas.addEventListener(\"wheel\", handleScroll);\nwindow.addEventListener(\"resize\", () => {\n  initializeCanvas();\n  fontContext.setFontStyle();\n  requestRender();\n});\ndocument.getElementById(\"openFileButton\").addEventListener(\"click\", () => {\n  FileRegistry.promptFileSelect().then((file) =>\n    FileRegistry.getFileContents(file).then((data) => {\n      textContent.readFromFile(file.name, data);\n      requestRender();\n    })\n  );\n  handleToggleFileMenu();\n});\ndocument.getElementById(\"saveFileButton\").addEventListener(\"click\", () => {\n  FileRegistry.saveFileContents(textContent.name, textContent).then(() => {\n    alert(`${textContent.name} saved`);\n  });\n  handleToggleFileMenu();\n});\ndocument\n  .getElementById(\"fileMenuButton\")\n  .addEventListener(\"click\", handleToggleFileMenu);\n\nsetInterval(() => {\n  if (document.activeElement === canvas) {\n    cursor.toggleVisible();\n  } else {\n    cursor.setVisible(false);\n  }\n  requestRender();\n}, 500);\n\n// Initialize view by calling first render\ncanvas.focus();\nfontContext.selectFont(\"Fira Code\").catch((e) => {\n  console.error(`Unable to load new font: ${e}`);\n});\nrequestRender();\n","import { ColorTheme, defaultTheme } from \"../configuration/colors\";\n\nexport class ThemeProvider {\n  private _theme: ColorTheme = defaultTheme;\n  constructor(theme?: ColorTheme) {\n    this._theme = theme || defaultTheme;\n  }\n\n  get theme() {\n    return this._theme;\n  }\n}\n","import { EditorHighlight } from \"./editor-highlight\";\nimport { TextRow } from \"./text-row\";\nimport { updateRowSyntaxHighlighting } from \"../renderers/update-row-syntax-highlighing\";\nimport { FontContext } from \"./font-context\";\n\nexport class TextContent {\n  private _text: TextRow<string>[] = [new TextRow()];\n  private _text_hl: EditorHighlight[][] = [[]];\n  private _buffer: TextRow<string>[] = [];\n  private _fileName = \"untitled.txt\";\n  private _fontContext: FontContext;\n\n  constructor(fontContext: FontContext, text?: TextRow<string>[]) {\n    this._fontContext = fontContext;\n    this._text = text || [new TextRow()];\n  }\n\n  get name() {\n    return this._fileName;\n  }\n\n  /**\n   * Return display height (rows * height of rows)\n   */\n  get contentHeight() {\n    return this._text.length * this._fontContext.height;\n  }\n\n  get length() {\n    return this._text.length;\n  }\n\n  get buffer() {\n    return this._buffer;\n  }\n\n  get textHL() {\n    return this._text_hl;\n  }\n\n  // used when calculating offset on render to place line numbers on left\n  get lineNumberWidth() {\n    return this.length.toString().length;\n  }\n\n  readFromFile(name: string, s: string) {\n    this._fileName = name || \"untitled.txt\";\n    const rows = s.split(\"\\n\");\n    const rowOfRows = [];\n    const rowOfRowsHL = [];\n    for (const rowIn of rows) {\n      const r = new TextRow(rowIn.split(\"\"));\n      rowOfRows.push(r);\n      rowOfRowsHL.push(updateRowSyntaxHighlighting(r));\n    }\n    this._text = rowOfRows;\n    this._text_hl = rowOfRowsHL;\n  }\n\n  /**\n   * Convert to an array buffer for saving to file\n   */\n  toArrayBuffer() {\n    const flattenedArr: string[] = [];\n    for (const row of this._text) {\n      flattenedArr.push([...row, \"\\n\"].join(\"\"));\n    }\n    const flattenedString = flattenedArr.join(\"\");\n    const buf = new ArrayBuffer(flattenedArr.length);\n    const bufView = new Uint8Array(buf);\n    for (let i = 0, strLen = flattenedArr.length; i < strLen; i++) {\n      bufView[i] = flattenedString.charCodeAt(i);\n    }\n    return buf;\n  }\n\n  addRowToBuffer(row: TextRow<string>) {\n    this._buffer.push(row.clone());\n  }\n\n  setBuffer(rows: TextRow<string>[]) {\n    this._buffer = rows.map((r) => r.clone());\n  }\n\n  clearBuffer() {\n    this._buffer = [];\n  }\n\n  rowAt(y: number): TextRow<string> {\n    return this._text[y];\n  }\n\n  charAt(x: number, y: number) {\n    const row = this._text[y];\n    if (row) {\n      return row.get(x);\n    }\n    return undefined;\n  }\n\n  insertNewRowAt(y: number, row = new TextRow<string>()): void {\n    this._text_hl.splice(y, 0, updateRowSyntaxHighlighting(row));\n    this._text.splice(y, 0, row);\n  }\n\n  insertNewRowsAt(y: number, rows: TextRow<string>[] = []): void {\n    this._text.splice(y, 0, ...rows);\n  }\n\n  replaceRowAt(y: number, withRow: TextRow<string>): void {\n    this._text_hl[y] = updateRowSyntaxHighlighting(withRow);\n    this._text[y] = withRow;\n  }\n\n  removeRowAt(y: number): void {\n    this._text.splice(y, 1);\n  }\n\n  *entries(): Generator<[number, TextRow<string>], void, unknown> {\n    for (const [i, item] of this._text.entries()) {\n      yield [i, item];\n    }\n  }\n\n  *stream(): Generator<string, void, unknown> {\n    for (const row of this._text) {\n      for (const char of row) {\n        yield char;\n      }\n      yield \"\\n\";\n    }\n  }\n\n  peekableStream(): PeekableGenerator<string> {\n    const stream = this.stream();\n    let state = stream.next();\n\n    const peekGen: PeekableGenerator<string> = (function* () {\n      while (!state.done) {\n        const current = state.value;\n        state = stream.next();\n        yield current;\n      }\n      return state.value;\n    })();\n    peekGen.peek = () => state;\n\n    return peekGen;\n  }\n}\n\ntype PeekableGenerator<T> = Generator<T | void, void, unknown> & {\n  peek?: () => IteratorResult<T, void>;\n};\n","import { FontContext } from \"./font-context\";\nimport { TextContent } from \"./text-content\";\n\nexport class LineNumberContext {\n  private _textContext: TextContent;\n  private _fontContext: FontContext;\n\n  constructor(textContent: TextContent, fontContext: FontContext) {\n    this._textContext = textContent;\n    this._fontContext = fontContext;\n  }\n\n  get lineNumberWidth() {\n    // +3 is needed for the extra | char we add in and 2 spaces\n    return this._textContext.lineNumberWidth + 3;\n  }\n\n  get offset() {\n    return this.lineNumberWidth * this._fontContext.width;\n  }\n\n  generateLineNumberText(lineNumber: number) {\n    return ` ${new Array(\n      this.lineNumberWidth - lineNumber.toString().length - 2\n    ).join(\" \")}${lineNumber.toString()}| `;\n  }\n}\n","import { TextContent } from \"./text-content\";\n\nexport class Cursor {\n  private cursorX = 0;\n  private cursorY = 0;\n  private visible = false;\n  private textContent: TextContent;\n\n  constructor(textArea: TextContent) {\n    this.textContent = textArea;\n  }\n\n  get X(): number {\n    return this.cursorX;\n  }\n\n  get Y(): number {\n    return this.cursorY;\n  }\n\n  get isVisible(): boolean {\n    return this.visible;\n  }\n\n  toggleVisible() {\n    this.visible = !this.visible;\n  }\n\n  setVisible(value: boolean) {\n    this.visible = value;\n  }\n\n  setPosition([x, y]) {\n    this.cursorX = x;\n    this.cursorY = y;\n  }\n\n  get position() {\n    return [this.cursorX, this.cursorY];\n  }\n\n  moveRight(by = 1) {\n    if (this.textContent.charAt(this.cursorX, this.cursorY)) {\n      this.cursorX += by;\n    } else if (this.textContent.rowAt(this.cursorY)) {\n      this.setPosition([\n        this.textContent.rowAt(this.cursorY).length,\n        this.cursorY,\n      ]);\n    }\n  }\n\n  moveLeft(by = 1) {\n    if (this.cursorX - by >= 0) {\n      this.cursorX -= by;\n    }\n  }\n\n  moveUp(by = 1) {\n    if (this.cursorY - by >= 0) {\n      const charAbove = this.textContent.charAt(this.cursorX, this.cursorY - 1);\n      const rowAbove = this.textContent.rowAt(this.cursorY - 1);\n      if (charAbove) {\n        this.cursorY -= by;\n      } else if (rowAbove) {\n        this.setPosition([rowAbove.length, this.cursorY - 1]);\n      }\n    }\n  }\n\n  moveDown(by = 1) {\n    const charBelow = this.textContent.charAt(this.cursorX, this.cursorY + 1);\n    const rowBelow = this.textContent.rowAt(this.cursorY + 1);\n    if (charBelow) {\n      this.cursorY += by;\n    } else if (rowBelow) {\n      this.setPosition([rowBelow.length, this.cursorY + 1]);\n    }\n  }\n}\n","import { TextContent } from \"./text-content\";\n\nexport class Scroll {\n  private cursorX = 0;\n  private cursorY = 0;\n  private _context = undefined;\n  private _canvas = undefined;\n  private _textContent: TextContent;\n  constructor(canvas, context, textContent: TextContent) {\n    this._context = context;\n    this._canvas = canvas;\n    this._textContent = textContent;\n  }\n\n  get X(): number {\n    return this.cursorX;\n  }\n\n  get Y(): number {\n    return this.cursorY;\n  }\n\n  scrollUp(by = 200) {\n    if (this.cursorY >= 0) {\n      this.cursorY == 0;\n    } else if (this.cursorY + by > 0) {\n      this._context.translate(0, Math.abs(this.cursorY));\n      this.cursorY += Math.abs(this.cursorY);\n    } else {\n      this.cursorY += by;\n      this._context.translate(0, by);\n    }\n  }\n\n  // Todo: scroll speed leads to different results\n  scrollDown(by = 200) {\n    if (\n      Math.abs(this.cursorY) +\n        this._canvas.getBoundingClientRect().height +\n        by <\n      this._textContent.contentHeight\n    ) {\n      this.cursorY -= by;\n      this._context.translate(0, 0 - by);\n    } else if (\n      Math.abs(this.cursorY) + this._canvas.getBoundingClientRect().height <\n      this._textContent.contentHeight\n    ) {\n      const remainingHeight =\n        this._textContent.contentHeight -\n        Math.abs(\n          Math.abs(this.cursorY) + this._canvas.getBoundingClientRect().height\n        );\n      console.log(remainingHeight);\n      this.cursorY -= remainingHeight;\n      this._context.translate(0, 0 - remainingHeight);\n    }\n  }\n}\n","import { scroll, requestRender } from \"../app\";\n\nexport function handleScroll(e: WheelEvent) {\n  const scrollValue = e.deltaY;\n  if (scrollValue > 0) {\n    scroll.scrollDown(Math.abs(scrollValue));\n  } else {\n    scroll.scrollUp(Math.abs(scrollValue));\n  }\n  requestRender();\n}\n"],"names":["$f99a71eeadf618a9$export$b981489921ee18cd","event","canvas","textContent","fontContext","lineNumberContext","cursor","scroll","x","y","clientWidth","clientHeight","rect","getBoundingClientRect","Math","round","X","left","offset","width","abs","Y","top","height","$f99a71eeadf618a9$export$5cc6687e4fba1dbf","clientX","clientY","charAt","setPosition","rowAt","length","$f43313d21d3fd8e2$export$4e43dc34db4a80af","$03a16a842b07cc30$export$c6fe3936e6366f70","data","gapSize","this","gapStart","gapEnd","buff","Array","fill","concat","g","item","push","delete","ix","moveGap","insert","value","splice","get","slice","ix2","pop","val","delta","i","_arr","Symbol","iterator","publicIndex","$1c58683fe1a64031$export$63e2a8b9f6372df7","array","_text","insertValueAt","index","deleteAt","row","clone","entries","$e7b21b2df11b04ee$export$582250794ca52d9c","getFileContents","file","text","saveFileContents","name","tc","newHandle","window","showSaveFilePicker","suggestedName","writableStream","createWritable","write","toArrayBuffer","close","promptFileSelect","fileHandlerList","showOpenFilePicker","multiple","getFile","$7e28cedeb61716a4$export$eeb4adacbff52521","$74a1630e391a5f1d$export$33a13745f5692414","Set","$74a1630e391a5f1d$export$b2089216fe419d98","$74a1630e391a5f1d$export$5b243cfa8f80d63b","$74a1630e391a5f1d$var$isSeparator","s","trim","undefined","$74a1630e391a5f1d$var$isWhitespace","match","$74a1630e391a5f1d$export$303d989387e35475","HLArr","HL_NORMAL","in_string","prev_sep","ch","HL_STRING","isNaN","Number","HL_NUMBER","HL_COMMENT","old_prev_sep","kw","klen","cw","join","secondary","has","j","HL_KEYWORD2","HL_KEYWORD1","$04f270dc7db7277e$var$OPEN_BRACKETS","$04f270dc7db7277e$var$BRACKETS_PAIR","$287ff150c78059e0$export$e0e918c10cf31826","document","getElementById","classList","contains","remove","add","$26fef507ba5598d5$export$b406831a776679de","ratio","devicePixelRatio","cv","div","getContext","scale","style","context","$ea0e31d5c44adfd4$var$FontOptions","url","$f7e6de5c7da2669a$export$164de7ab8df77ef0","background","foreground","line","keyword","title","link","string","comment","number","scroller","themeProvider","save","setTransform","clearRect","restore","fillStyle","theme","fillRect","botBorder","indexY","topBorder","lineYPos","globalAlpha","linePadding","fillText","generateLineNumberText","indexX","char","textHL","$13f717a4bbe24257$var$renderText","isVisible","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","$13f717a4bbe24257$var$renderCursor","$f43313d21d3fd8e2$export$67ea982130081db","$f43313d21d3fd8e2$export$a078c61943f9dbbe","$f43313d21d3fd8e2$export$6629d1f426b4c47a","_theme","$f43313d21d3fd8e2$export$a5c631d8afd87f93","font1","fontSize","_font","selectFont","async","font","f1","filter","f","Promise","reject","Error","fonts","check","_fontSize","FontFace","load","then","loadFont","setFontStyle","resolve","fontStyle","catch","e","_width","measureText","_linePadding","$f43313d21d3fd8e2$export$e0e0794250e9118f","_text_hl","_buffer","_fileName","_fontContext","contentHeight","buffer","lineNumberWidth","toString","readFromFile","rows","split","rowOfRows","rowOfRowsHL","rowIn","r","flattenedArr","flattenedString","buf","ArrayBuffer","bufView","Uint8Array","strLen","charCodeAt","addRowToBuffer","setBuffer","map","clearBuffer","insertNewRowAt","insertNewRowsAt","replaceRowAt","withRow","removeRowAt","peekableStream","stream","state","next","peekGen","done","current","peek","$f43313d21d3fd8e2$export$241d17bd978bd2d6","_textContext","lineNumber","$f43313d21d3fd8e2$export$58734539bbfa41a2","textArea","cursorX","cursorY","visible","toggleVisible","setVisible","position","moveRight","by","moveLeft","moveUp","charAbove","rowAbove","moveDown","charBelow","rowBelow","$f43313d21d3fd8e2$export$209876d7b1ac8f3","_context","_canvas","_textContent","scrollUp","translate","scrollDown","remainingHeight","console","log","requestAnimationFrame","$13f717a4bbe24257$export$2e2bcd8739ae039","addEventListener","preventDefault","metaKey","shiftKey","includes","code","ctrlKey","alert","currentRow","rowToSpit","firstLine","secondLine","orgLen","newRow","key","scrollValue","deltaY","setInterval","activeElement","focus","error"],"version":3,"file":"index.c62a7e25.js.map"}