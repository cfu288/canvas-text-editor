{"mappings":"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","sources":["src/initializers/create-canvas.ts","src/handlers/handle-click.ts","src/models/gap-buffer.ts","src/models/text-row.ts","src/services/file-registry.ts","src/models/editor-highlight.ts","src/renderers/update-row-syntax-highlighing.ts","src/handlers/handle-key.ts","src/configuration/colors.ts","src/renderers/render-screen.ts","src/app.ts","src/models/font-context.ts","src/models/text-content.ts","src/models/line-number-context.ts","src/models/cursor.ts","src/models/scroll.ts","src/handlers/handle-scroll.ts"],"sourcesContent":["export function createCanvas() {\n  const ratio = window.devicePixelRatio;\n  const cv = document.getElementById(\"myCanvas\") as HTMLCanvasElement;\n  const div = document.getElementById(\"canvasContainer\");\n  cv.width = div.clientWidth;\n  cv.height = div.clientHeight;\n  // get current size of the canvas\n  const rect = div.getBoundingClientRect();\n  // increase the actual size of our canvas\n  cv.width = rect.width * ratio;\n  cv.height = rect.height * ratio;\n  // ensure all drawing operations are scaled\n  cv.getContext(\"2d\").scale(ratio, ratio);\n  // scale everything down using CSS\n  cv.style.width = rect.width + \"px\";\n  cv.style.height = rect.height + \"px\";\n\n  return { canvas: cv, context: cv.getContext(\"2d\") };\n}\n","import { textContent, cursor, canvas, scroller, requestRender } from \"../app\";\nimport { FontContext } from \"../models/font-context\";\nimport { LineNumberContext } from \"../models/line-number-context\";\n\nexport function getCharPositionFromCanvasPosition(\n  fontContext: FontContext,\n  lineNumberContext: LineNumberContext,\n  clientX,\n  clientY\n): [x: number, y: number] {\n  const rect = canvas.getBoundingClientRect();\n  const x = Math.round(\n    (scroller.X + clientX - rect.left - lineNumberContext.offset) /\n      fontContext.width\n  );\n  const y =\n    Math.round(\n      (Math.abs(scroller.Y) + clientY - rect.top) / fontContext.height\n    ) - 1;\n  return [x, y];\n}\n\nexport function handleClick(\n  event: MouseEvent,\n  fontContext: FontContext,\n  lineNumberContext: LineNumberContext\n) {\n  const [x, y]: [number, number] = getCharPositionFromCanvasPosition(\n    fontContext,\n    lineNumberContext,\n    event.clientX,\n    event.clientY\n  );\n  if (textContent.charAt(x, y)) {\n    cursor.setPosition([x, y]);\n  } else if (textContent.rowAt(y)) {\n    cursor.setPosition([textContent.rowAt(y).length, y]);\n  }\n  requestRender();\n}\n","// inspired by https://github.com/jaz303/gapbuffer\nexport class GapBuffer<T> {\n  private data: (T | undefined)[] = [];\n  private gapSize = 32;\n  private gapStart = 0;\n  private gapEnd = 32;\n\n  constructor(data: (T | undefined)[], gapSize = 32) {\n    const buff: (T | undefined)[] =\n      gapSize - data.length >= 0 ? Array(gapSize - data.length) : [];\n    this.data = data.concat(buff);\n    this.gapSize = gapSize;\n    this.gapEnd = gapSize > data.length ? gapSize : data.length; // points to first valid char of second buffer, if exists. otherwise, points off of array\n    this.gapStart = data.length || 0; // points at first invalid char after first buffer\n  }\n\n  get length() {\n    return this.data.length - (this.gapEnd - this.gapStart);\n  }\n\n  concat(g: GapBuffer<T>) {\n    for (const item of g) {\n      this.push(item);\n    }\n  }\n\n  delete(ix: number) {\n    this.moveGap(ix + 1);\n    this.gapStart -= 1;\n    if (this.gapStart < 0) {\n      this.gapStart = 0;\n    }\n  }\n\n  insert(ix: number, value: T) {\n    if (this.gapStart === this.gapEnd) {\n      this.data.splice(ix, 0, ...new Array(this.gapSize));\n      this.gapStart = ix;\n      this.gapEnd = ix + this.gapSize;\n    } else {\n      this.moveGap(ix);\n    }\n    this.data[this.gapStart++] = value;\n  }\n\n  get(ix: number) {\n    if (ix >= this.gapStart) {\n      return this.data[ix + (this.gapEnd - this.gapStart)];\n    }\n    return this.data[ix];\n  }\n\n  slice(ix: number, ix2: number) {\n    if (ix >= this.gapStart && ix2 >= this.gapStart) {\n      return this.data.slice(\n        ix + (this.gapEnd - this.gapStart),\n        ix2 + (this.gapEnd - this.gapStart)\n      );\n    } else if (ix < this.gapStart && ix2 >= this.gapStart) {\n      return this.data\n        .slice(ix, this.gapStart)\n        .concat(\n          this.data.slice(this.gapEnd, ix2 + (this.gapEnd - this.gapStart))\n        );\n    } else {\n      return this.data.slice(ix, ix2);\n    }\n  }\n\n  push(value: T) {\n    this.insert(this.length, value);\n  }\n\n  pop() {\n    this.moveGap(this.length);\n    const val = this.get(this.length);\n    this.gapStart -= 1;\n    if (this.gapStart < 0) {\n      this.gapStart = 0;\n    }\n    return val;\n  }\n\n  /**\n   * @param ix index to move gap to\n   */\n  private moveGap(ix: number) {\n    if (ix < this.gapStart) {\n      // ix is less than current gap start\n      // need to shift elemnts to the right of the ix further right\n\n      // ex insert x into ix 1\n      // how far to shift - ix 1, need to shift 2,32 over\n      // [1,2,3,_,_,4,5]\n      // [  ^   *   *  ]\n      // delta = 32 - 1 = 2\n      const delta = this.gapStart - ix;\n\n      for (let i = delta - 1; i >= 0; i--) {\n        // gapEnd = 5\n        // i = 2 - 1 = 1\n        // this.data[4] = this.data[2]\n        // [1,2,32,_,32,4,5]\n        // i = 1 - 1 = 0\n        // this.data[32] = this.data[1]\n        // [1,2,32,2,32,4,5]\n        this.data[this.gapEnd - delta + i] = this.data[ix + i];\n      }\n      // [1,2,32,2,32,4,5]\n      // [  ^   *   *  ]\n      this.gapStart -= delta;\n      this.gapEnd -= delta;\n      // [1,2,32,2,32,4,5]\n      // [  *   *      ]\n    } else {\n      // Same logic as above but opposite\n      const delta = ix - this.gapStart;\n      for (let i = 0; i < delta; ++i) {\n        this.data[this.gapStart + i] = this.data[this.gapEnd + i];\n      }\n      this.gapStart += delta;\n      this.gapEnd += delta;\n    }\n  }\n\n  get _arr() {\n    return this.data\n      .slice(0, this.gapStart)\n      .concat(this.data.slice(this.gapEnd));\n  }\n\n  /**\n   * Allow for GapBuffer to be iterable like an array\n   */\n  *[Symbol.iterator]() {\n    let ix = 0;\n    while (ix < this.data.length) {\n      if (ix < this.gapStart || ix >= this.gapEnd) {\n        yield this.data[ix];\n        ix += 1;\n      } else {\n        ix += 1;\n      }\n    }\n  }\n\n  *entries(): Generator<[number, T], void, unknown> {\n    let publicIndex = 0;\n    let ix = 0;\n    while (ix < this.data.length) {\n      if (ix < this.gapStart || ix >= this.gapEnd) {\n        yield [publicIndex, this.data[ix]];\n        ix += 1;\n        publicIndex += 1;\n      } else {\n        ix += 1;\n      }\n    }\n  }\n}\n","import { GapBuffer } from \"./gap-buffer\";\n\nexport class TextRow<T> {\n  private _text: GapBuffer<T>;\n\n  constructor(array?: T[]) {\n    this._text = new GapBuffer<T>(array || []);\n  }\n\n  get length(): number {\n    return this._text.length;\n  }\n\n  /**\n   * Get item in row at a specific index\n   * @param ix index to fetch item from\n   * @returns item at index\n   */\n  get(ix: number) {\n    return this._text.get(ix);\n  }\n\n  slice(ix: number, ix2: number) {\n    return this._text.slice(ix, ix2);\n  }\n\n  insertValueAt(index: number, value: T): void {\n    this._text.insert(index, value);\n  }\n\n  deleteAt(index: number): void {\n    this._text.delete(index);\n  }\n\n  push(value: T): void {\n    this._text.push(value);\n  }\n\n  pop(): T {\n    return this._text.pop();\n  }\n\n  concat(row: TextRow<T>): TextRow<T> {\n    //TODO: make more efficient with .pushArray or something\n    for (const item of row) {\n      this._text.push(item);\n    }\n    return this;\n  }\n\n  clone() {\n    return new TextRow([...this]);\n  }\n\n  *[Symbol.iterator]() {\n    for (const item of this._text) {\n      yield item;\n    }\n  }\n\n  entries(): Generator<[number, T], void, unknown> {\n    return this._text.entries();\n  }\n}\n","import { TextContent } from \"../models/text-content\";\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace FileRegistry {\n  export function getFileContents(file: File): Promise<string> {\n    return file.text();\n  }\n\n  export async function saveFileContents(name: string, tc: TextContent) {\n    // create a new handle\n    const newHandle = await window.showSaveFilePicker({ suggestedName: name });\n\n    // create a FileSystemWritableFileStream to write to\n    const writableStream = await newHandle.createWritable();\n\n    // write our file\n    await writableStream.write(tc.toArrayBuffer());\n\n    // close the file and write the contents to disk.\n    return await writableStream.close();\n  }\n\n  /**\n   * Opens file select prompt and returns the selected file object\n   * @returns File object\n   */\n  export async function promptFileSelect(): Promise<File> {\n    const fileHandlerList = await window.showOpenFilePicker({\n      multiple: false,\n    });\n    const file = await fileHandlerList[0].getFile();\n    return file;\n  }\n}\n","export enum EditorHighlight {\n  HL_NORMAL = 0,\n  HL_NUMBER = 1,\n  HL_STRING = 2,\n  HL_COMMENT = 3,\n  HL_KEYWORD1 = 4,\n  HL_KEYWORD2 = 5,\n}\n","import { EditorHighlight } from \"../models/editor-highlight\";\nimport { TextRow } from \"../models/text-row\";\n\nexport const KEYWORDS1 = new Set([\"export\", \"import\", \"new\"]);\n\nexport const KEYWORDS1SET = new Set(KEYWORDS1);\n\nexport const KEYWORDS = [\n  \"await\",\n  \"break\",\n  \"case\",\n  \"class\",\n  \"const\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"delete\",\n  \"do\",\n  \"else\",\n  \"enum\",\n  \"export\",\n  \"extends\",\n  \"false\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"implements\",\n  \"import\",\n  \"in\",\n  \"interface\",\n  \"let\",\n  \"new\",\n  \"null\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"return\",\n  \"static\",\n  \"super\",\n  \"switch\",\n  \"this\",\n  \"throw\",\n  \"try\",\n  \"var\",\n].concat([...KEYWORDS1]);\n\nfunction isComment(r: TextRow<string>) {\n  return r.get(0) === \"/\" && r.get(1) === \"/\";\n}\n\nfunction isDigit(s: string) {\n  return !isNaN(Number(s));\n}\n\nfunction isSeparator(s: string) {\n  return isWhitespace(s) || s === \"\\0\" || !!s.match(\"/^[,.()+-/*=~%<>;]/\");\n}\n\nfunction isWhitespace(s: string) {\n  return s?.trim().length === 0 || s === undefined;\n}\n\n/**\n * Row based syntax highlighting. To be replaced by proper lexer based highlighting.\n * */\nexport function updateRowSyntaxHighlighting(row: TextRow<string>) {\n  const HLArr = Array(row.length).fill(EditorHighlight.HL_NORMAL);\n\n  // store if prev char was a separator char\n  let prev_sep = true;\n  // store whether currently in a string, and which character was used to start the string\n  let in_string: string | undefined = undefined;\n\n  let i = 0;\n  while (i < row.length) {\n    const ch = row.get(i);\n\n    // handle string highlighting\n    if (in_string !== undefined) {\n      HLArr.splice(i, 1, EditorHighlight.HL_STRING);\n      if (ch === \"\\\\\" && i + 1 < row.length) {\n        HLArr.splice(i, 1, EditorHighlight.HL_STRING);\n        i++;\n      }\n      if (ch === in_string) {\n        in_string = undefined;\n      }\n      prev_sep = true;\n    } else if (ch === '\"' || ch === \"'\") {\n      in_string = ch;\n      HLArr.splice(i, 1, EditorHighlight.HL_STRING);\n    }\n\n    // handle number highlighting\n    if (\n      (isDigit(ch) &&\n        (prev_sep || HLArr[i - 1] === EditorHighlight.HL_NUMBER)) ||\n      (ch == \".\" && HLArr[i - 1] == EditorHighlight.HL_NUMBER)\n    ) {\n      HLArr.splice(i, 1, EditorHighlight.HL_NUMBER);\n    }\n\n    // handle comments\n    if (isComment(row)) {\n      HLArr.length = row.length;\n      HLArr.fill(EditorHighlight.HL_COMMENT);\n      i = row.length;\n    }\n\n    const old_prev_sep = prev_sep;\n    prev_sep = isSeparator(ch);\n\n    // keywords\n    if (old_prev_sep) {\n      // if the prev char was a seperator, check if next n chars in row is a keyword\n      for (const kw of KEYWORDS) {\n        // For now, just loop through keywords (inefficent)\n        // using length klen of keyword\n        const klen = kw.length;\n        // get the next klen chars of the current row to see if it is a keyword\n        const cw = row.slice(i, i + klen).join(\"\");\n        if (cw === kw && row.get(i + klen) && isSeparator(row[i + klen])) {\n          const secondary = KEYWORDS1SET.has(cw);\n          // It is a keyword, mark it in the HL array\n          for (let j = 0; j < klen; j++) {\n            if (secondary) {\n              HLArr.splice(i + j, 1, EditorHighlight.HL_KEYWORD2);\n            } else {\n              HLArr.splice(i + j, 1, EditorHighlight.HL_KEYWORD1);\n            }\n          }\n          // move index past the current key word to skip reprocessing\n          i += klen;\n          prev_sep = true;\n          break;\n        }\n      }\n    }\n\n    i++;\n  }\n  return HLArr;\n}\n","import { textContent, cursor, scroller, requestRender } from \"../app\";\nimport { TextRow } from \"../models/text-row\";\nimport { FileRegistry } from \"../services/file-registry\";\nimport { updateRowSyntaxHighlighting } from \"../renderers/update-row-syntax-highlighing\";\n\nconst OPEN_BRACKETS = new Set([\"[\", \"{\", \"(\", '\"', \"'\"]);\nconst BRACKETS_PAIR = {\n  \"{\": \"}\",\n  \"[\": \"]\",\n  \"(\": \")\",\n  '\"': '\"',\n  \"'\": \"'\",\n};\n\nexport function handleKey(e: KeyboardEvent) {\n  e.preventDefault();\n  // Two meta keys\n  if (e.metaKey && e.shiftKey && [\"ArrowUp\", \"ArrowDown\"].includes(e.code)) {\n    switch (e.code) {\n      case \"ArrowDown\": {\n        scroller.scrollDown();\n        requestRender();\n        break;\n      }\n      case \"ArrowUp\": {\n        scroller.scrollUp();\n        requestRender();\n        break;\n      }\n      default:\n        break;\n    }\n  }\n  // Single meta key\n  if (e.metaKey || e.ctrlKey) {\n    switch (e.code) {\n      case \"KeyO\": {\n        FileRegistry.promptFileSelect().then((file) =>\n          FileRegistry.getFileContents(file).then((data) => {\n            textContent.readFromFile(file.name, data);\n            requestRender();\n          })\n        );\n        break;\n      }\n      case \"KeyS\": {\n        FileRegistry.saveFileContents(textContent.name, textContent).then(\n          () => {\n            alert(`${textContent.name} saved`);\n          }\n        );\n        break;\n      }\n      case \"KeyX\": {\n        textContent.clearBuffer();\n        textContent.addRowToBuffer(textContent.rowAt(cursor.Y));\n        if (textContent.length > 1) {\n          textContent.removeRowAt(cursor.Y);\n        } else {\n          textContent.removeRowAt(cursor.Y);\n          textContent.insertNewRowAt(cursor.Y, new TextRow());\n        }\n        // Arrow up logic\n        const charAbove = textContent.charAt(cursor.X, cursor.Y - 1);\n        const rowAbove = textContent.rowAt(cursor.Y - 1);\n        if (charAbove) {\n          cursor.moveUp();\n        } else if (rowAbove) {\n          cursor.setPosition([rowAbove.length, cursor.Y - 1]);\n        }\n        break;\n      }\n      case \"KeyC\": {\n        textContent.clearBuffer();\n        textContent.addRowToBuffer(textContent.rowAt(cursor.Y));\n        break;\n      }\n      case \"KeyV\": {\n        textContent.insertNewRowsAt(cursor.Y, textContent.buffer);\n        // end of line\n        cursor.setPosition([textContent.rowAt(cursor.Y).length, cursor.Y]);\n        break;\n      }\n      default:\n        break;\n    }\n  } else {\n    // Default key press input\n    const currentRow = textContent.rowAt(cursor.Y);\n    switch (e.code) {\n      case \"Escape\": {\n        break;\n      }\n      case \"MetaRight\": {\n        break;\n      }\n      case \"MetaLeft\": {\n        break;\n      }\n      case \"ShiftLeft\": {\n        break;\n      }\n      case \"ShiftRight\": {\n        break;\n      }\n      case \"ArrowLeft\": {\n        cursor.moveLeft();\n        break;\n      }\n      case \"ArrowRight\": {\n        cursor.moveRight();\n        break;\n      }\n      case \"ArrowUp\": {\n        cursor.moveUp();\n        break;\n      }\n      case \"ArrowDown\": {\n        cursor.moveDown();\n        break;\n      }\n      case \"Enter\": {\n        // end of line, just move to new line\n        if (cursor.X === textContent.rowAt(cursor.Y).length) {\n          textContent.insertNewRowAt(cursor.Y + 1);\n          cursor.setPosition([0, cursor.Y + 1]);\n        }\n        // middle of line, split line into two\n        else {\n          const rowToSpit = textContent.rowAt(cursor.Y),\n            firstLine = rowToSpit.slice(0, cursor.X),\n            secondLine = rowToSpit.slice(cursor.X, rowToSpit.length);\n          textContent.replaceRowAt(cursor.Y, new TextRow<string>(firstLine));\n          textContent.insertNewRowAt(cursor.Y + 1);\n          textContent.replaceRowAt(\n            cursor.Y + 1,\n            new TextRow<string>(secondLine)\n          );\n          cursor.setPosition([0, cursor.Y + 1]);\n        }\n        break;\n      }\n      case \"Backspace\": {\n        if (cursor.X > 0) {\n          // delete item behind cursor\n          currentRow.deleteAt(cursor.X - 1);\n          cursor.moveLeft();\n        } else {\n          // if prev line exist,\n          if (textContent.rowAt(cursor.Y - 1)) {\n            // handle merge of prev line and current line\n            const orgLen = textContent.rowAt(cursor.Y - 1).length;\n            const newRow = textContent\n              .rowAt(cursor.Y - 1)\n              .concat(textContent.rowAt(cursor.Y));\n            textContent.replaceRowAt(cursor.Y - 1, newRow);\n            textContent.removeRowAt(cursor.Y);\n            cursor.setPosition([orgLen, cursor.Y - 1]);\n          }\n          // there is no prev line, we are already at the first row\n          // leave cursor where it is\n        }\n        break;\n      }\n      case \"Tab\": {\n        currentRow.push(\" \");\n        currentRow.push(\" \");\n        currentRow.push(\" \");\n        currentRow.push(\" \");\n        cursor.moveRight(4);\n        break;\n      }\n      default:\n        if (OPEN_BRACKETS.has(e.key)) {\n          currentRow.insertValueAt(cursor.X, e.key);\n          cursor.moveRight();\n          currentRow.insertValueAt(cursor.X, BRACKETS_PAIR[e.key]);\n        } else {\n          currentRow.insertValueAt(cursor.X, e.key);\n          cursor.moveRight();\n        }\n        break;\n    }\n  }\n\n  textContent.textHL[cursor.Y] = updateRowSyntaxHighlighting(\n    textContent.rowAt(cursor.Y)\n  );\n  requestRender();\n}\n","export const colors = {\n  background: \"#282a36\",\n  keyword: \"#ff79c6\",\n  title: \"#50fa7b\",\n  text: \"#f8f8f2\",\n  link: \"#8be9fd\",\n  string: \"#f1fa8c\",\n  cursor: \"#8be9fd\",\n  comment: \"#6272a4\",\n  number: \"#bd93f9\",\n};\n","import { colors } from \"../configuration/colors\";\nimport { EditorHighlight } from \"../models/editor-highlight\";\nimport { Cursor } from \"../models/cursor\";\nimport { TextContent } from \"../models/text-content\";\nimport { Scroll } from \"../models/scroll\";\nimport { FontContext } from \"../models/font-context\";\nimport { LineNumberContext } from \"../models/line-number-context\";\n\nfunction renderText(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D,\n  charXY: FontContext,\n  textContent: TextContent,\n  scroller: Scroll,\n  lineNumberContext: LineNumberContext\n) {\n  // Store the current transformation matrix\n  context.save();\n  // Use the identity matrix while clearing the canvas\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  // Restore the transform\n  context.restore();\n\n  context.fillStyle = colors.background;\n  context.fillRect(0, Math.abs(scroller.Y), canvas.width, canvas.height);\n\n  for (const [indexY, row] of textContent.entries()) {\n    context.fillStyle = colors.text;\n\n    context.save();\n    // line numbers\n    context.fillStyle = colors.number;\n    context.fillText(\n      lineNumberContext.generateLineNumberText(indexY),\n      0,\n      charXY.height * (indexY + 1)\n    );\n    context.restore();\n\n    for (const [indexX, char] of row.entries()) {\n      context.save();\n      switch (textContent.textHL[indexY][indexX]) {\n        case EditorHighlight.HL_NUMBER:\n          context.fillStyle = colors.number;\n          break;\n        case EditorHighlight.HL_STRING:\n          context.fillStyle = colors.string;\n          break;\n        case EditorHighlight.HL_COMMENT:\n          context.fillStyle = colors.comment;\n          break;\n        case EditorHighlight.HL_KEYWORD1:\n          context.fillStyle = colors.keyword;\n          break;\n        case EditorHighlight.HL_KEYWORD2:\n          context.fillStyle = colors.link;\n          break;\n        default:\n          context.fillStyle = colors.text;\n          break;\n      }\n      context.fillText(\n        char,\n        lineNumberContext.offset + charXY.width * indexX,\n        charXY.height * (indexY + 1)\n      );\n      context.restore();\n    }\n  }\n}\n\nfunction renderCursor(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D,\n  fontContext: FontContext,\n  cursor: Cursor,\n  lineNumberContext: LineNumberContext\n) {\n  context.save();\n  context.beginPath();\n  context.moveTo(\n    lineNumberContext.offset + cursor.X * fontContext.width + 2,\n    cursor.Y * fontContext.height + 1\n  );\n  context.lineTo(\n    lineNumberContext.offset + cursor.X * fontContext.width + 2,\n    cursor.Y * fontContext.height + fontContext.height + 4\n  );\n  context.lineWidth = 2;\n  context.strokeStyle = colors.cursor;\n  context.stroke();\n  context.restore();\n}\n\nexport default function renderScreen(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D,\n  fontContext: FontContext,\n  cursor: Cursor,\n  textContent: TextContent,\n  scroller: Scroll,\n  lineNumberContext: LineNumberContext\n) {\n  renderText(\n    canvas,\n    context,\n    fontContext,\n    textContent,\n    scroller,\n    lineNumberContext\n  );\n  renderCursor(canvas, context, fontContext, cursor, lineNumberContext);\n}\n","import { createCanvas } from \"./initializers/create-canvas\";\nimport { Cursor } from \"./models/cursor\";\nimport { Scroll } from \"./models/scroll\";\nimport { handleKey, handleClick } from \"./handlers\";\nimport { FontContext } from \"./models/font-context\";\nimport { LineNumberContext } from \"./models/line-number-context\";\nimport renderScreen from \"./renderers/render-screen\";\nimport { TextContent } from \"./models/text-content\";\nimport { FileRegistry } from \"./services/file-registry\";\nimport { handleScroll } from \"./handlers/handle-scroll\";\n\nexport const { canvas, context } = createCanvas();\nexport const fontContext = new FontContext(context, \"Courier New\", 16, 4);\nexport const textContent = new TextContent(fontContext);\nexport const lineNumberContext = new LineNumberContext(\n  textContent,\n  fontContext\n);\nexport const cursor = new Cursor(textContent);\nexport const scroller = new Scroll(canvas, context, textContent);\n\nexport function requestRender() {\n  window.requestAnimationFrame(() =>\n    renderScreen(\n      canvas,\n      context,\n      fontContext,\n      cursor,\n      textContent,\n      scroller,\n      lineNumberContext\n    )\n  );\n}\n\ndocument.addEventListener(\"keydown\", handleKey);\ncanvas.addEventListener(\"mousedown\", (e) =>\n  handleClick(e, fontContext, lineNumberContext)\n);\nwindow.addEventListener(\"wheel\", handleScroll);\nwindow.addEventListener(\"resize\", () => {\n  createCanvas();\n  fontContext.setFontStyle();\n  requestRender();\n});\ndocument.getElementById(\"openFileButton\").addEventListener(\"click\", () => {\n  FileRegistry.promptFileSelect().then((file) =>\n    FileRegistry.getFileContents(file).then((data) => {\n      textContent.readFromFile(file.name, data);\n      requestRender();\n    })\n  );\n});\ndocument.getElementById(\"saveFileButton\").addEventListener(\"click\", () => {\n  FileRegistry.saveFileContents(textContent.name, textContent).then(() => {\n    alert(`${textContent.name} saved`);\n  });\n});\n\nrequestRender();\n","/**\n * A context object that can be used to set the font for a canvas and\n * calculate the height or width of a character given a specific font\n * and font size. This is the basis for creating a grid of characters.\n */\nexport class FontContext {\n  private _height: number;\n  private _width: number;\n  private _fontSize: number;\n  private _linePadding: number;\n  private _font = \"Courier New\";\n  private context: CanvasRenderingContext2D;\n\n  constructor(\n    context: CanvasRenderingContext2D,\n    font: string,\n    fontSize: number,\n    linePadding: number\n  ) {\n    this._font = font || \"Courier New\";\n    this._fontSize = fontSize;\n    context.font = `${this._fontSize}px ${this._font}`;\n    this._width = context.measureText([\"a\"].join(\"\")).width;\n    this._linePadding = linePadding;\n    this.context = context;\n  }\n\n  get height() {\n    return this._fontSize + this._linePadding;\n  }\n\n  get width() {\n    return this._width;\n  }\n\n  get fontStyle() {\n    return `${this._fontSize}px ${this._font}`;\n  }\n\n  setFontStyle() {\n    this.context.font = `${this._fontSize}px ${this._font}`;\n  }\n}\n","import { EditorHighlight } from \"./editor-highlight\";\nimport { TextRow } from \"./text-row\";\nimport { updateRowSyntaxHighlighting } from \"../renderers/update-row-syntax-highlighing\";\nimport { FontContext } from \"./font-context\";\n\nexport class TextContent {\n  private _text: TextRow<string>[] = [new TextRow()];\n  private _text_hl: EditorHighlight[][] = [[]];\n  private _buffer: TextRow<string>[] = [];\n  private _fileName = \"untitled.txt\";\n  private _fontContext: FontContext;\n\n  constructor(fontContext: FontContext, text?: TextRow<string>[]) {\n    this._fontContext = fontContext;\n    this._text = text || [new TextRow()];\n  }\n\n  get name() {\n    return this._fileName;\n  }\n\n  /**\n   * Return display height (rows * height of rows)\n   */\n  get contentHeight() {\n    return this._text.length * this._fontContext.height;\n  }\n\n  get length() {\n    return this._text.length;\n  }\n\n  get buffer() {\n    return this._buffer;\n  }\n\n  get textHL() {\n    return this._text_hl;\n  }\n\n  // used when calculating offset on render to place line numbers on left\n  get lineNumberWidth() {\n    return this.length.toString().length;\n  }\n\n  readFromFile(name: string, s: string) {\n    this._fileName = name || \"untitled.txt\";\n    const rows = s.split(\"\\n\");\n    const rowOfRows = [];\n    const rowOfRowsHL = [];\n    for (const rowIn of rows) {\n      const r = new TextRow(rowIn.split(\"\"));\n      rowOfRows.push(r);\n      rowOfRowsHL.push(updateRowSyntaxHighlighting(r));\n    }\n    this._text = rowOfRows;\n    this._text_hl = rowOfRowsHL;\n  }\n\n  /**\n   * Convert to an array buffer for saving to file\n   */\n  toArrayBuffer() {\n    const flattenedArr: string[] = [];\n    for (const row of this._text) {\n      flattenedArr.push([...row, \"\\n\"].join(\"\"));\n    }\n    const flattenedString = flattenedArr.join(\"\");\n    const buf = new ArrayBuffer(flattenedArr.length);\n    const bufView = new Uint8Array(buf);\n    for (let i = 0, strLen = flattenedArr.length; i < strLen; i++) {\n      bufView[i] = flattenedString.charCodeAt(i);\n    }\n    return buf;\n  }\n\n  addRowToBuffer(row: TextRow<string>) {\n    this._buffer.push(row.clone());\n  }\n\n  setBuffer(rows: TextRow<string>[]) {\n    this._buffer = rows.map((r) => r.clone());\n  }\n\n  clearBuffer() {\n    this._buffer = [];\n  }\n\n  rowAt(y: number): TextRow<string> {\n    return this._text[y];\n  }\n\n  charAt(x: number, y: number) {\n    const row = this._text[y];\n    if (row) {\n      return row.get(x);\n    }\n    return undefined;\n  }\n\n  insertNewRowAt(y: number, row = new TextRow<string>()): void {\n    this._text_hl.splice(y, 0, updateRowSyntaxHighlighting(row));\n    this._text.splice(y, 0, row);\n  }\n\n  insertNewRowsAt(y: number, rows: TextRow<string>[] = []): void {\n    this._text.splice(y, 0, ...rows);\n  }\n\n  replaceRowAt(y: number, withRow: TextRow<string>): void {\n    this._text_hl[y] = updateRowSyntaxHighlighting(withRow);\n    this._text[y] = withRow;\n  }\n\n  removeRowAt(y: number): void {\n    this._text.splice(y, 1);\n  }\n\n  *entries(): Generator<[number, TextRow<string>], void, unknown> {\n    for (const [i, item] of this._text.entries()) {\n      yield [i, item];\n    }\n  }\n\n  *stream(): Generator<string, void, unknown> {\n    for (const row of this._text) {\n      for (const char of row) {\n        yield char;\n      }\n      yield \"\\n\";\n    }\n  }\n\n  peekableStream(): PeekableGenerator<string> {\n    const stream = this.stream();\n    let state = stream.next();\n\n    const peekGen: PeekableGenerator<string> = (function* () {\n      while (!state.done) {\n        const current = state.value;\n        state = stream.next();\n        yield current;\n      }\n      return state.value;\n    })();\n    peekGen.peek = () => state;\n\n    return peekGen;\n  }\n}\n\ntype PeekableGenerator<T> = Generator<T | void, void, unknown> & {\n  peek?: () => IteratorResult<T, void>;\n};\n","import { FontContext } from \"./font-context\";\nimport { TextContent } from \"./text-content\";\n\nexport class LineNumberContext {\n  private _textContext: TextContent;\n  private _fontContext: FontContext;\n\n  constructor(textContent: TextContent, fontContext: FontContext) {\n    this._textContext = textContent;\n    this._fontContext = fontContext;\n  }\n\n  get lineNumberWidth() {\n    // +1 is needed for the extra | char we add in\n    return this._textContext.lineNumberWidth + 1;\n  }\n\n  get offset() {\n    return this.lineNumberWidth * this._fontContext.width;\n  }\n\n  generateLineNumberText(lineNumber: number) {\n    return (\n      new Array(this.lineNumberWidth - lineNumber.toString().length).join(\" \") +\n      lineNumber.toString() +\n      \"|\"\n    );\n  }\n}\n","import { TextContent } from \"./text-content\";\n\nexport class Cursor {\n  private cursorX = 0;\n  private cursorY = 0;\n  private cursorVisible = true;\n  private textContent: TextContent;\n\n  constructor(textArea: TextContent) {\n    this.textContent = textArea;\n  }\n\n  get X(): number {\n    return this.cursorX;\n  }\n\n  get Y(): number {\n    return this.cursorY;\n  }\n\n  setPosition([x, y]) {\n    this.cursorX = x;\n    this.cursorY = y;\n  }\n\n  get position() {\n    return [this.cursorX, this.cursorY];\n  }\n\n  moveRight(by = 1) {\n    if (this.textContent.charAt(this.cursorX, this.cursorY)) {\n      this.cursorX += by;\n    } else if (this.textContent.rowAt(this.cursorY)) {\n      this.setPosition([\n        this.textContent.rowAt(this.cursorY).length,\n        this.cursorY,\n      ]);\n    }\n  }\n\n  moveLeft(by = 1) {\n    if (this.cursorX - by >= 0) {\n      this.cursorX -= by;\n    }\n  }\n\n  moveUp(by = 1) {\n    if (this.cursorY - by >= 0) {\n      const charAbove = this.textContent.charAt(this.cursorX, this.cursorY - 1);\n      const rowAbove = this.textContent.rowAt(this.cursorY - 1);\n      if (charAbove) {\n        this.cursorY -= by;\n      } else if (rowAbove) {\n        this.setPosition([rowAbove.length, this.cursorY - 1]);\n      }\n    }\n  }\n\n  moveDown(by = 1) {\n    const charBelow = this.textContent.charAt(this.cursorX, this.cursorY + 1);\n    const rowBelow = this.textContent.rowAt(this.cursorY + 1);\n    if (charBelow) {\n      this.cursorY += by;\n    } else if (rowBelow) {\n      this.setPosition([rowBelow.length, this.cursorY + 1]);\n    }\n  }\n}\n","import { TextContent } from \"./text-content\";\n\nexport class Scroll {\n  private cursorX = 0;\n  private cursorY = 0;\n  private _context = undefined;\n  private _canvas = undefined;\n  private _textContent: TextContent;\n  constructor(canvas, context, textContent: TextContent) {\n    this._context = context;\n    this._canvas = canvas;\n    this._textContent = textContent;\n  }\n\n  get X(): number {\n    return this.cursorX;\n  }\n\n  get Y(): number {\n    return this.cursorY;\n  }\n\n  scrollUp(by = 200) {\n    if (this.cursorY >= 0) {\n      this.cursorY == 0;\n    } else if (this.cursorY + by > 0) {\n      this._context.translate(0, Math.abs(this.cursorY));\n      this.cursorY += Math.abs(this.cursorY);\n    } else {\n      this.cursorY += by;\n      this._context.translate(0, by);\n    }\n  }\n\n  // Todo: scroll speed leads to different results\n  scrollDown(by = 200) {\n    if (\n      Math.abs(this.cursorY) + this._canvas.getBoundingClientRect().height <\n      this._textContent.contentHeight\n    ) {\n      this.cursorY -= by;\n      this._context.translate(0, 0 - by);\n    } else if (\n      Math.abs(this.cursorY) + this._canvas.getBoundingClientRect().height >=\n      this._textContent.contentHeight\n    ) {\n      // Do nothing\n    } else {\n      const remainingHeight =\n        Math.abs(this.cursorY) +\n        this._canvas.getBoundingClientRect().height -\n        this._textContent.contentHeight;\n      this.cursorY -= remainingHeight;\n      this._context.translate(0, 0 - remainingHeight);\n    }\n  }\n}\n","import { scroller, requestRender } from \"../app\";\n\nexport function handleScroll(e: WheelEvent) {\n  const yscroll = e.deltaY;\n  if (yscroll > 0) {\n    scroller.scrollDown(Math.abs(yscroll));\n  } else {\n    scroller.scrollUp(Math.abs(yscroll));\n  }\n  requestRender();\n}\n"],"names":["$6a70f3eb2304cf39$export$cd3d1f114b139967","ratio","window","devicePixelRatio","cv","document","getElementById","div","width","clientWidth","height","clientHeight","rect","getBoundingClientRect","getContext","scale","style","canvas","context","$f99a71eeadf618a9$export$b981489921ee18cd","event","fontContext","lineNumberContext","x","y","clientX","clientY","$f43313d21d3fd8e2$export$67ea982130081db","Math","round","$f43313d21d3fd8e2$export$f0c6b23f5e8dd3c1","X","left","offset","abs","Y","top","$f99a71eeadf618a9$export$5cc6687e4fba1dbf","$f43313d21d3fd8e2$export$e0e0794250e9118f","charAt","$f43313d21d3fd8e2$export$58734539bbfa41a2","setPosition","rowAt","length","$f43313d21d3fd8e2$export$4e43dc34db4a80af","$03a16a842b07cc30$export$c6fe3936e6366f70","data","gapSize","this","gapStart","gapEnd","buff","Array","concat","g","item","push","delete","ix","moveGap","insert","value","splice","get","slice","ix2","pop","val","delta","i","_arr","Symbol","iterator","publicIndex","$1c58683fe1a64031$export$63e2a8b9f6372df7","array","_text","insertValueAt","index","deleteAt","row","clone","entries","$e7b21b2df11b04ee$export$582250794ca52d9c","getFileContents","file","text","saveFileContents","name","tc","newHandle","showSaveFilePicker","suggestedName","writableStream","createWritable","write","toArrayBuffer","close","promptFileSelect","fileHandlerList","showOpenFilePicker","multiple","getFile","$7e28cedeb61716a4$export$eeb4adacbff52521","$74a1630e391a5f1d$export$33a13745f5692414","Set","$74a1630e391a5f1d$export$b2089216fe419d98","$74a1630e391a5f1d$export$5b243cfa8f80d63b","$74a1630e391a5f1d$var$isSeparator","s","trim","undefined","$74a1630e391a5f1d$var$isWhitespace","match","$74a1630e391a5f1d$export$303d989387e35475","HLArr","fill","HL_NORMAL","in_string","prev_sep","ch","HL_STRING","isNaN","Number","HL_NUMBER","r","HL_COMMENT","old_prev_sep","kw","klen","cw","join","secondary","has","j","HL_KEYWORD2","HL_KEYWORD1","$04f270dc7db7277e$var$OPEN_BRACKETS","$04f270dc7db7277e$var$BRACKETS_PAIR","$f7e6de5c7da2669a$export$8f45430ccf837300","cursor","textContent","scroller","charXY","save","setTransform","clearRect","restore","fillStyle","fillRect","indexY","fillText","generateLineNumberText","indexX","char","textHL","$13f717a4bbe24257$var$renderText","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","$13f717a4bbe24257$var$renderCursor","$f43313d21d3fd8e2$export$a078c61943f9dbbe","$f43313d21d3fd8e2$export$a5c631d8afd87f93","font","fontSize","linePadding","_font","_fontSize","_width","measureText","_linePadding","fontStyle","setFontStyle","_text_hl","_buffer","_fileName","_fontContext","contentHeight","buffer","lineNumberWidth","toString","readFromFile","rows","split","rowOfRows","rowOfRowsHL","rowIn","flattenedArr","flattenedString","buf","ArrayBuffer","bufView","Uint8Array","strLen","charCodeAt","addRowToBuffer","setBuffer","map","clearBuffer","insertNewRowAt","insertNewRowsAt","replaceRowAt","withRow","removeRowAt","peekableStream","stream","state","next","peekGen","done","current","peek","$f43313d21d3fd8e2$export$241d17bd978bd2d6","_textContext","lineNumber","textArea","cursorX","cursorY","cursorVisible","position","moveRight","by","moveLeft","moveUp","charAbove","rowAbove","moveDown","charBelow","rowBelow","_context","_canvas","_textContent","scrollUp","translate","scrollDown","remainingHeight","requestAnimationFrame","$13f717a4bbe24257$export$2e2bcd8739ae039","addEventListener","e","preventDefault","metaKey","shiftKey","includes","code","ctrlKey","then","alert","currentRow","rowToSpit","firstLine","secondLine","orgLen","newRow","key","yscroll","deltaY"],"version":3,"file":"index.b57ef078.js.map"}