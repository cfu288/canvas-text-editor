{"mappings":"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","sources":["src/initializers/create-canvas.ts","src/configuration/colors.ts","src/models/editor-highlight.ts","src/renderers/update-row-syntax-highlighing.ts","src/renderers/render-screen.ts","src/models/gap-buffer.ts","src/models/text-row.ts","src/services/file-registry.ts","src/handlers/handle-key.ts","src/initializers/init-font-and-grid.ts","src/app.ts","src/models/cursor.ts","src/models/text-content.ts","src/models/scroll.ts","src/handlers/handle-click.ts"],"sourcesContent":["export function createCanvas() {\n  let ratio = window.devicePixelRatio;\n  let cv = document.getElementById(\"myCanvas\") as HTMLCanvasElement;\n  let div = document.getElementById(\"canvasContainer\");\n  cv.width = div.clientWidth;\n  cv.height = div.clientHeight;\n  // get current size of the canvas\n  let rect = div.getBoundingClientRect();\n  // increase the actual size of our canvas\n  cv.width = rect.width * ratio;\n  cv.height = rect.height * ratio;\n  // ensure all drawing operations are scaled\n  cv.getContext(\"2d\").scale(ratio, ratio);\n  // scale everything down using CSS\n  cv.style.width = rect.width + \"px\";\n  cv.style.height = rect.height + \"px\";\n\n  return { canvas: cv, context: cv.getContext(\"2d\") };\n}\n","export const colors = {\n  background: \"#282a36\",\n  keyword: \"#ff79c6\",\n  title: \"#50fa7b\",\n  text: \"#f8f8f2\",\n  link: \"#8be9fd\",\n  string: \"#f1fa8c\",\n  cursor: \"#8be9fd\",\n  comment: \"#6272a4\",\n  number: \"#bd93f9\",\n};\n","export enum EditorHighlight {\n  HL_NORMAL = 0,\n  HL_NUMBER = 1,\n  HL_STRING = 2,\n  HL_COMMENT = 3,\n  HL_KEYWORD1 = 4,\n  HL_KEYWORD2 = 5,\n}\n","import { EditorHighlight } from \"../models/editor-highlight\";\nimport { TextRow } from \"../models/text-row\";\n\nexport const KEYWORDS1 = new Set([\"export\", \"import\", \"new\"]);\n\nexport const KEYWORDS1SET = new Set(KEYWORDS1);\n\nexport const KEYWORDS = [\n  \"await\",\n  \"break\",\n  \"case\",\n  \"class\",\n  \"const\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"delete\",\n  \"do\",\n  \"else\",\n  \"enum\",\n  \"export\",\n  \"extends\",\n  \"false\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"implements\",\n  \"import\",\n  \"in\",\n  \"interface\",\n  \"let\",\n  \"new\",\n  \"null\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"return\",\n  \"static\",\n  \"super\",\n  \"switch\",\n  \"this\",\n  \"throw\",\n  \"try\",\n  \"var\",\n].concat([...KEYWORDS1]);\n\nfunction isComment(r: TextRow<string>) {\n  return r.get(0) === \"/\" && r.get(1) === \"/\";\n}\n\nfunction isDigit(s: string) {\n  return !isNaN(Number(s));\n}\n\nfunction isSeparator(s: string) {\n  return isWhitespace(s) || s === \"\\0\" || !!s.match(\"/^[,.()+-/*=~%<>;]/\");\n}\n\nfunction isWhitespace(s: string) {\n  return s?.trim().length === 0 || s === undefined;\n}\n\n// Row based syntax highlighting\nexport function updateRowSyntaxHighlighting(row: TextRow<string>) {\n  const HLArr = Array(row.length).fill(EditorHighlight.HL_NORMAL);\n\n  // store if prev char was a separator char\n  let prev_sep = true;\n  // store whether currently in a string, and which character was used to start the string\n  let in_string: string | undefined = undefined;\n\n  let i = 0;\n  while (i < row.length) {\n    const ch = row.get(i);\n\n    if (ch === \"z\") {\n      debugger;\n    }\n\n    // handle string highlighting\n    if (in_string !== undefined) {\n      HLArr.splice(i, 1, EditorHighlight.HL_STRING);\n      if (ch === \"\\\\\" && i + 1 < row.length) {\n        HLArr.splice(i, 1, EditorHighlight.HL_STRING);\n        i++;\n      }\n      if (ch === in_string) {\n        in_string = undefined;\n      }\n      prev_sep = true;\n    } else if (ch === '\"' || ch === \"'\") {\n      in_string = ch;\n      HLArr.splice(i, 1, EditorHighlight.HL_STRING);\n    }\n\n    // handle number highlighting\n    if (\n      (isDigit(ch) &&\n        (prev_sep || HLArr[i - 1] === EditorHighlight.HL_NUMBER)) ||\n      (ch == \".\" && HLArr[i - 1] == EditorHighlight.HL_NUMBER)\n    ) {\n      HLArr.splice(i, 1, EditorHighlight.HL_NUMBER);\n    }\n\n    // handle comments\n    if (isComment(row)) {\n      HLArr.length = row.length;\n      HLArr.fill(EditorHighlight.HL_COMMENT);\n      i = row.length;\n    }\n\n    const old_prev_sep = prev_sep;\n    prev_sep = isSeparator(ch);\n\n    // keywords\n    if (old_prev_sep) {\n      // if the prev char was a seperator, check if next n chars in row is a keyword\n      for (const kw of KEYWORDS) {\n        // For now, just loop through keywords (inefficent)\n        // using length klen of keyword\n        const klen = kw.length;\n        // get the next klen chars of the current row to see if it is a keyword\n        const cw = row.text.slice(i, i + klen).join(\"\");\n        if (cw === kw && row.get(i + klen) && isSeparator(row[i + klen])) {\n          const secondary = KEYWORDS1SET.has(cw);\n          // It is a keyword, mark it in the HL array\n          for (let j = 0; j < klen; j++) {\n            if (secondary) {\n              HLArr.splice(i + j, 1, EditorHighlight.HL_KEYWORD2);\n            } else {\n              HLArr.splice(i + j, 1, EditorHighlight.HL_KEYWORD1);\n            }\n          }\n          // move index past the current key word to skip reprocessing\n          i += klen;\n          prev_sep = true;\n          break;\n        }\n      }\n    }\n\n    i++;\n  }\n  return HLArr;\n}\n","import { colors } from \"../configuration/colors\";\nimport { charXY, cursor, textContent } from \"../app\";\nimport { updateRowSyntaxHighlighting } from \"./update-row-syntax-highlighing\";\nimport { EditorHighlight } from \"../models/editor-highlight\";\nimport { scroller } from \"../app\";\n\nexport function renderText(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D\n) {\n  // Store the current transformation matrix\n  context.save();\n\n  // Use the identity matrix while clearing the canvas\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.clearRect(0, 0, canvas.width, canvas.height);\n\n  // Restore the transform\n  context.restore();\n\n  context.fillStyle = colors.background;\n  context.fillRect(0, Math.abs(scroller.Y), canvas.width, canvas.height);\n\n  for (const [indexY, row] of textContent.text.entries()) {\n    // move this to update text row\n    textContent.textHL[indexY] = updateRowSyntaxHighlighting(row);\n\n    context.fillStyle = colors.text;\n    for (const [indexX, char] of row.entries()) {\n      context.save();\n      if (textContent.textHL[indexY][indexX] === EditorHighlight.HL_NUMBER) {\n        context.fillStyle = colors.number;\n      } else if (\n        textContent.textHL[indexY][indexX] === EditorHighlight.HL_STRING\n      ) {\n        context.fillStyle = colors.string;\n      } else if (\n        textContent.textHL[indexY][indexX] === EditorHighlight.HL_COMMENT\n      ) {\n        context.fillStyle = colors.comment;\n      } else if (\n        textContent.textHL[indexY][indexX] === EditorHighlight.HL_KEYWORD1\n      ) {\n        context.fillStyle = colors.keyword;\n      } else if (\n        textContent.textHL[indexY][indexX] === EditorHighlight.HL_KEYWORD2\n      ) {\n        context.fillStyle = colors.link;\n      }\n      context.fillText(char, charXY[0] * indexX, charXY[1] * (indexY + 1));\n      context.restore();\n    }\n  }\n}\n\nexport function renderCursor(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D\n) {\n  context.save();\n  context.beginPath();\n  context.moveTo(cursor.X * charXY[0] + 2, cursor.Y * charXY[1] + 1);\n  context.lineTo(\n    cursor.X * charXY[0] + 2,\n    cursor.Y * charXY[1] + charXY[1] + 4\n  );\n  context.lineWidth = 2;\n  context.strokeStyle = colors.cursor;\n  context.stroke();\n  context.restore();\n}\n\nexport function renderScreen(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D\n) {\n  renderText(canvas, context);\n  renderCursor(canvas, context);\n}\n","// inspired by https://github.com/jaz303/gapbuffer\nvar splice = Array.prototype.splice;\n\nexport class GapBuffer<T> {\n  private data: (T | undefined)[] = [];\n  private gapSize: number = 32;\n  private gapStart: number = 0;\n  private gapEnd: number = 32;\n\n  constructor(data: (T | undefined)[], gapSize = 32) {\n    const buff: (T | undefined)[] =\n      gapSize - data.length >= 0 ? Array(gapSize - data.length) : [];\n    this.data = data.concat(buff);\n    this.gapSize = gapSize;\n    this.gapEnd = gapSize > data.length ? gapSize : data.length; // points to first valid char of second buffer, if exists. otherwise, points off of array\n    this.gapStart = data.length || 0; // points at first invalid char after first buffer\n  }\n\n  get length() {\n    return this.data.length - (this.gapEnd - this.gapStart);\n  }\n\n  concat(g: GapBuffer<T>) {\n    for (const item of g) {\n      this.push(item);\n    }\n  }\n\n  delete(ix: number) {\n    this.moveGap(ix + 1);\n    this.gapStart -= 1;\n    if (this.gapStart < 0) {\n      this.gapStart = 0;\n    }\n  }\n\n  insert(ix: number, value: T) {\n    if (this.gapStart === this.gapEnd) {\n      this.data.splice(ix, 0, ...new Array(this.gapSize));\n      this.gapStart = ix;\n      this.gapEnd = ix + this.gapSize;\n    } else {\n      this.moveGap(ix);\n    }\n    this.data[this.gapStart++] = value;\n  }\n\n  get(ix: number) {\n    if (ix >= this.gapStart) {\n      return this.data[ix + (this.gapEnd - this.gapStart)];\n    }\n    return this.data[ix];\n  }\n\n  push(value: T) {\n    this.insert(this.length, value);\n  }\n\n  pop() {\n    this.moveGap(this.length);\n    this.gapStart -= 1;\n    if (this.gapStart < 0) {\n      this.gapStart = 0;\n    }\n  }\n  /**\n   *\n   * @param ix index to move gap to\n   */\n  private moveGap(ix: number) {\n    if (ix < this.gapStart) {\n      // ix is less than current gap start\n      // need to shift elemnts to the right of the ix further right\n\n      // ex insert x into ix 1\n      // how far to shift - ix 1, need to shift 2,32 over\n      // [1,2,3,_,_,4,5]\n      // [  ^   *   *  ]\n      // delta = 32 - 1 = 2\n      let delta = this.gapStart - ix;\n\n      for (let i = delta - 1; i >= 0; i--) {\n        // gapEnd = 5\n        // i = 2 - 1 = 1\n        // this.data[4] = this.data[2]\n        // [1,2,32,_,32,4,5]\n        // i = 1 - 1 = 0\n        // this.data[32] = this.data[1]\n        // [1,2,32,2,32,4,5]\n        this.data[this.gapEnd - delta + i] = this.data[ix + i];\n      }\n      // [1,2,32,2,32,4,5]\n      // [  ^   *   *  ]\n      this.gapStart -= delta;\n      this.gapEnd -= delta;\n      // [1,2,32,2,32,4,5]\n      // [  *   *      ]\n    } else {\n      // Same logic as above but opposite\n      let delta = ix - this.gapStart;\n      for (let i = 0; i < delta; ++i) {\n        this.data[this.gapStart + i] = this.data[this.gapEnd + i];\n      }\n      this.gapStart += delta;\n      this.gapEnd += delta;\n    }\n  }\n\n  get _arr() {\n    return this.data\n      .slice(0, this.gapStart)\n      .concat(this.data.slice(this.gapEnd));\n  }\n\n  /**\n   * Allow for GapBuffer to be iterable like an array\n   */\n  *[Symbol.iterator]() {\n    let ix = 0;\n    while (ix < this.data.length) {\n      if (ix < this.gapStart || ix >= this.gapEnd) {\n        yield this.data[ix];\n        ix += 1;\n      } else {\n        ix += 1;\n      }\n    }\n  }\n\n  *entries() {\n    let publicIndex = 0;\n    let ix = 0;\n    while (ix < this.data.length) {\n      if (ix < this.gapStart || ix >= this.gapEnd) {\n        yield [publicIndex, this.data[ix]];\n        ix += 1;\n        publicIndex += 1;\n      } else {\n        ix += 1;\n      }\n    }\n  }\n}\n","import { GapBuffer } from \"./gap-buffer\";\nexport class TextRow<T> {\n  private __text: GapBuffer<T>;\n\n  constructor(array?: T[]) {\n    this.__text = new GapBuffer<T>(array || []);\n  }\n\n  clone() {\n    return new TextRow([...this.__text]);\n  }\n\n  /**\n   * @deprecated\n   * Makes a copy of the internal array. Avoid in hot loops\n   */\n  get text(): T[] {\n    return [...this.__text];\n  }\n\n  get(ix: number) {\n    return this.__text.get(ix);\n  }\n\n  /**\n   * An internal method only used by concat, need to improve api to hide this\n   */\n  get gb() {\n    return this.__text;\n  }\n\n  get length(): number {\n    return this.__text.length;\n  }\n\n  charAtIndex(i: number) {\n    return this.__text.get(i);\n  }\n\n  entries() {\n    return this.__text.entries();\n  }\n\n  concat(row: TextRow<T>): TextRow<T> {\n    this.__text.concat(row.gb);\n    return this;\n  }\n\n  insertValueAt(index: number, value: T): void {\n    this.__text.insert(index, value);\n  }\n\n  push(value: T): void {\n    this.__text.push(value);\n  }\n\n  pop(): void {\n    this.__text.pop();\n  }\n\n  deleteValueAt(index: number): void {\n    this.__text.delete(index);\n  }\n}\n","// import { fs, dialog, BaseDirectory } from \"@tauri-apps/api\";\n\nimport { TextContent } from \"../models/text-content\";\n\nexport namespace FileRegistry {\n  export function getFileContents(file: File): Promise<string> {\n    return file.text();\n  }\n\n  export async function saveFileContents(name: string, tc: TextContent) {\n    // create a new handle\n    const newHandle = await window.showSaveFilePicker({ suggestedName: name });\n\n    // create a FileSystemWritableFileStream to write to\n    const writableStream = await newHandle.createWritable();\n\n    // write our file\n    await writableStream.write(tc.toArrayBuffer());\n\n    // close the file and write the contents to disk.\n    return await writableStream.close();\n  }\n\n  /**\n   * Opens file select prompt and returns the selected file object\n   * @returns File object\n   */\n  export async function promptFileSelect(): Promise<File> {\n    const fileHandlerList = await window.showOpenFilePicker({\n      multiple: false,\n    });\n    const file = await fileHandlerList[0].getFile();\n    return file;\n  }\n}\n","import { renderScreen } from \"../renderers/render-screen\";\nimport { textContent, cursor, canvas, context, scroller } from \"../app\";\nimport { TextRow } from \"../models/text-row\";\nimport { FileRegistry } from \"../services/file-registry\";\n\nconst OPEN_BRACKETS = new Set([\"[\", \"{\", \"(\", '\"', \"'\"]);\nconst BRACKETS_PAIR = {\n  \"{\": \"}\",\n  \"[\": \"]\",\n  \"(\": \")\",\n  '\"': '\"',\n  \"'\": \"'\",\n};\n\nexport function handleKey(e: KeyboardEvent) {\n  e.preventDefault();\n  if (e.metaKey && e.shiftKey && [\"ArrowUp\", \"ArrowDown\"].includes(e.code)) {\n    switch (e.code) {\n      case \"ArrowDown\": {\n        scroller.scrollDown();\n        window.requestAnimationFrame(() => renderScreen(canvas, context));\n        break;\n      }\n      case \"ArrowUp\": {\n        scroller.scrollUp();\n        window.requestAnimationFrame(() => renderScreen(canvas, context));\n        break;\n      }\n      default:\n        break;\n    }\n  }\n  if (e.metaKey || e.ctrlKey) {\n    switch (e.code) {\n      case \"KeyO\": {\n        FileRegistry.promptFileSelect().then((file) =>\n          FileRegistry.getFileContents(file).then((data) => {\n            textContent.readFromFile(file.name, data);\n            window.requestAnimationFrame(() => renderScreen(canvas, context));\n          })\n        );\n        break;\n      }\n      case \"KeyS\": {\n        FileRegistry.saveFileContents(textContent.name, textContent).then(\n          () => {\n            alert(`${textContent.name} saved`);\n          }\n        );\n        break;\n      }\n      case \"KeyX\": {\n        textContent.clearBuffer();\n        textContent.addRowToBuffer(textContent.rowAt(cursor.Y));\n        if (textContent.length > 1) {\n          textContent.removeRowAt(cursor.Y);\n        } else {\n          textContent.removeRowAt(cursor.Y);\n          textContent.insertNewRowAt(cursor.Y, new TextRow());\n        }\n        // Arrow up logic\n        const charAbove = textContent.charAt(cursor.X, cursor.Y - 1);\n        const rowAbove = textContent.rowAt(cursor.Y - 1);\n        if (charAbove) {\n          cursor.moveUp();\n        } else if (rowAbove) {\n          cursor.setPosition([rowAbove.length, cursor.Y - 1]);\n        }\n        break;\n      }\n      case \"KeyC\": {\n        textContent.clearBuffer();\n        textContent.addRowToBuffer(textContent.rowAt(cursor.Y));\n        break;\n      }\n      case \"KeyV\": {\n        textContent.insertNewRowsAt(cursor.Y, textContent.buffer);\n        // end of line\n        cursor.setPosition([textContent.rowAt(cursor.Y).length, cursor.Y]);\n        break;\n      }\n      default:\n        break;\n    }\n  } else {\n    let currentRow = textContent.rowAt(cursor.Y);\n    switch (e.code) {\n      case \"Escape\": {\n        break;\n      }\n      case \"MetaRight\": {\n        break;\n      }\n      case \"MetaLeft\": {\n        break;\n      }\n      case \"ShiftLeft\": {\n        break;\n      }\n      case \"ShiftRight\": {\n        break;\n      }\n      case \"ArrowLeft\": {\n        cursor.moveLeft();\n        break;\n      }\n      case \"ArrowRight\": {\n        if (textContent.charAt(cursor.X, cursor.Y)) {\n          cursor.moveRight();\n        } else if (textContent.rowAt(cursor.Y)) {\n          cursor.setPosition([textContent.rowAt(cursor.Y).length, cursor.Y]);\n        }\n        break;\n      }\n      case \"ArrowUp\": {\n        const charAbove = textContent.charAt(cursor.X, cursor.Y - 1);\n        const rowAbove = textContent.rowAt(cursor.Y - 1);\n        if (charAbove) {\n          cursor.moveUp();\n        } else if (rowAbove) {\n          cursor.setPosition([rowAbove.length, cursor.Y - 1]);\n        }\n        break;\n      }\n      case \"ArrowDown\": {\n        const charBelow = textContent.charAt(cursor.X, cursor.Y + 1);\n        const rowBelow = textContent.rowAt(cursor.Y + 1);\n        if (charBelow) {\n          cursor.moveDown();\n        } else if (rowBelow) {\n          cursor.setPosition([rowBelow.length, cursor.Y + 1]);\n        }\n        break;\n      }\n      case \"Enter\": {\n        // end of line, just move to new line\n        if (cursor.X === textContent.rowAt(cursor.Y).length) {\n          textContent.insertNewRowAt(cursor.Y + 1);\n          cursor.setPosition([0, cursor.Y + 1]);\n        }\n        // middle of line, split line into two\n        else {\n          const rowToSpit = textContent.rowAt(cursor.Y),\n            firstLine = rowToSpit.text.slice(0, cursor.X),\n            secondLine = rowToSpit.text.slice(cursor.X, rowToSpit.length);\n          textContent.replaceRowAt(cursor.Y, new TextRow<string>(firstLine));\n          textContent.insertNewRowAt(cursor.Y + 1);\n          textContent.replaceRowAt(\n            cursor.Y + 1,\n            new TextRow<string>(secondLine)\n          );\n          cursor.setPosition([0, cursor.Y + 1]);\n        }\n        break;\n      }\n      case \"Backspace\": {\n        if (cursor.X > 0) {\n          // delete item behind cursor\n          currentRow.deleteValueAt(cursor.X - 1);\n          cursor.moveLeft();\n        } else {\n          // if prev line exist,\n          if (textContent.text[cursor.Y - 1]) {\n            // handle merge of prev line and current line\n            const orgLen = textContent.rowAt(cursor.Y - 1).length;\n            const newRow = textContent\n              .rowAt(cursor.Y - 1)\n              .concat(textContent.text[cursor.Y]);\n            textContent.replaceRowAt(cursor.Y - 1, newRow);\n            textContent.removeRowAt(cursor.Y);\n            cursor.setPosition([orgLen, cursor.Y - 1]);\n          }\n          // there is no prev line, we are already at the first row\n          // leave cursor where it is\n        }\n        break;\n      }\n      case \"Tab\": {\n        currentRow.push(\" \");\n        currentRow.push(\" \");\n        currentRow.push(\" \");\n        currentRow.push(\" \");\n        cursor.moveRight(4);\n        break;\n      }\n      default:\n        if (OPEN_BRACKETS.has(e.key)) {\n          currentRow.insertValueAt(cursor.X, e.key);\n          cursor.moveRight();\n          currentRow.insertValueAt(cursor.X, BRACKETS_PAIR[e.key]);\n        } else {\n          currentRow.insertValueAt(cursor.X, e.key);\n          cursor.moveRight();\n        }\n        break;\n    }\n  }\n\n  window.requestAnimationFrame(() => renderScreen(canvas, context));\n}\n","export function initFontAndGrid(context: CanvasRenderingContext2D) {\n  // Initialize font size\n  const fontSize = 16;\n  const linePadding = 4;\n  const font = \"Courier New\";\n  context.font = `${fontSize}px ${font}`;\n\n  // Width and height of a single character, used to determine grid\n  const charXY: [width: number, height: number] = [\n    context.measureText([\"a\"].join(\"\")).width,\n    fontSize + linePadding,\n  ];\n  return {\n    font,\n    fontSize,\n    linePadding,\n    charXY,\n  };\n}\n","import { createCanvas } from \"./initializers/create-canvas\";\nimport { Cursor } from \"./models/cursor\";\nimport { Scroll } from \"./models/scroll\";\nimport { handleKey, handleClick } from \"./handlers\";\nimport { initFontAndGrid } from \"./initializers/init-font-and-grid\";\nimport { renderScreen } from \"./renderers/render-screen\";\nimport { TextContent } from \"./models/text-content\";\nimport { FileRegistry } from \"./services/file-registry\";\n\nexport const { canvas, context } = createCanvas();\nexport const { font, fontSize, linePadding, charXY } = initFontAndGrid(context);\nexport const cursor = new Cursor();\nexport const textContent = new TextContent();\nexport const scroller = new Scroll(context);\nconsole.log(\"scroller init\");\n\ndocument.addEventListener(\"keydown\", handleKey);\ncanvas.addEventListener(\"mousedown\", handleClick);\nwindow.addEventListener(\"resize\", () => {\n  createCanvas();\n  initFontAndGrid(context);\n  window.requestAnimationFrame(() => renderScreen(canvas, context));\n});\n\nwindow.requestAnimationFrame(() => renderScreen(canvas, context));\n\ndocument.getElementById(\"openFileButton\").addEventListener(\"click\", () => {\n  FileRegistry.promptFileSelect().then((file) =>\n    FileRegistry.getFileContents(file).then((data) => {\n      textContent.readFromFile(file.name, data);\n      window.requestAnimationFrame(() => renderScreen(canvas, context));\n    })\n  );\n});\n\ndocument.getElementById(\"saveFileButton\").addEventListener(\"click\", () => {\n  FileRegistry.saveFileContents(textContent.name, textContent).then(() => {\n    alert(`${textContent.name} saved`);\n  });\n});\n","export class Cursor {\n  private cursorX: number = 0;\n  private cursorY: number = 0;\n  private cursorVisible: boolean = true;\n  constructor() {}\n\n  get X(): number {\n    return this.cursorX;\n  }\n\n  get Y(): number {\n    return this.cursorY;\n  }\n\n  setPosition([x, y]) {\n    this.cursorX = x;\n    this.cursorY = y;\n  }\n\n  get position() {\n    return [this.cursorX, this.cursorY];\n  }\n\n  moveRight(by: number = 1) {\n    this.cursorX += by;\n  }\n\n  moveLeft(by: number = 1) {\n    if (this.cursorX - by >= 0) {\n      this.cursorX -= by;\n    }\n  }\n\n  moveUp(by: number = 1) {\n    if (this.cursorY - by >= 0) {\n      this.cursorY -= by;\n    }\n  }\n\n  moveDown(by: number = 1) {\n    this.cursorY += by;\n  }\n}\n","import { EditorHighlight } from \"./editor-highlight\";\nimport { TextRow } from \"./text-row\";\nexport class TextContent {\n  private _text: TextRow<string>[] = [new TextRow()];\n  private _text_hl: EditorHighlight[][] = [[]];\n  private _buffer: TextRow<string>[] = [];\n  private _fileName: string = \"untitled.txt\";\n  constructor() {}\n\n  readFromFile(name: string, s: string) {\n    this._fileName = name || \"untitled.txt\";\n    const rows = s.split(\"\\n\");\n    const rowOfRows = [];\n    for (const rowIn of rows) {\n      rowOfRows.push(new TextRow(rowIn.split(\"\")));\n    }\n    this._text = rowOfRows;\n  }\n\n  get name() {\n    return this._fileName;\n  }\n\n  toArrayBuffer() {\n    const flattenedArr: string = this._text\n      .reduce((prev, curr) => prev.concat([...curr.text, \"\\n\"]), [])\n      .join(\"\");\n    var buf = new ArrayBuffer(flattenedArr.length); // 2 bytes for each char\n    var bufView = new Uint8Array(buf);\n    for (let i = 0, strLen = flattenedArr.length; i < strLen; i++) {\n      bufView[i] = flattenedArr.charCodeAt(i);\n    }\n    return buf;\n  }\n\n  get length() {\n    return this.text.length;\n  }\n\n  get buffer() {\n    return this._buffer;\n  }\n\n  addRowToBuffer(row: TextRow<string>) {\n    this._buffer.push(row.clone());\n  }\n\n  setBuffer(rows: TextRow<string>[]) {\n    this._buffer = rows.map((r) => r.clone());\n  }\n\n  clearBuffer() {\n    this._buffer = [];\n  }\n\n  get text(): TextRow<string>[] {\n    return this._text;\n  }\n\n  get textHL() {\n    return this._text_hl;\n  }\n\n  rowAt(y: number): TextRow<string> {\n    return this._text[y];\n  }\n\n  charAt(x: number, y: number) {\n    const row = this._text[y];\n    if (row) {\n      return row.get(x);\n    }\n    return undefined;\n  }\n\n  insertNewRowAt(y: number, row = new TextRow<string>()): void {\n    this._text.splice(y, 0, row);\n  }\n\n  insertNewRowsAt(y: number, rows: TextRow<string>[] = []): void {\n    this._text.splice(y, 0, ...rows);\n  }\n\n  replaceRowAt(y: number, withRow: TextRow<string>): void {\n    this._text[y] = withRow;\n  }\n\n  removeRowAt(y: number): void {\n    this._text.splice(y, 1);\n  }\n}\n","export class Scroll {\n  private cursorX: number = 0;\n  private cursorY: number = 0;\n  private _context = undefined;\n  constructor(context) {\n    this._context = context;\n  }\n\n  get X(): number {\n    return this.cursorX;\n  }\n\n  get Y(): number {\n    return this.cursorY;\n  }\n\n  scrollUp(by: number = 200) {\n    if (this.cursorY >= 0) {\n      this.cursorY == 0;\n    } else if (this.cursorY + by > 0) {\n      this._context.translate(0, Math.abs(this.cursorY));\n      this.cursorY += Math.abs(this.cursorY);\n    } else {\n      this.cursorY += by;\n      this._context.translate(0, by);\n    }\n  }\n\n  scrollDown(by: number = 200) {\n    this.cursorY -= by;\n    this._context.translate(0, 0 - by);\n  }\n}\n","import { renderScreen } from \"../renderers/render-screen\";\nimport { textContent, cursor, canvas, context, charXY, scroller } from \"../app\";\nexport function getCharPositionFromCanvasPosition(\n  clientX,\n  clientY\n): [x: number, y: number] {\n  const rect = canvas.getBoundingClientRect();\n  const x = Math.round((scroller.X + clientX - rect.left) / charXY[0]);\n  const y =\n    Math.round((Math.abs(scroller.Y) + clientY - rect.top) / charXY[1]) - 1;\n  return [x, y];\n}\n\nexport function handleClick(event: MouseEvent) {\n  const [x, y]: [number, number] = getCharPositionFromCanvasPosition(\n    event.clientX,\n    event.clientY\n  );\n  if (textContent.charAt(x, y)) {\n    cursor.setPosition([x, y]);\n  } else if (textContent.rowAt(y)) {\n    cursor.setPosition([textContent.rowAt(y).length, y]);\n  }\n  window.requestAnimationFrame(() => renderScreen(canvas, context));\n}\n"],"names":["$6a70f3eb2304cf39$export$cd3d1f114b139967","ratio","window","devicePixelRatio","cv","document","getElementById","div","width","clientWidth","height","clientHeight","rect","getBoundingClientRect","getContext","scale","style","canvas","context","$f7e6de5c7da2669a$export$8f45430ccf837300","$7e28cedeb61716a4$export$eeb4adacbff52521","$74a1630e391a5f1d$export$33a13745f5692414","Set","$74a1630e391a5f1d$export$b2089216fe419d98","$74a1630e391a5f1d$export$5b243cfa8f80d63b","concat","$74a1630e391a5f1d$var$isSeparator","s","trim","length","undefined","$74a1630e391a5f1d$var$isWhitespace","match","$74a1630e391a5f1d$export$303d989387e35475","row","HLArr","Array","fill","HL_NORMAL","in_string","prev_sep","i","ch","get","splice","HL_STRING","isNaN","Number","HL_NUMBER","r","HL_COMMENT","old_prev_sep","kw","klen","cw","text","slice","join","secondary","has","j","HL_KEYWORD2","HL_KEYWORD1","$13f717a4bbe24257$export$fdfa2e9363bf938e","save","setTransform","clearRect","restore","fillStyle","fillRect","Math","abs","$f43313d21d3fd8e2$export$f0c6b23f5e8dd3c1","Y","indexY","$f43313d21d3fd8e2$export$e0e0794250e9118f","entries","textHL","indexX","char","fillText","$f43313d21d3fd8e2$export$786302a38e97b5be","$13f717a4bbe24257$export$482c90f94eb9717c","beginPath","moveTo","$f43313d21d3fd8e2$export$58734539bbfa41a2","X","lineTo","lineWidth","strokeStyle","stroke","$13f717a4bbe24257$export$2fd24a2aa60fc106","prototype","$03a16a842b07cc30$export$c6fe3936e6366f70","data","gapSize","this","gapStart","gapEnd","buff","g","item","push","delete","ix","moveGap","insert","value","pop","delta","_arr","Symbol","iterator","publicIndex","$1c58683fe1a64031$export$63e2a8b9f6372df7","array","__text","clone","gb","charAtIndex","insertValueAt","index","deleteValueAt","$e7b21b2df11b04ee$export$582250794ca52d9c","getFileContents","file","saveFileContents","name","tc","newHandle","showSaveFilePicker","suggestedName","writableStream","createWritable","write","toArrayBuffer","close","promptFileSelect","fileHandlerList","showOpenFilePicker","multiple","getFile","$04f270dc7db7277e$var$OPEN_BRACKETS","$04f270dc7db7277e$var$BRACKETS_PAIR","$e4b0f428631606fd$export$da9525949819ea40","font","measureText","fontSize","$f43313d21d3fd8e2$export$67ea982130081db","$f43313d21d3fd8e2$export$a078c61943f9dbbe","$f43313d21d3fd8e2$export$a74e2025f5286b02","$f43313d21d3fd8e2$export$85e3c3ca0c6fb93","linePadding","$f43313d21d3fd8e2$export$2236a8f6725eca69","charXY","cursorX","cursorY","cursorVisible","setPosition","x","y","position","moveRight","by","moveLeft","moveUp","moveDown","_text","_text_hl","_buffer","_fileName","readFromFile","rows","split","rowOfRows","rowIn","flattenedArr","reduce","prev","curr","buf","ArrayBuffer","bufView","Uint8Array","strLen","charCodeAt","buffer","addRowToBuffer","setBuffer","map","clearBuffer","rowAt","charAt","insertNewRowAt","insertNewRowsAt","replaceRowAt","withRow","removeRowAt","_context","scrollUp","translate","scrollDown","console","log","addEventListener","e","preventDefault","metaKey","shiftKey","includes","code","requestAnimationFrame","ctrlKey","then","alert","charAbove","rowAbove","currentRow","charBelow","rowBelow","rowToSpit","firstLine","secondLine","orgLen","newRow","key","event","clientX","clientY","round","left","top","$f99a71eeadf618a9$export$5cc6687e4fba1dbf"],"version":3,"file":"index.7c06ae92.js.map"}