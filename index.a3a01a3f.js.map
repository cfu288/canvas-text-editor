{"mappings":"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","sources":["src/handlers/handle-click.ts","src/models/gap-buffer.ts","src/models/text-row.ts","src/services/file-registry.ts","src/models/editor-highlight.ts","src/renderers/update-row-syntax-highlighing.ts","src/handlers/handle-key.ts","src/initializers/initialize-canvas.ts","src/configuration/colors.ts","src/renderers/render-screen.ts","src/app.ts","src/models/theme-provider.ts","src/models/font-context.ts","src/models/text-content.ts","src/models/line-number-context.ts","src/models/cursor.ts","src/models/scroll.ts","src/handlers/handle-scroll.ts"],"sourcesContent":["import { requestRender } from \"../app\";\nimport {\n  Cursor,\n  TextContent,\n  FontContext,\n  LineNumberContext,\n  Scroll,\n} from \"../models\";\n\nexport function getCharPositionFromCanvasPosition(\n  canvas: HTMLCanvasElement,\n  fontContext: FontContext,\n  lineNumberContext: LineNumberContext,\n  scroll: Scroll,\n  clientWidth,\n  clientHeight\n): [x: number, y: number] {\n  const rect = canvas.getBoundingClientRect();\n  const x = Math.round(\n    (scroll.X + clientWidth - rect.left - lineNumberContext.offset) /\n      fontContext.width\n  );\n  const y =\n    Math.round(\n      (Math.abs(scroll.Y) + clientHeight - rect.top) / fontContext.height\n    ) - 1;\n  return [x, y];\n}\n\nexport function handleClick(\n  event: MouseEvent,\n  canvas: HTMLCanvasElement,\n  textContent: TextContent,\n  fontContext: FontContext,\n  lineNumberContext: LineNumberContext,\n  cursor: Cursor,\n  scroll: Scroll\n) {\n  const [x, y]: [number, number] = getCharPositionFromCanvasPosition(\n    canvas,\n    fontContext,\n    lineNumberContext,\n    scroll,\n    event.clientX,\n    event.clientY\n  );\n  if (textContent.charAt(x, y)) {\n    cursor.setPosition([x, y]);\n  } else if (textContent.rowAt(y)) {\n    cursor.setPosition([textContent.rowAt(y).length, y]);\n  }\n  requestRender();\n}\n","// inspired by https://github.com/jaz303/gapbuffer\nexport class GapBuffer<T> {\n  private data: (T | undefined)[] = [];\n  private gapSize = 32;\n  private gapStart = 0;\n  private gapEnd = 32;\n\n  constructor(data: (T | undefined)[], gapSize = 32) {\n    const buff: (T | undefined)[] =\n      gapSize - data.length >= 0 ? Array(gapSize - data.length) : [];\n    this.data = data.concat(buff);\n    this.gapSize = gapSize;\n    this.gapEnd = gapSize > data.length ? gapSize : data.length; // points to first valid char of second buffer, if exists. otherwise, points off of array\n    this.gapStart = data.length || 0; // points at first invalid char after first buffer\n  }\n\n  get length() {\n    return this.data.length - (this.gapEnd - this.gapStart);\n  }\n\n  concat(g: GapBuffer<T>) {\n    for (const item of g) {\n      this.push(item);\n    }\n  }\n\n  delete(ix: number) {\n    this.moveGap(ix + 1);\n    this.gapStart -= 1;\n    if (this.gapStart < 0) {\n      this.gapStart = 0;\n    }\n  }\n\n  insert(ix: number, value: T) {\n    if (this.gapStart === this.gapEnd) {\n      this.data.splice(ix, 0, ...new Array(this.gapSize));\n      this.gapStart = ix;\n      this.gapEnd = ix + this.gapSize;\n    } else {\n      this.moveGap(ix);\n    }\n    this.data[this.gapStart++] = value;\n  }\n\n  get(ix: number) {\n    if (ix >= this.gapStart) {\n      return this.data[ix + (this.gapEnd - this.gapStart)];\n    }\n    return this.data[ix];\n  }\n\n  slice(ix: number, ix2: number) {\n    if (ix >= this.gapStart && ix2 >= this.gapStart) {\n      return this.data.slice(\n        ix + (this.gapEnd - this.gapStart),\n        ix2 + (this.gapEnd - this.gapStart)\n      );\n    } else if (ix < this.gapStart && ix2 >= this.gapStart) {\n      return this.data\n        .slice(ix, this.gapStart)\n        .concat(\n          this.data.slice(this.gapEnd, ix2 + (this.gapEnd - this.gapStart))\n        );\n    } else {\n      return this.data.slice(ix, ix2);\n    }\n  }\n\n  push(value: T) {\n    this.insert(this.length, value);\n  }\n\n  pop() {\n    this.moveGap(this.length);\n    const val = this.get(this.length);\n    this.gapStart -= 1;\n    if (this.gapStart < 0) {\n      this.gapStart = 0;\n    }\n    return val;\n  }\n\n  /**\n   * @param ix index to move gap to\n   */\n  private moveGap(ix: number) {\n    if (ix < this.gapStart) {\n      // ix is less than current gap start\n      // need to shift elemnts to the right of the ix further right\n\n      // ex insert x into ix 1\n      // how far to shift - ix 1, need to shift 2,32 over\n      // [1,2,3,_,_,4,5]\n      // [  ^   *   *  ]\n      // delta = 32 - 1 = 2\n      const delta = this.gapStart - ix;\n\n      for (let i = delta - 1; i >= 0; i--) {\n        // gapEnd = 5\n        // i = 2 - 1 = 1\n        // this.data[4] = this.data[2]\n        // [1,2,32,_,32,4,5]\n        // i = 1 - 1 = 0\n        // this.data[32] = this.data[1]\n        // [1,2,32,2,32,4,5]\n        this.data[this.gapEnd - delta + i] = this.data[ix + i];\n      }\n      // [1,2,32,2,32,4,5]\n      // [  ^   *   *  ]\n      this.gapStart -= delta;\n      this.gapEnd -= delta;\n      // [1,2,32,2,32,4,5]\n      // [  *   *      ]\n    } else {\n      // Same logic as above but opposite\n      const delta = ix - this.gapStart;\n      for (let i = 0; i < delta; ++i) {\n        this.data[this.gapStart + i] = this.data[this.gapEnd + i];\n      }\n      this.gapStart += delta;\n      this.gapEnd += delta;\n    }\n  }\n\n  get _arr() {\n    return this.data\n      .slice(0, this.gapStart)\n      .concat(this.data.slice(this.gapEnd));\n  }\n\n  /**\n   * Allow for GapBuffer to be iterable like an array\n   */\n  *[Symbol.iterator]() {\n    let ix = 0;\n    while (ix < this.data.length) {\n      if (ix < this.gapStart || ix >= this.gapEnd) {\n        yield this.data[ix];\n        ix += 1;\n      } else {\n        ix += 1;\n      }\n    }\n  }\n\n  *entries(): Generator<[number, T], void, unknown> {\n    let publicIndex = 0;\n    let ix = 0;\n    while (ix < this.data.length) {\n      if (ix < this.gapStart || ix >= this.gapEnd) {\n        yield [publicIndex, this.data[ix]];\n        ix += 1;\n        publicIndex += 1;\n      } else {\n        ix += 1;\n      }\n    }\n  }\n}\n","import { GapBuffer } from \"./gap-buffer\";\n\nexport class TextRow<T> {\n  private _text: GapBuffer<T>;\n\n  constructor(array?: T[]) {\n    this._text = new GapBuffer<T>(array || []);\n  }\n\n  get length(): number {\n    return this._text.length;\n  }\n\n  /**\n   * Get item in row at a specific index\n   * @param ix index to fetch item from\n   * @returns item at index\n   */\n  get(ix: number) {\n    return this._text.get(ix);\n  }\n\n  slice(ix: number, ix2: number) {\n    return this._text.slice(ix, ix2);\n  }\n\n  insertValueAt(index: number, value: T): void {\n    this._text.insert(index, value);\n  }\n\n  deleteAt(index: number): void {\n    this._text.delete(index);\n  }\n\n  push(value: T): void {\n    this._text.push(value);\n  }\n\n  pop(): T {\n    return this._text.pop();\n  }\n\n  concat(row: TextRow<T>): TextRow<T> {\n    //TODO: make more efficient with .pushArray or something\n    for (const item of row) {\n      this._text.push(item);\n    }\n    return this;\n  }\n\n  clone() {\n    return new TextRow([...this]);\n  }\n\n  *[Symbol.iterator]() {\n    for (const item of this._text) {\n      yield item;\n    }\n  }\n\n  entries(): Generator<[number, T], void, unknown> {\n    return this._text.entries();\n  }\n}\n","import { TextContent } from \"../models\";\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace FileRegistry {\n  export function getFileContents(file: File): Promise<string> {\n    return file.text();\n  }\n\n  /**\n   * Save a file to a user's file system. Chrome only\n   * @param name Name of the file to use\n   * @param tc Text content to write to disk\n   * @returns Promise<void>\n   */\n  export async function saveFileContents(name: string, tc: TextContent) {\n    // create a new handle\n    const newHandle = await window.showSaveFilePicker({ suggestedName: name });\n    // create a FileSystemWritableFileStream to write to\n    const writableStream = await newHandle.createWritable();\n    // write our file\n    await writableStream.write(tc.toArrayBuffer());\n    // close the file and write the contents to disk.\n    return await writableStream.close();\n  }\n\n  /**\n   * Opens file select prompt and returns the selected file object. Chrome only\n   * @returns File object\n   */\n  export async function promptFileSelect(): Promise<File> {\n    const fileHandlerList = await window.showOpenFilePicker({\n      multiple: false,\n    });\n    const file = await fileHandlerList[0].getFile();\n    return file;\n  }\n}\n","export enum EditorHighlight {\n  HL_NORMAL = 0,\n  HL_NUMBER = 1,\n  HL_STRING = 2,\n  HL_COMMENT = 3,\n  HL_KEYWORD1 = 4,\n  HL_KEYWORD2 = 5,\n}\n","import { EditorHighlight } from \"../models/editor-highlight\";\nimport { TextRow } from \"../models/text-row\";\n\nexport const KEYWORDS1 = new Set([\"export\", \"import\", \"new\"]);\n\nexport const KEYWORDS1SET = new Set(KEYWORDS1);\n\nexport const KEYWORDS = [\n  \"await\",\n  \"break\",\n  \"case\",\n  \"class\",\n  \"const\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"delete\",\n  \"do\",\n  \"else\",\n  \"enum\",\n  \"export\",\n  \"extends\",\n  \"false\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"implements\",\n  \"import\",\n  \"in\",\n  \"interface\",\n  \"let\",\n  \"new\",\n  \"null\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"return\",\n  \"static\",\n  \"super\",\n  \"switch\",\n  \"this\",\n  \"throw\",\n  \"try\",\n  \"var\",\n].concat([...KEYWORDS1]);\n\nfunction isDigit(s: string) {\n  return !isNaN(Number(s));\n}\n\nfunction isSeparator(s: string) {\n  return isWhitespace(s) || s === \"\\0\" || !!s.match(\"/^[,.()+-/*=~%<>;]/\");\n}\n\nfunction isWhitespace(s: string) {\n  return s?.trim().length === 0 || s === undefined;\n}\n\n/**\n * Row based syntax highlighting. To be replaced by proper lexer based highlighting.\n * @param row Row of text to syntax highlight\n * @returns an array of EditorHighlight values to indicate how each char should be highlighted\n */\nexport function updateRowSyntaxHighlighting(\n  row: TextRow<string>\n): EditorHighlight[] {\n  const HLArr = Array(row.length).fill(EditorHighlight.HL_NORMAL);\n\n  // store if prev char was a separator char\n  let prev_sep = true;\n  // store whether currently in a string, and which character was used to start the string\n  let in_string: string | undefined = undefined;\n\n  let i = 0;\n  while (i < row.length) {\n    const ch = row.get(i);\n\n    // handle string highlighting\n    if (in_string !== undefined) {\n      HLArr.splice(i, 1, EditorHighlight.HL_STRING);\n      if (ch === \"\\\\\" && i + 1 < row.length) {\n        HLArr.splice(i, 1, EditorHighlight.HL_STRING);\n        i++;\n      }\n      if (ch === in_string) {\n        in_string = undefined;\n      }\n      prev_sep = true;\n    } else if (ch === '\"' || ch === \"'\") {\n      in_string = ch;\n      HLArr.splice(i, 1, EditorHighlight.HL_STRING);\n    }\n\n    // handle number highlighting\n    if (\n      (isDigit(ch) &&\n        (prev_sep || HLArr[i - 1] === EditorHighlight.HL_NUMBER)) ||\n      (ch == \".\" && HLArr[i - 1] == EditorHighlight.HL_NUMBER)\n    ) {\n      HLArr.splice(i, 1, EditorHighlight.HL_NUMBER);\n    }\n\n    // handle comments, only row ones for now\n    if (\n      (ch === \"/\" && row.get(i + 1) == \"/\") ||\n      (ch === \"/\" && row.get(i + 1) == \"*\")\n    ) {\n      HLArr.length = row.length;\n      HLArr.fill(EditorHighlight.HL_COMMENT);\n      i = row.length;\n    }\n\n    const old_prev_sep = prev_sep;\n    prev_sep = isSeparator(ch);\n\n    // keywords\n    if (old_prev_sep && in_string === undefined) {\n      // if the prev char was a seperator, check if next n chars in row is a keyword\n      for (const kw of KEYWORDS) {\n        // For now, just loop through keywords (inefficent)\n        // using length klen of keyword\n        const klen = kw.length;\n        // get the next klen chars of the current row to see if it is a keyword\n        const cw = row.slice(i, i + klen).join(\"\");\n        if (cw === kw && row.get(i + klen) && isSeparator(row[i + klen])) {\n          const secondary = KEYWORDS1SET.has(cw);\n          // It is a keyword, mark it in the HL array\n          for (let j = 0; j < klen; j++) {\n            if (secondary) {\n              HLArr.splice(i + j, 1, EditorHighlight.HL_KEYWORD2);\n            } else {\n              HLArr.splice(i + j, 1, EditorHighlight.HL_KEYWORD1);\n            }\n          }\n          // move index past the current key word to skip reprocessing\n          i += klen;\n          prev_sep = true;\n          break;\n        }\n      }\n    }\n\n    i++;\n  }\n  return HLArr;\n}\n","import { textContent, cursor, scroll, requestRender } from \"../app\";\nimport { TextRow } from \"../models/text-row\";\nimport { FileRegistry } from \"../services/file-registry\";\nimport { updateRowSyntaxHighlighting } from \"../renderers/update-row-syntax-highlighing\";\n\nconst OPEN_BRACKETS = new Set([\"[\", \"{\", \"(\", '\"', \"'\"]);\nconst BRACKETS_PAIR = {\n  \"{\": \"}\",\n  \"[\": \"]\",\n  \"(\": \")\",\n  '\"': '\"',\n  \"'\": \"'\",\n};\n\nexport function handleKey(e: KeyboardEvent) {\n  e.preventDefault();\n  // Two meta keys\n  if (e.metaKey && e.shiftKey && [\"ArrowUp\", \"ArrowDown\"].includes(e.code)) {\n    switch (e.code) {\n      case \"ArrowDown\": {\n        scroll.scrollDown();\n        requestRender();\n        break;\n      }\n      case \"ArrowUp\": {\n        scroll.scrollUp();\n        requestRender();\n        break;\n      }\n      default:\n        break;\n    }\n  }\n  // Single meta key\n  if (e.metaKey || e.ctrlKey) {\n    switch (e.code) {\n      case \"KeyO\": {\n        FileRegistry.promptFileSelect().then((file) =>\n          FileRegistry.getFileContents(file).then((data) => {\n            textContent.readFromFile(file.name, data);\n            requestRender();\n          })\n        );\n        break;\n      }\n      case \"KeyS\": {\n        FileRegistry.saveFileContents(textContent.name, textContent).then(\n          () => {\n            alert(`${textContent.name} saved`);\n          }\n        );\n        break;\n      }\n      case \"KeyX\": {\n        textContent.clearBuffer();\n        textContent.addRowToBuffer(textContent.rowAt(cursor.Y));\n        if (textContent.length > 1) {\n          textContent.removeRowAt(cursor.Y);\n        } else {\n          textContent.removeRowAt(cursor.Y);\n          textContent.insertNewRowAt(cursor.Y, new TextRow());\n        }\n        // Arrow up logic\n        const charAbove = textContent.charAt(cursor.X, cursor.Y - 1);\n        const rowAbove = textContent.rowAt(cursor.Y - 1);\n        if (charAbove) {\n          cursor.moveUp();\n        } else if (rowAbove) {\n          cursor.setPosition([rowAbove.length, cursor.Y - 1]);\n        }\n        break;\n      }\n      case \"KeyC\": {\n        textContent.clearBuffer();\n        textContent.addRowToBuffer(textContent.rowAt(cursor.Y));\n        break;\n      }\n      case \"KeyV\": {\n        textContent.insertNewRowsAt(cursor.Y, textContent.buffer);\n        // end of line\n        cursor.setPosition([textContent.rowAt(cursor.Y).length, cursor.Y]);\n        break;\n      }\n      default:\n        break;\n    }\n  } else {\n    // Default key press input\n    const currentRow = textContent.rowAt(cursor.Y);\n    switch (e.code) {\n      case \"Escape\": {\n        break;\n      }\n      case \"MetaRight\": {\n        break;\n      }\n      case \"MetaLeft\": {\n        break;\n      }\n      case \"ShiftLeft\": {\n        break;\n      }\n      case \"ShiftRight\": {\n        break;\n      }\n      case \"ArrowLeft\": {\n        cursor.moveLeft();\n        break;\n      }\n      case \"ArrowRight\": {\n        cursor.moveRight();\n        break;\n      }\n      case \"ArrowUp\": {\n        cursor.moveUp();\n        break;\n      }\n      case \"ArrowDown\": {\n        cursor.moveDown();\n        break;\n      }\n      case \"Enter\": {\n        // end of line, just move to new line\n        if (cursor.X === textContent.rowAt(cursor.Y).length) {\n          textContent.insertNewRowAt(cursor.Y + 1);\n          cursor.setPosition([0, cursor.Y + 1]);\n        }\n        // middle of line, split line into two\n        else {\n          const rowToSpit = textContent.rowAt(cursor.Y),\n            firstLine = rowToSpit.slice(0, cursor.X),\n            secondLine = rowToSpit.slice(cursor.X, rowToSpit.length);\n          textContent.replaceRowAt(cursor.Y, new TextRow<string>(firstLine));\n          textContent.insertNewRowAt(cursor.Y + 1);\n          textContent.replaceRowAt(\n            cursor.Y + 1,\n            new TextRow<string>(secondLine)\n          );\n          cursor.setPosition([0, cursor.Y + 1]);\n        }\n        break;\n      }\n      case \"Backspace\": {\n        if (cursor.X > 0) {\n          // delete item behind cursor\n          currentRow.deleteAt(cursor.X - 1);\n          cursor.moveLeft();\n        } else {\n          // if prev line exist,\n          if (textContent.rowAt(cursor.Y - 1)) {\n            // handle merge of prev line and current line\n            const orgLen = textContent.rowAt(cursor.Y - 1).length;\n            const newRow = textContent\n              .rowAt(cursor.Y - 1)\n              .concat(textContent.rowAt(cursor.Y));\n            textContent.replaceRowAt(cursor.Y - 1, newRow);\n            textContent.removeRowAt(cursor.Y);\n            cursor.setPosition([orgLen, cursor.Y - 1]);\n          }\n          // there is no prev line, we are already at the first row\n          // leave cursor where it is\n        }\n        break;\n      }\n      case \"Tab\": {\n        // Lol all tabs as spaces for now\n        currentRow.push(\" \");\n        currentRow.push(\" \");\n        currentRow.push(\" \");\n        currentRow.push(\" \");\n        cursor.moveRight(4);\n        break;\n      }\n      default:\n        if (OPEN_BRACKETS.has(e.key)) {\n          currentRow.insertValueAt(cursor.X, e.key);\n          cursor.moveRight();\n          currentRow.insertValueAt(cursor.X, BRACKETS_PAIR[e.key]);\n        } else {\n          currentRow.insertValueAt(cursor.X, e.key);\n          cursor.moveRight();\n        }\n        break;\n    }\n  }\n\n  textContent.textHL[cursor.Y] = updateRowSyntaxHighlighting(\n    textContent.rowAt(cursor.Y)\n  );\n  requestRender();\n}\n","export function initializeCanvas() {\n  const ratio = window.devicePixelRatio;\n  const cv = document.getElementById(\"myCanvas\") as HTMLCanvasElement;\n  const div = document.getElementById(\"canvasContainer\");\n  cv.width = div.clientWidth;\n  cv.height = div.clientHeight;\n  // get current size of the canvas\n  const rect = div.getBoundingClientRect();\n  // increase the actual size of our canvas\n  cv.width = rect.width * ratio;\n  cv.height = rect.height * ratio;\n  // ensure all drawing operations are scaled\n  cv.getContext(\"2d\").scale(ratio, ratio);\n  // scale everything down using CSS\n  cv.style.width = rect.width + \"px\";\n  cv.style.height = rect.height + \"px\";\n\n  return { canvas: cv, context: cv.getContext(\"2d\") };\n}\n","export const defaultTheme: ColorTheme = {\n  name: \"Dracula\",\n  background: \"#282a36\",\n  foreground: \"#f8f8f2\",\n  line: \"#44475a\",\n  keyword: \"#ff79c6\",\n  title: \"#50fa7b\",\n  text: \"#f8f8f2\",\n  link: \"#8be9fd\",\n  string: \"#f1fa8c\",\n  cursor: \"#8be9fd\",\n  comment: \"#6272a4\",\n  number: \"#bd93f9\",\n};\n\nexport interface ColorTheme {\n  name: string; // name of the theme\n  background: string;\n  foreground: string;\n  line: string;\n  keyword: string;\n  title: string;\n  text: string;\n  link: string;\n  cursor: string;\n  string: string;\n  comment: string;\n  number: string;\n}\n","import {\n  EditorHighlight,\n  Cursor,\n  TextContent,\n  Scroll,\n  FontContext,\n  ThemeProvider,\n  LineNumberContext,\n} from \"../models\";\n\nfunction renderText(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D,\n  fontContext: FontContext,\n  textContent: TextContent,\n  scroller: Scroll,\n  lineNumberContext: LineNumberContext,\n  themeProvider: ThemeProvider,\n  cursor: Cursor\n) {\n  // Store the current transformation matrix\n  context.save();\n  // Use the identity matrix while clearing the canvas\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  // Restore the transform\n  context.restore();\n\n  context.fillStyle = themeProvider.theme.background;\n  context.fillRect(0, Math.abs(scroller.Y), canvas.width, canvas.height);\n\n  for (const [indexY, row] of textContent.entries()) {\n    context.fillStyle = themeProvider.theme.text;\n\n    // Line highlight\n    if (cursor.Y === indexY) {\n      context.save();\n      context.fillStyle = themeProvider.theme.line;\n      context.globalAlpha = 0.4;\n      context.fillRect(\n        0,\n        fontContext.height * indexY,\n        canvas.width,\n        fontContext.height + fontContext.linePadding + fontContext.linePadding\n      );\n      context.restore();\n    }\n\n    // Line numbers\n    context.save();\n    context.fillStyle = themeProvider.theme.number;\n    context.fillText(\n      lineNumberContext.generateLineNumberText(indexY),\n      0,\n      fontContext.height * (indexY + 1)\n    );\n    context.restore();\n\n    for (const [indexX, char] of row.entries()) {\n      context.save();\n      switch (textContent.textHL[indexY][indexX]) {\n        case EditorHighlight.HL_NUMBER:\n          context.fillStyle = themeProvider.theme.number;\n          break;\n        case EditorHighlight.HL_STRING:\n          context.fillStyle = themeProvider.theme.string;\n          break;\n        case EditorHighlight.HL_COMMENT:\n          context.fillStyle = themeProvider.theme.comment;\n          break;\n        case EditorHighlight.HL_KEYWORD1:\n          context.fillStyle = themeProvider.theme.keyword;\n          break;\n        case EditorHighlight.HL_KEYWORD2:\n          context.fillStyle = themeProvider.theme.link;\n          break;\n        default:\n          context.fillStyle = themeProvider.theme.text;\n          break;\n      }\n\n      context.fillText(\n        char,\n        lineNumberContext.offset + fontContext.width * indexX,\n        fontContext.height * (indexY + 1)\n      );\n      context.restore();\n    }\n  }\n}\n\nfunction renderCursor(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D,\n  fontContext: FontContext,\n  cursor: Cursor,\n  lineNumberContext: LineNumberContext,\n  themeProvider: ThemeProvider\n) {\n  context.save();\n  context.beginPath();\n  context.moveTo(\n    lineNumberContext.offset + cursor.X * fontContext.width,\n    cursor.Y * fontContext.height + 1\n  );\n  context.lineTo(\n    lineNumberContext.offset + cursor.X * fontContext.width,\n    cursor.Y * fontContext.height +\n      fontContext.height +\n      2 * fontContext.linePadding\n  );\n  context.lineWidth = 2;\n  context.strokeStyle = themeProvider.theme.cursor;\n  context.stroke();\n  context.restore();\n}\n\nexport default function renderScreen(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D,\n  fontContext: FontContext,\n  cursor: Cursor,\n  textContent: TextContent,\n  scroller: Scroll,\n  lineNumberContext: LineNumberContext,\n  themeProvider: ThemeProvider\n) {\n  renderText(\n    canvas,\n    context,\n    fontContext,\n    textContent,\n    scroller,\n    lineNumberContext,\n    themeProvider,\n    cursor\n  );\n  renderCursor(\n    canvas,\n    context,\n    fontContext,\n    cursor,\n    lineNumberContext,\n    themeProvider\n  );\n}\n","import { handleClick, handleKey, handleScroll } from \"./handlers\";\nimport { initializeCanvas } from \"./initializers/initialize-canvas\";\nimport {\n  Cursor,\n  FontContext,\n  LineNumberContext,\n  Scroll,\n  TextContent,\n  ThemeProvider,\n} from \"./models\";\nimport renderScreen from \"./renderers/render-screen\";\nimport { FileRegistry } from \"./services\";\n\n// Set up and inject dependencies\nexport const { canvas, context } = initializeCanvas();\nexport const themeProvider = new ThemeProvider();\nexport const fontContext = new FontContext(context, \"Courier New\", 16, 4);\nexport const textContent = new TextContent(fontContext);\nexport const lineNumberContext = new LineNumberContext(\n  textContent,\n  fontContext\n);\nexport const cursor = new Cursor(textContent);\nexport const scroll = new Scroll(canvas, context, textContent);\n\n// Connect render to dependencies\nexport function requestRender() {\n  window.requestAnimationFrame(() =>\n    renderScreen(\n      canvas,\n      context,\n      fontContext,\n      cursor,\n      textContent,\n      scroll,\n      lineNumberContext,\n      themeProvider\n    )\n  );\n}\n\n// Set up event handlers\ndocument.addEventListener(\"keydown\", handleKey);\ncanvas.addEventListener(\"mousedown\", (e) =>\n  handleClick(\n    e,\n    canvas,\n    textContent,\n    fontContext,\n    lineNumberContext,\n    cursor,\n    scroll\n  )\n);\nwindow.addEventListener(\"wheel\", handleScroll);\nwindow.addEventListener(\"resize\", () => {\n  initializeCanvas();\n  fontContext.setFontStyle();\n  requestRender();\n});\ndocument.getElementById(\"openFileButton\").addEventListener(\"click\", () => {\n  FileRegistry.promptFileSelect().then((file) =>\n    FileRegistry.getFileContents(file).then((data) => {\n      textContent.readFromFile(file.name, data);\n      requestRender();\n    })\n  );\n});\ndocument.getElementById(\"saveFileButton\").addEventListener(\"click\", () => {\n  FileRegistry.saveFileContents(textContent.name, textContent).then(() => {\n    alert(`${textContent.name} saved`);\n  });\n});\n\n// Initialize view by calling first render\nrequestRender();\n","import { ColorTheme, defaultTheme } from \"../configuration/colors\";\n\nexport class ThemeProvider {\n  private _theme: ColorTheme = defaultTheme;\n  constructor(theme?: ColorTheme) {\n    this._theme = theme || defaultTheme;\n  }\n\n  get theme() {\n    return this._theme;\n  }\n}\n","/**\n * A context object that can be used to set the font for a canvas and\n * calculate the height or width of a character given a specific font\n * and font size. This is the basis for creating a grid of characters.\n */\nexport class FontContext {\n  private _height: number;\n  private _width: number;\n  private _fontSize: number;\n  private _linePadding: number;\n  private _font = \"Courier New\";\n  private context: CanvasRenderingContext2D;\n\n  constructor(\n    context: CanvasRenderingContext2D,\n    font: string,\n    fontSize: number,\n    linePadding: number\n  ) {\n    this._font = font || \"Courier New\";\n    this._fontSize = fontSize;\n    context.font = `${this._fontSize}px ${this._font}`;\n    this._width = context.measureText([\"a\"].join(\"\")).width;\n    this._linePadding = linePadding;\n    this.context = context;\n  }\n\n  get height() {\n    return this._fontSize + this._linePadding;\n  }\n\n  get linePadding() {\n    return this._linePadding;\n  }\n\n  get width() {\n    return this._width;\n  }\n\n  get fontStyle() {\n    return `${this._fontSize}px ${this._font}`;\n  }\n\n  setFontStyle() {\n    this.context.font = `${this._fontSize}px ${this._font}`;\n  }\n}\n","import { EditorHighlight } from \"./editor-highlight\";\nimport { TextRow } from \"./text-row\";\nimport { updateRowSyntaxHighlighting } from \"../renderers/update-row-syntax-highlighing\";\nimport { FontContext } from \"./font-context\";\n\nexport class TextContent {\n  private _text: TextRow<string>[] = [new TextRow()];\n  private _text_hl: EditorHighlight[][] = [[]];\n  private _buffer: TextRow<string>[] = [];\n  private _fileName = \"untitled.txt\";\n  private _fontContext: FontContext;\n\n  constructor(fontContext: FontContext, text?: TextRow<string>[]) {\n    this._fontContext = fontContext;\n    this._text = text || [new TextRow()];\n  }\n\n  get name() {\n    return this._fileName;\n  }\n\n  /**\n   * Return display height (rows * height of rows)\n   */\n  get contentHeight() {\n    return this._text.length * this._fontContext.height;\n  }\n\n  get length() {\n    return this._text.length;\n  }\n\n  get buffer() {\n    return this._buffer;\n  }\n\n  get textHL() {\n    return this._text_hl;\n  }\n\n  // used when calculating offset on render to place line numbers on left\n  get lineNumberWidth() {\n    return this.length.toString().length;\n  }\n\n  readFromFile(name: string, s: string) {\n    this._fileName = name || \"untitled.txt\";\n    const rows = s.split(\"\\n\");\n    const rowOfRows = [];\n    const rowOfRowsHL = [];\n    for (const rowIn of rows) {\n      const r = new TextRow(rowIn.split(\"\"));\n      rowOfRows.push(r);\n      rowOfRowsHL.push(updateRowSyntaxHighlighting(r));\n    }\n    this._text = rowOfRows;\n    this._text_hl = rowOfRowsHL;\n  }\n\n  /**\n   * Convert to an array buffer for saving to file\n   */\n  toArrayBuffer() {\n    const flattenedArr: string[] = [];\n    for (const row of this._text) {\n      flattenedArr.push([...row, \"\\n\"].join(\"\"));\n    }\n    const flattenedString = flattenedArr.join(\"\");\n    const buf = new ArrayBuffer(flattenedArr.length);\n    const bufView = new Uint8Array(buf);\n    for (let i = 0, strLen = flattenedArr.length; i < strLen; i++) {\n      bufView[i] = flattenedString.charCodeAt(i);\n    }\n    return buf;\n  }\n\n  addRowToBuffer(row: TextRow<string>) {\n    this._buffer.push(row.clone());\n  }\n\n  setBuffer(rows: TextRow<string>[]) {\n    this._buffer = rows.map((r) => r.clone());\n  }\n\n  clearBuffer() {\n    this._buffer = [];\n  }\n\n  rowAt(y: number): TextRow<string> {\n    return this._text[y];\n  }\n\n  charAt(x: number, y: number) {\n    const row = this._text[y];\n    if (row) {\n      return row.get(x);\n    }\n    return undefined;\n  }\n\n  insertNewRowAt(y: number, row = new TextRow<string>()): void {\n    this._text_hl.splice(y, 0, updateRowSyntaxHighlighting(row));\n    this._text.splice(y, 0, row);\n  }\n\n  insertNewRowsAt(y: number, rows: TextRow<string>[] = []): void {\n    this._text.splice(y, 0, ...rows);\n  }\n\n  replaceRowAt(y: number, withRow: TextRow<string>): void {\n    this._text_hl[y] = updateRowSyntaxHighlighting(withRow);\n    this._text[y] = withRow;\n  }\n\n  removeRowAt(y: number): void {\n    this._text.splice(y, 1);\n  }\n\n  *entries(): Generator<[number, TextRow<string>], void, unknown> {\n    for (const [i, item] of this._text.entries()) {\n      yield [i, item];\n    }\n  }\n\n  *stream(): Generator<string, void, unknown> {\n    for (const row of this._text) {\n      for (const char of row) {\n        yield char;\n      }\n      yield \"\\n\";\n    }\n  }\n\n  peekableStream(): PeekableGenerator<string> {\n    const stream = this.stream();\n    let state = stream.next();\n\n    const peekGen: PeekableGenerator<string> = (function* () {\n      while (!state.done) {\n        const current = state.value;\n        state = stream.next();\n        yield current;\n      }\n      return state.value;\n    })();\n    peekGen.peek = () => state;\n\n    return peekGen;\n  }\n}\n\ntype PeekableGenerator<T> = Generator<T | void, void, unknown> & {\n  peek?: () => IteratorResult<T, void>;\n};\n","import { FontContext } from \"./font-context\";\nimport { TextContent } from \"./text-content\";\n\nexport class LineNumberContext {\n  private _textContext: TextContent;\n  private _fontContext: FontContext;\n\n  constructor(textContent: TextContent, fontContext: FontContext) {\n    this._textContext = textContent;\n    this._fontContext = fontContext;\n  }\n\n  get lineNumberWidth() {\n    // +1 is needed for the extra | char we add in\n    return this._textContext.lineNumberWidth + 1;\n  }\n\n  get offset() {\n    return this.lineNumberWidth * this._fontContext.width;\n  }\n\n  generateLineNumberText(lineNumber: number) {\n    return (\n      new Array(this.lineNumberWidth - lineNumber.toString().length).join(\" \") +\n      lineNumber.toString() +\n      \"|\"\n    );\n  }\n}\n","import { TextContent } from \"./text-content\";\n\nexport class Cursor {\n  private cursorX = 0;\n  private cursorY = 0;\n  private textContent: TextContent;\n\n  constructor(textArea: TextContent) {\n    this.textContent = textArea;\n  }\n\n  get X(): number {\n    return this.cursorX;\n  }\n\n  get Y(): number {\n    return this.cursorY;\n  }\n\n  setPosition([x, y]) {\n    this.cursorX = x;\n    this.cursorY = y;\n  }\n\n  get position() {\n    return [this.cursorX, this.cursorY];\n  }\n\n  moveRight(by = 1) {\n    if (this.textContent.charAt(this.cursorX, this.cursorY)) {\n      this.cursorX += by;\n    } else if (this.textContent.rowAt(this.cursorY)) {\n      this.setPosition([\n        this.textContent.rowAt(this.cursorY).length,\n        this.cursorY,\n      ]);\n    }\n  }\n\n  moveLeft(by = 1) {\n    if (this.cursorX - by >= 0) {\n      this.cursorX -= by;\n    }\n  }\n\n  moveUp(by = 1) {\n    if (this.cursorY - by >= 0) {\n      const charAbove = this.textContent.charAt(this.cursorX, this.cursorY - 1);\n      const rowAbove = this.textContent.rowAt(this.cursorY - 1);\n      if (charAbove) {\n        this.cursorY -= by;\n      } else if (rowAbove) {\n        this.setPosition([rowAbove.length, this.cursorY - 1]);\n      }\n    }\n  }\n\n  moveDown(by = 1) {\n    const charBelow = this.textContent.charAt(this.cursorX, this.cursorY + 1);\n    const rowBelow = this.textContent.rowAt(this.cursorY + 1);\n    if (charBelow) {\n      this.cursorY += by;\n    } else if (rowBelow) {\n      this.setPosition([rowBelow.length, this.cursorY + 1]);\n    }\n  }\n}\n","import { TextContent } from \"./text-content\";\n\nexport class Scroll {\n  private cursorX = 0;\n  private cursorY = 0;\n  private _context = undefined;\n  private _canvas = undefined;\n  private _textContent: TextContent;\n  constructor(canvas, context, textContent: TextContent) {\n    this._context = context;\n    this._canvas = canvas;\n    this._textContent = textContent;\n  }\n\n  get X(): number {\n    return this.cursorX;\n  }\n\n  get Y(): number {\n    return this.cursorY;\n  }\n\n  scrollUp(by = 200) {\n    if (this.cursorY >= 0) {\n      this.cursorY == 0;\n    } else if (this.cursorY + by > 0) {\n      this._context.translate(0, Math.abs(this.cursorY));\n      this.cursorY += Math.abs(this.cursorY);\n    } else {\n      this.cursorY += by;\n      this._context.translate(0, by);\n    }\n  }\n\n  // Todo: scroll speed leads to different results\n  scrollDown(by = 200) {\n    if (\n      Math.abs(this.cursorY) + this._canvas.getBoundingClientRect().height <\n      this._textContent.contentHeight\n    ) {\n      this.cursorY -= by;\n      this._context.translate(0, 0 - by);\n    } else if (\n      Math.abs(this.cursorY) + this._canvas.getBoundingClientRect().height >=\n      this._textContent.contentHeight\n    ) {\n      // Do nothing\n    } else {\n      const remainingHeight =\n        Math.abs(this.cursorY) +\n        this._canvas.getBoundingClientRect().height -\n        this._textContent.contentHeight;\n      this.cursorY -= remainingHeight;\n      this._context.translate(0, 0 - remainingHeight);\n    }\n  }\n}\n","import { scroll, requestRender } from \"../app\";\n\nexport function handleScroll(e: WheelEvent) {\n  const scrollValue = e.deltaY;\n  if (scrollValue > 0) {\n    scroll.scrollDown(Math.abs(scrollValue));\n  } else {\n    scroll.scrollUp(Math.abs(scrollValue));\n  }\n  requestRender();\n}\n"],"names":["$f99a71eeadf618a9$export$b981489921ee18cd","event","canvas","textContent","fontContext","lineNumberContext","cursor","scroll","x","y","clientWidth","clientHeight","rect","getBoundingClientRect","Math","round","X","left","offset","width","abs","Y","top","height","$f99a71eeadf618a9$export$5cc6687e4fba1dbf","clientX","clientY","charAt","setPosition","rowAt","length","$f43313d21d3fd8e2$export$4e43dc34db4a80af","$03a16a842b07cc30$export$c6fe3936e6366f70","data","gapSize","this","gapStart","gapEnd","buff","Array","concat","g","item","push","delete","ix","moveGap","insert","value","splice","get","slice","ix2","pop","val","delta","i","_arr","Symbol","iterator","publicIndex","$1c58683fe1a64031$export$63e2a8b9f6372df7","array","_text","insertValueAt","index","deleteAt","row","clone","entries","$e7b21b2df11b04ee$export$582250794ca52d9c","getFileContents","file","text","saveFileContents","name","tc","newHandle","window","showSaveFilePicker","suggestedName","writableStream","createWritable","write","toArrayBuffer","close","promptFileSelect","fileHandlerList","showOpenFilePicker","multiple","getFile","$7e28cedeb61716a4$export$eeb4adacbff52521","$74a1630e391a5f1d$export$33a13745f5692414","Set","$74a1630e391a5f1d$export$b2089216fe419d98","$74a1630e391a5f1d$export$5b243cfa8f80d63b","$74a1630e391a5f1d$var$isSeparator","s","trim","undefined","$74a1630e391a5f1d$var$isWhitespace","match","$74a1630e391a5f1d$export$303d989387e35475","HLArr","fill","HL_NORMAL","in_string","prev_sep","ch","HL_STRING","isNaN","Number","HL_NUMBER","HL_COMMENT","old_prev_sep","kw","klen","cw","join","secondary","has","j","HL_KEYWORD2","HL_KEYWORD1","$04f270dc7db7277e$var$OPEN_BRACKETS","$04f270dc7db7277e$var$BRACKETS_PAIR","$26fef507ba5598d5$export$b406831a776679de","ratio","devicePixelRatio","cv","document","getElementById","div","getContext","scale","style","context","$f7e6de5c7da2669a$export$164de7ab8df77ef0","background","foreground","line","keyword","title","link","string","comment","number","scroller","themeProvider","save","setTransform","clearRect","restore","fillStyle","theme","fillRect","indexY","globalAlpha","linePadding","fillText","generateLineNumberText","indexX","char","textHL","$13f717a4bbe24257$var$renderText","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","$13f717a4bbe24257$var$renderCursor","$f43313d21d3fd8e2$export$67ea982130081db","$f43313d21d3fd8e2$export$a078c61943f9dbbe","$f43313d21d3fd8e2$export$6629d1f426b4c47a","_theme","$f43313d21d3fd8e2$export$a5c631d8afd87f93","font","fontSize","_font","_fontSize","_width","measureText","_linePadding","fontStyle","setFontStyle","$f43313d21d3fd8e2$export$e0e0794250e9118f","_text_hl","_buffer","_fileName","_fontContext","contentHeight","buffer","lineNumberWidth","toString","readFromFile","rows","split","rowOfRows","rowOfRowsHL","rowIn","r","flattenedArr","flattenedString","buf","ArrayBuffer","bufView","Uint8Array","strLen","charCodeAt","addRowToBuffer","setBuffer","map","clearBuffer","insertNewRowAt","insertNewRowsAt","replaceRowAt","withRow","removeRowAt","peekableStream","stream","state","next","peekGen","done","current","peek","$f43313d21d3fd8e2$export$241d17bd978bd2d6","_textContext","lineNumber","$f43313d21d3fd8e2$export$58734539bbfa41a2","textArea","cursorX","cursorY","position","moveRight","by","moveLeft","moveUp","charAbove","rowAbove","moveDown","charBelow","rowBelow","$f43313d21d3fd8e2$export$209876d7b1ac8f3","_context","_canvas","_textContent","scrollUp","translate","scrollDown","remainingHeight","requestAnimationFrame","$13f717a4bbe24257$export$2e2bcd8739ae039","addEventListener","e","preventDefault","metaKey","shiftKey","includes","code","ctrlKey","then","alert","currentRow","rowToSpit","firstLine","secondLine","orgLen","newRow","key","scrollValue","deltaY"],"version":3,"file":"index.a3a01a3f.js.map"}