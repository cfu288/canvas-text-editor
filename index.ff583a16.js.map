{"mappings":"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","sources":["src/initializers/create-canvas.ts","src/configuration/colors.ts","src/models/editor-highlight.ts","src/renderers/update-row-syntax-highlighing.ts","src/renderers/render-screen.ts","src/models/text-content.ts","src/services/file-registry.ts","src/handlers/handle-key.ts","src/initializers/init-font-and-grid.ts","src/app.ts","src/models/cursor.ts","src/models/scroll.ts","src/handlers/handle-click.ts"],"sourcesContent":["export function createCanvas() {\n  let ratio = window.devicePixelRatio;\n  let cv = document.getElementById(\"myCanvas\") as HTMLCanvasElement;\n  let div = document.getElementById(\"canvasContainer\");\n  cv.width = div.clientWidth;\n  cv.height = div.clientHeight;\n  // get current size of the canvas\n  let rect = div.getBoundingClientRect();\n  // increase the actual size of our canvas\n  cv.width = rect.width * ratio;\n  cv.height = rect.height * ratio;\n  // ensure all drawing operations are scaled\n  cv.getContext(\"2d\").scale(ratio, ratio);\n  // scale everything down using CSS\n  cv.style.width = rect.width + \"px\";\n  cv.style.height = rect.height + \"px\";\n\n  return { canvas: cv, context: cv.getContext(\"2d\") };\n}\n","export const colors = {\n  background: \"#282a36\",\n  keyword: \"#ff79c6\",\n  title: \"#50fa7b\",\n  text: \"#f8f8f2\",\n  link: \"#8be9fd\",\n  string: \"#f1fa8c\",\n  cursor: \"#8be9fd\",\n  comment: \"#6272a4\",\n  number: \"#bd93f9\",\n};\n","export enum EditorHighlight {\n  HL_NORMAL = 0,\n  HL_NUMBER = 1,\n  HL_STRING = 2,\n  HL_COMMENT = 3,\n  HL_KEYWORD1 = 4,\n  HL_KEYWORD2 = 5,\n}\n","import { EditorHighlight } from \"../models/editor-highlight\";\n\nexport const KEYWORDS1 = new Set([\"export\", \"import\", \"new\"]);\n\nexport const KEYWORDS1SET = new Set(KEYWORDS1);\n\nexport const KEYWORDS = [\n  \"await\",\n  \"break\",\n  \"case\",\n  \"class\",\n  \"const\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"delete\",\n  \"do\",\n  \"else\",\n  \"enum\",\n  \"export\",\n  \"extends\",\n  \"false\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"implements\",\n  \"import\",\n  \"in\",\n  \"interface\",\n  \"let\",\n  \"new\",\n  \"null\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"return\",\n  \"static\",\n  \"super\",\n  \"switch\",\n  \"this\",\n  \"throw\",\n  \"try\",\n  \"var\",\n].concat([...KEYWORDS1]);\n\nfunction isComment(r: string[]) {\n  return r?.[0] === \"/\" && r?.[1] === \"/\";\n}\n\nfunction isDigit(s: string) {\n  return !isNaN(Number(s));\n}\n\nfunction isSeparator(s: string) {\n  return isWhitespace(s) || s === \"\\0\" || !!s.match(\"/^[,.()+-/*=~%<>;]/\");\n}\n\nfunction isWhitespace(s: string) {\n  return s.trim().length === 0;\n}\n\n// Row based syntax highlighting\nexport function updateRowSyntaxHighlighting(row: string[]) {\n  const HLArr = Array(row.length).fill(EditorHighlight.HL_NORMAL);\n\n  // store if prev char was a separator char\n  let prev_sep = true;\n  // store whether currently in a string, and which character was used to start the string\n  let in_string: string | undefined = undefined;\n\n  let i = 0;\n  while (i < row.length) {\n    const ch = row[i];\n\n    // handle string highlighting\n    if (in_string !== undefined) {\n      HLArr.splice(i, 1, EditorHighlight.HL_STRING);\n      if (ch === \"\\\\\" && i + 1 < row.length) {\n        HLArr.splice(i, 1, EditorHighlight.HL_STRING);\n        i++;\n      }\n      if (ch === in_string) {\n        in_string = undefined;\n      }\n      prev_sep = true;\n    } else if (ch === '\"' || ch === \"'\") {\n      in_string = ch;\n      HLArr.splice(i, 1, EditorHighlight.HL_STRING);\n    }\n\n    // handle number highlighting\n    if (\n      (isDigit(ch) &&\n        (prev_sep || HLArr[i - 1] === EditorHighlight.HL_NUMBER)) ||\n      (ch == \".\" && HLArr[i - 1] == EditorHighlight.HL_NUMBER)\n    ) {\n      HLArr.splice(i, 1, EditorHighlight.HL_NUMBER);\n    }\n\n    // handle comments\n    if (isComment(row)) {\n      HLArr.length = row.length;\n      HLArr.fill(EditorHighlight.HL_COMMENT);\n      i = row.length;\n    }\n\n    const old_prev_sep = prev_sep;\n    prev_sep = isSeparator(ch);\n\n    // keywords\n    if (old_prev_sep) {\n      // if the prev char was a seperator, check if next n chars in row is a keyword\n      for (const kw of KEYWORDS) {\n        // For now, just loop through keywords (inefficent)\n        // using length klen of keyword\n        const klen = kw.length;\n        // get the next klen chars of the current row to see if it is a keyword\n        const cw = row.slice(i, i + klen).join(\"\");\n        if (cw === kw && row[i + klen] && isSeparator(row[i + klen])) {\n          const secondary = KEYWORDS1SET.has(cw);\n          // It is a keyword, mark it in the HL array\n          for (let j = 0; j < klen; j++) {\n            if (secondary) {\n              HLArr.splice(i + j, 1, EditorHighlight.HL_KEYWORD2);\n            } else {\n              HLArr.splice(i + j, 1, EditorHighlight.HL_KEYWORD1);\n            }\n          }\n          // move index past the current key word to skip reprocessing\n          i += klen;\n          prev_sep = true;\n          break;\n        }\n      }\n    }\n\n    i++;\n  }\n  return HLArr;\n}\n","import { colors } from \"../configuration/colors\";\nimport { charXY, cursor, textContent } from \"../app\";\nimport { updateRowSyntaxHighlighting } from \"./update-row-syntax-highlighing\";\nimport { EditorHighlight } from \"../models/editor-highlight\";\nimport { scroller } from \"../app\";\n\nexport function renderText(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D,\n) {\n  // Store the current transformation matrix\n  context.save();\n\n  // Use the identity matrix while clearing the canvas\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.clearRect(0, 0, canvas.width, canvas.height);\n\n  // Restore the transform\n  context.restore();\n\n  context.fillStyle = colors.background;\n  context.fillRect(0, Math.abs(scroller.Y), canvas.width, canvas.height);\n\n  for (const [indexY, row] of textContent.text.entries()) {\n    // move this to update text row\n    textContent.textHL[indexY] = updateRowSyntaxHighlighting(row.text);\n\n    context.fillStyle = colors.text;\n    for (const [indexX, char] of row.entries()) {\n      context.save();\n      if (textContent.textHL[indexY][indexX] === EditorHighlight.HL_NUMBER) {\n        context.fillStyle = colors.number;\n      } else if (\n        textContent.textHL[indexY][indexX] === EditorHighlight.HL_STRING\n      ) {\n        context.fillStyle = colors.string;\n      } else if (\n        textContent.textHL[indexY][indexX] === EditorHighlight.HL_COMMENT\n      ) {\n        context.fillStyle = colors.comment;\n      } else if (\n        textContent.textHL[indexY][indexX] === EditorHighlight.HL_KEYWORD1\n      ) {\n        context.fillStyle = colors.keyword;\n      } else if (\n        textContent.textHL[indexY][indexX] === EditorHighlight.HL_KEYWORD2\n      ) {\n        context.fillStyle = colors.link;\n      }\n      context.fillText(char, charXY[0] * indexX, charXY[1] * (indexY + 1));\n      context.restore();\n    }\n  }\n}\n\nexport function renderCursor(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D\n) {\n  context.save();\n  context.beginPath();\n  context.moveTo(cursor.X * charXY[0] + 2, cursor.Y * charXY[1] + 1);\n  context.lineTo(\n    cursor.X * charXY[0] + 2,\n    cursor.Y * charXY[1] + charXY[1] + 4\n  );\n  context.lineWidth = 2;\n  context.strokeStyle = colors.cursor;\n  context.stroke();\n  context.restore();\n}\n\nexport function renderScreen(\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D\n) {\n  renderText(canvas, context);\n  renderCursor(canvas, context);\n}\n","import { EditorHighlight } from \"./editor-highlight\";\nexport class TextContent {\n  private _text: TextRow<string>[] = [new TextRow()];\n  private _text_hl: EditorHighlight[][] = [[]];\n  private _buffer: TextRow<string>[] = [];\n  constructor() {}\n\n  readFromFile(s: string) {\n    const rows = s.split(\"\\n\");\n    console.log(rows);\n    const rowOfRows = [];\n    for (const rowIn of rows) {\n      rowOfRows.push(new TextRow(rowIn.split(\"\")));\n    }\n    this._text = rowOfRows;\n  }\n\n  get length() {\n    return this.text.length;\n  }\n\n  get buffer() {\n    return this._buffer;\n  }\n\n  addRowToBuffer(row: TextRow<string>) {\n    this._buffer.push(row.clone());\n  }\n\n  setBuffer(rows: TextRow<string>[]) {\n    this._buffer = rows.map((r) => r.clone());\n  }\n\n  clearBuffer() {\n    this._buffer = [];\n  }\n\n  get text(): TextRow<string>[] {\n    return this._text;\n  }\n\n  get textHL() {\n    return this._text_hl;\n  }\n\n  rowAt(y: number): TextRow<string> {\n    return this._text[y];\n  }\n\n  charAt(x: number, y: number) {\n    const row = this._text[y];\n    if (row) {\n      return row.text[x];\n    }\n    return undefined;\n  }\n\n  insertNewRowAt(y: number, row = new TextRow<string>()): void {\n    this._text.splice(y, 0, row);\n  }\n\n  insertNewRowsAt(y: number, rows: TextRow<string>[] = []): void {\n    this._text.splice(y, 0, ...rows);\n  }\n\n  replaceRowAt(y: number, withRow: TextRow<string>): void {\n    this._text[y] = withRow;\n  }\n\n  removeRowAt(y: number): void {\n    this._text.splice(y, 1);\n  }\n}\n\nexport class TextRow<T> {\n  private _text: T[] = [];\n\n  constructor(array?: T[]) {\n    this._text = array || [];\n  }\n\n  clone() {\n    return new TextRow([...this._text]);\n  }\n\n  get text(): T[] {\n    return this._text;\n  }\n\n  get length(): number {\n    return this._text.length;\n  }\n\n  charAtIndex(i: number) {\n    return this._text[i];\n  }\n\n  entries(): IterableIterator<[number, T]> {\n    return this._text.entries();\n  }\n\n  concat(row: TextRow<T>): TextRow<T> {\n    this._text.concat(row.text);\n    return this;\n  }\n\n  concatRaw(row: T[]): TextRow<T> {\n    this._text.concat(row);\n    return this;\n  }\n\n  insertValueAt(index: number, value: T): void {\n    this._text.splice(index, 0, value);\n  }\n\n  push(value: T): void {\n    this._text.push(value);\n  }\n\n  pop(): void {\n    this._text.pop();\n  }\n\n  deleteValueAt(index: number): void {\n    this._text.splice(index, 1);\n  }\n}\n","// import { fs, dialog, BaseDirectory } from \"@tauri-apps/api\";\n\nexport namespace FileRegistry {\n  export function getFileContents(file: File): Promise<string> {\n    return file.text();\n  }\n\n  /**\n   * Opens file select prompt and returns the selected file object\n   * @returns File object\n   */\n  export async function promptFileSelect(): Promise<File> {\n    const fileHandlerList = await window.showOpenFilePicker({\n      multiple: false,\n    });\n    const file = await fileHandlerList[0].getFile();\n    return file;\n  }\n}\n","import { renderScreen } from \"../renderers/render-screen\";\nimport { textContent, cursor, canvas, context, scroller } from \"../app\";\nimport { TextRow } from \"../models/text-content\";\nimport { FileRegistry } from \"../services/file-registry\";\n\nconst OPEN_BRACKETS = new Set([\"[\", \"{\", \"(\", '\"', \"'\"]);\nconst BRACKETS_PAIR = {\n  \"{\": \"}\",\n  \"[\": \"]\",\n  \"(\": \")\",\n  '\"': '\"',\n  \"'\": \"'\",\n};\n\nexport function handleKey(e: KeyboardEvent) {\n  e.preventDefault();\n  if (e.metaKey && e.shiftKey && [\"ArrowUp\", \"ArrowDown\"].includes(e.code)) {\n    switch (e.code) {\n      case \"ArrowDown\": {\n        scroller.scrollDown();\n        window.requestAnimationFrame(() => renderScreen(canvas, context));\n        break;\n      }\n      case \"ArrowUp\": {\n        scroller.scrollUp();\n        window.requestAnimationFrame(() => renderScreen(canvas, context));\n        break;\n      }\n      default:\n        break;\n    }\n  }\n  if (e.metaKey || e.ctrlKey) {\n    switch (e.code) {\n      case \"KeyO\": {\n        FileRegistry.promptFileSelect().then((file) =>\n          FileRegistry.getFileContents(file).then((data) => {\n            textContent.readFromFile(data);\n            window.requestAnimationFrame(() => renderScreen(canvas, context));\n          })\n        );\n        break;\n      }\n      case \"KeyX\": {\n        textContent.clearBuffer();\n        textContent.addRowToBuffer(textContent.rowAt(cursor.Y));\n        if (textContent.length > 1) {\n          textContent.removeRowAt(cursor.Y);\n        } else {\n          textContent.removeRowAt(cursor.Y);\n          textContent.insertNewRowAt(cursor.Y, new TextRow());\n        }\n        // Arrow up logic\n        const charAbove = textContent.charAt(cursor.X, cursor.Y - 1);\n        const rowAbove = textContent.rowAt(cursor.Y - 1);\n        if (charAbove) {\n          cursor.moveUp();\n        } else if (rowAbove) {\n          cursor.setPosition([rowAbove.length, cursor.Y - 1]);\n        }\n        break;\n      }\n      case \"KeyC\": {\n        textContent.clearBuffer();\n        textContent.addRowToBuffer(textContent.rowAt(cursor.Y));\n        break;\n      }\n      case \"KeyV\": {\n        textContent.insertNewRowsAt(cursor.Y, textContent.buffer);\n        // end of line\n        cursor.setPosition([textContent.rowAt(cursor.Y).length, cursor.Y]);\n        break;\n      }\n      default:\n        break;\n    }\n  } else {\n    let currentRow = textContent.rowAt(cursor.Y);\n    switch (e.code) {\n      case \"Escape\": {\n        break;\n      }\n      case \"MetaRight\": {\n        break;\n      }\n      case \"MetaLeft\": {\n        break;\n      }\n      case \"ShiftLeft\": {\n        break;\n      }\n      case \"ShiftRight\": {\n        break;\n      }\n      case \"ArrowLeft\": {\n        cursor.moveLeft();\n        break;\n      }\n      case \"ArrowRight\": {\n        if (textContent.charAt(cursor.X, cursor.Y)) {\n          cursor.moveRight();\n        } else if (textContent.rowAt(cursor.Y)) {\n          cursor.setPosition([textContent.rowAt(cursor.Y).length, cursor.Y]);\n        }\n        break;\n      }\n      case \"ArrowUp\": {\n        const charAbove = textContent.charAt(cursor.X, cursor.Y - 1);\n        const rowAbove = textContent.rowAt(cursor.Y - 1);\n        if (charAbove) {\n          cursor.moveUp();\n        } else if (rowAbove) {\n          cursor.setPosition([rowAbove.length, cursor.Y - 1]);\n        }\n        break;\n      }\n      case \"ArrowDown\": {\n        const charBelow = textContent.charAt(cursor.X, cursor.Y + 1);\n        const rowBelow = textContent.rowAt(cursor.Y + 1);\n        if (charBelow) {\n          cursor.moveDown();\n        } else if (rowBelow) {\n          cursor.setPosition([rowBelow.length, cursor.Y + 1]);\n        }\n        break;\n      }\n      case \"Enter\": {\n        // end of line, just move to new line\n        if (cursor.X === textContent.rowAt(cursor.Y).length) {\n          textContent.insertNewRowAt(cursor.Y + 1);\n          cursor.setPosition([0, cursor.Y + 1]);\n        }\n        // middle of line, split line into two\n        else {\n          const rowToSpit = textContent.rowAt(cursor.Y),\n            firstLine = rowToSpit.text.slice(0, cursor.X),\n            secondLine = rowToSpit.text.slice(cursor.X, rowToSpit.length);\n          textContent.replaceRowAt(cursor.Y, new TextRow<string>(firstLine));\n          textContent.insertNewRowAt(cursor.Y + 1);\n          textContent.replaceRowAt(\n            cursor.Y + 1,\n            new TextRow<string>(secondLine)\n          );\n          cursor.setPosition([0, cursor.Y + 1]);\n        }\n        break;\n      }\n      case \"Backspace\": {\n        if (cursor.X > 0) {\n          // delete item behind cursor\n          currentRow.deleteValueAt(cursor.X - 1);\n          cursor.moveLeft();\n        } else {\n          // if prev line exist,\n          if (textContent.text[cursor.Y - 1]) {\n            // handle merge of prev line and current line\n            const orgLen = textContent.rowAt(cursor.Y - 1).length;\n            const newRow = textContent\n              .rowAt(cursor.Y - 1)\n              .concat(textContent.text[cursor.Y]);\n            textContent.replaceRowAt(cursor.Y - 1, newRow);\n            textContent.removeRowAt(cursor.Y);\n            cursor.setPosition([orgLen, cursor.Y - 1]);\n          }\n          // there is no prev line, we are already at the first row\n          // leave cursor where it is\n        }\n        break;\n      }\n      case \"Tab\": {\n        currentRow.push(\" \");\n        currentRow.push(\" \");\n        currentRow.push(\" \");\n        currentRow.push(\" \");\n        cursor.moveRight(4);\n        break;\n      }\n      default:\n        if (OPEN_BRACKETS.has(e.key)) {\n          currentRow.insertValueAt(cursor.X, e.key);\n          cursor.moveRight();\n          currentRow.insertValueAt(cursor.X, BRACKETS_PAIR[e.key]);\n        } else {\n          currentRow.insertValueAt(cursor.X, e.key);\n          cursor.moveRight();\n        }\n        break;\n    }\n  }\n\n  window.requestAnimationFrame(() => renderScreen(canvas, context));\n}\n","export function initFontAndGrid(context: CanvasRenderingContext2D) {\n  // Initialize font size\n  const fontSize = 16;\n  const linePadding = 4;\n  const font = \"Courier New\";\n  context.font = `${fontSize}px ${font}`;\n\n  // Width and height of a single character, used to determine grid\n  const charXY: [width: number, height: number] = [\n    context.measureText([\"a\"].join(\"\")).width,\n    fontSize + linePadding,\n  ];\n  return {\n    font,\n    fontSize,\n    linePadding,\n    charXY,\n  };\n}\n","import { createCanvas } from \"./initializers/create-canvas\";\nimport { Cursor } from \"./models/cursor\";\nimport { Scroll } from \"./models/scroll\";\nimport { handleKey, handleClick } from \"./handlers\";\nimport { initFontAndGrid } from \"./initializers/init-font-and-grid\";\nimport { renderScreen } from \"./renderers/render-screen\";\nimport { TextContent } from \"./models/text-content\";\n\nexport const { canvas, context } = createCanvas();\nexport const { font, fontSize, linePadding, charXY } = initFontAndGrid(context);\nexport const cursor = new Cursor();\nexport const textContent = new TextContent();\nexport const scroller = new Scroll(context);\nconsole.log(\"scroller init\")\n\n\ndocument.addEventListener(\"keydown\", handleKey);\ncanvas.addEventListener(\"mousedown\", handleClick);\nwindow.addEventListener(\"resize\", () => {\n  createCanvas();\n  initFontAndGrid(context);\n  window.requestAnimationFrame(() => renderScreen(canvas, context));\n});\n\nwindow.requestAnimationFrame(() => renderScreen(canvas, context));\n","export class Cursor {\n  private cursorX: number = 0;\n  private cursorY: number = 0;\n  private cursorVisible: boolean = true;\n  constructor() {}\n\n  get X(): number {\n    return this.cursorX;\n  }\n\n  get Y(): number {\n    return this.cursorY;\n  }\n\n  setPosition([x, y]) {\n    this.cursorX = x;\n    this.cursorY = y;\n  }\n\n  get position() {\n    return [this.cursorX, this.cursorY];\n  }\n\n  moveRight(by: number = 1) {\n    this.cursorX += by;\n  }\n\n  moveLeft(by: number = 1) {\n    if (this.cursorX - by >= 0) {\n      this.cursorX -= by;\n    }\n  }\n\n  moveUp(by: number = 1) {\n    if (this.cursorY - by >= 0) {\n      this.cursorY -= by;\n    }\n  }\n\n  moveDown(by: number = 1) {\n    this.cursorY += by;\n  }\n}\n","export class Scroll {\n  private cursorX: number = 0;\n  private cursorY: number = 0;\n  private _context = undefined\n  constructor(context) {\n    this._context = context\n  }\n\n  get X(): number {\n    return this.cursorX;\n  }\n\n  get Y(): number {\n    return this.cursorY;\n  }\n\n  scrollUp(by: number = 200) {\n    if(this.cursorY >= 0){\n      this.cursorY == 0\n    }\n    else if (this.cursorY + by > 0) {\n      this._context.translate(0, Math.abs(this.cursorY));\n      this.cursorY += Math.abs(this.cursorY);\n    } \n    else {\n      this.cursorY += by;\n      this._context.translate(0, by);\n    }\n  }\n\n  scrollDown(by: number = 200) {\n    this.cursorY -= by;\n    this._context.translate(0, 0 - by);\n  }\n}","import { renderScreen } from \"../renderers/render-screen\";\nimport { textContent, cursor, canvas, context, charXY, scroller } from \"../app\";\nexport function getCharPositionFromCanvasPosition(\n  clientX,\n  clientY\n): [x: number, y: number] {\n  const rect = canvas.getBoundingClientRect();\n  const x = Math.round((scroller.X + clientX - rect.left) / charXY[0]);\n  const y = Math.round((Math.abs(scroller.Y) + clientY - rect.top) / charXY[1]) - 1;\n  return [x, y];\n}\n\nexport function handleClick(event: MouseEvent) {\n  const [x, y]: [number, number] = getCharPositionFromCanvasPosition(\n    event.clientX,\n    event.clientY\n  );\n  if (textContent.charAt(x, y)) {\n    cursor.setPosition([x, y]);\n  } else if (textContent.rowAt(y)) {\n    cursor.setPosition([textContent.rowAt(y).length, y]);\n  }\n  window.requestAnimationFrame(() => renderScreen(canvas, context));\n}\n"],"names":["$6a70f3eb2304cf39$export$cd3d1f114b139967","ratio","window","devicePixelRatio","cv","document","getElementById","div","width","clientWidth","height","clientHeight","rect","getBoundingClientRect","getContext","scale","style","canvas","context","$f7e6de5c7da2669a$export$8f45430ccf837300","$7e28cedeb61716a4$export$eeb4adacbff52521","$74a1630e391a5f1d$export$33a13745f5692414","Set","$74a1630e391a5f1d$export$b2089216fe419d98","$74a1630e391a5f1d$export$5b243cfa8f80d63b","concat","$74a1630e391a5f1d$var$isSeparator","s","trim","length","$74a1630e391a5f1d$var$isWhitespace","match","$74a1630e391a5f1d$export$303d989387e35475","row","HLArr","Array","fill","HL_NORMAL","in_string","prev_sep","i","ch","undefined","splice","HL_STRING","isNaN","Number","HL_NUMBER","r","HL_COMMENT","old_prev_sep","kw","klen","cw","slice","join","secondary","has","j","HL_KEYWORD2","HL_KEYWORD1","$13f717a4bbe24257$export$fdfa2e9363bf938e","save","setTransform","clearRect","restore","fillStyle","fillRect","Math","abs","$f43313d21d3fd8e2$export$f0c6b23f5e8dd3c1","Y","indexY","$f43313d21d3fd8e2$export$e0e0794250e9118f","text","entries","textHL","indexX","char","fillText","$f43313d21d3fd8e2$export$786302a38e97b5be","$13f717a4bbe24257$export$482c90f94eb9717c","beginPath","moveTo","$f43313d21d3fd8e2$export$58734539bbfa41a2","X","lineTo","lineWidth","strokeStyle","stroke","$13f717a4bbe24257$export$2fd24a2aa60fc106","$a5b748527088a40e$export$63e2a8b9f6372df7","array","this","_text","clone","charAtIndex","concatRaw","insertValueAt","index","value","push","pop","deleteValueAt","$e7b21b2df11b04ee$export$582250794ca52d9c","getFileContents","file","promptFileSelect","fileHandlerList","showOpenFilePicker","multiple","getFile","$04f270dc7db7277e$var$OPEN_BRACKETS","$04f270dc7db7277e$var$BRACKETS_PAIR","$e4b0f428631606fd$export$da9525949819ea40","font","measureText","fontSize","$f43313d21d3fd8e2$export$67ea982130081db","$f43313d21d3fd8e2$export$a078c61943f9dbbe","$f43313d21d3fd8e2$export$a74e2025f5286b02","$f43313d21d3fd8e2$export$85e3c3ca0c6fb93","linePadding","$f43313d21d3fd8e2$export$2236a8f6725eca69","charXY","cursorX","cursorY","cursorVisible","setPosition","x","y","position","moveRight","by","moveLeft","moveUp","moveDown","_text_hl","_buffer","readFromFile","rows","split","console","log","rowOfRows","rowIn","buffer","addRowToBuffer","setBuffer","map","clearBuffer","rowAt","charAt","insertNewRowAt","insertNewRowsAt","replaceRowAt","withRow","removeRowAt","_context","scrollUp","translate","scrollDown","addEventListener","e","preventDefault","metaKey","shiftKey","includes","code","requestAnimationFrame","ctrlKey","then","data","charAbove","rowAbove","currentRow","charBelow","rowBelow","rowToSpit","firstLine","secondLine","orgLen","newRow","key","event","clientX","clientY","round","left","top","$f99a71eeadf618a9$export$5cc6687e4fba1dbf"],"version":3,"file":"index.ff583a16.js.map"}